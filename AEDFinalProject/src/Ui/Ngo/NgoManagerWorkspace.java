/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Ui.Ngo;

import Funding.FundManager.FundManager;
import Hospital.Encounter.Appointment;
import Ngo.Budget.Budget;
import Ngo.CareTaker.Caretaker;
import Ngo.Children.Children;
import Ngo.NgoManager.NgoManager;
import Ngo.Order.NgoOrder;
import School.Application.Application;
import System.Directories.DB4OUtil;
import System.Directories.DataValidation;
import System.Directories.MainSystem;
import java.awt.CardLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author megha
 */

public class NgoManagerWorkspace extends javax.swing.JPanel {

    /**
     * Creates new form NgoManagerWorkspace
     */
    private JPanel cardPanel;
    private NgoManager ngoManager;
    private MainSystem system;
    private DB4OUtil dB4OUtil;
    private DataValidation data;
    private final String FILENAME = "ProjectDataBank.db4o";
    
    public NgoManagerWorkspace(NgoManager ngoManager, JPanel cardPanel,MainSystem system,DB4OUtil dB4OUtil) {
        initComponents();
        this.cardPanel = cardPanel;
        this.system = system;
        this.dB4OUtil = dB4OUtil;
        this.ngoManager = ngoManager;
        this.data = new DataValidation();
        
        populateFundManagerTable();
        populateCaretakerTable();
        populateChildrenEducationTable();
        populateChildrenCreateTable();
        populateChildrenHealthTable();
        populateAppoinmentTable();
        populateStudentApp();
        populateCombo();
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SplitPaneNgoManager = new javax.swing.JSplitPane();
        panelControl = new javax.swing.JPanel();
        btnHome = new javax.swing.JButton();
        btnEducation = new javax.swing.JButton();
        btnCaretaker = new javax.swing.JButton();
        btnChildren = new javax.swing.JButton();
        btnEssentialItems = new javax.swing.JButton();
        btnHealth = new javax.swing.JButton();
        panelWork = new javax.swing.JPanel();
        panelHome = new javax.swing.JPanel();
        lblTitle2 = new javax.swing.JLabel();
        lblRole = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        panelEducation = new javax.swing.JPanel();
        lblTitle7 = new javax.swing.JLabel();
        ScrollPane6 = new javax.swing.JScrollPane();
        tableChildrenApp = new javax.swing.JTable();
        lblChildName = new javax.swing.JLabel();
        txtChildName = new javax.swing.JTextField();
        lblApplicationNo = new javax.swing.JLabel();
        txtApplicationNo = new javax.swing.JTextField();
        txtChildAge = new javax.swing.JTextField();
        lblChildAge = new javax.swing.JLabel();
        lblChildName2 = new javax.swing.JLabel();
        txtChildDOB = new javax.swing.JTextField();
        lblChildName3 = new javax.swing.JLabel();
        lblChildName4 = new javax.swing.JLabel();
        txtChildSchool = new javax.swing.JTextField();
        lblChildName5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtChildComment = new javax.swing.JTextArea();
        lblStatus = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        ScrollPane8 = new javax.swing.JScrollPane();
        tableChildrenEducation = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblChildName6 = new javax.swing.JLabel();
        txtChildClass = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNgo = new javax.swing.JTextField();
        btnAutofill = new javax.swing.JButton();
        cmbChildGender = new javax.swing.JTextField();
        btnApply = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        panelCareTaker = new javax.swing.JPanel();
        lblTitle3 = new javax.swing.JLabel();
        lblCaretakerSearch = new javax.swing.JLabel();
        txtCaretakerSearch = new javax.swing.JTextField();
        ScrollPaneNgoManager1 = new javax.swing.JScrollPane();
        tableCaretaker = new javax.swing.JTable();
        btnCaretakerView = new javax.swing.JButton();
        btnCaretakerDelete = new javax.swing.JButton();
        lblCaretakerId = new javax.swing.JLabel();
        txtCaretakerId = new javax.swing.JTextField();
        lblCaretakerEmailId = new javax.swing.JLabel();
        txtCaretakerEmailId = new javax.swing.JTextField();
        lblCaretakerName = new javax.swing.JLabel();
        txtCaretakerName = new javax.swing.JTextField();
        lblCaretakerPhno = new javax.swing.JLabel();
        txtCaretakerPhno = new javax.swing.JTextField();
        lblCaretakerUsername = new javax.swing.JLabel();
        txtCaretakerUsername = new javax.swing.JTextField();
        lblCaretakerPassword = new javax.swing.JLabel();
        txtCaretakerPassword = new javax.swing.JPasswordField();
        txtCaretakerAge = new javax.swing.JTextField();
        lblCaretakerAge = new javax.swing.JLabel();
        lblCaretakerDOB = new javax.swing.JLabel();
        txtCaretakerDOB = new javax.swing.JTextField();
        lblCaretakerGender = new javax.swing.JLabel();
        cmbCaretakerGender = new javax.swing.JComboBox<>();
        lblCaretakerRole = new javax.swing.JLabel();
        txtCaretakerRole = new javax.swing.JTextField();
        btnCaretakerUpdate = new javax.swing.JButton();
        btnCaretakerCreate = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        panelFundManager = new javax.swing.JPanel();
        lblTitle4 = new javax.swing.JLabel();
        lblFundManagerSearch = new javax.swing.JLabel();
        txtFundManagerSearch = new javax.swing.JTextField();
        ScrollPaneNgoManager2 = new javax.swing.JScrollPane();
        tableFundManager = new javax.swing.JTable();
        btnFundManagerView = new javax.swing.JButton();
        btnFundManagerDelete = new javax.swing.JButton();
        lblFundManagerId = new javax.swing.JLabel();
        txtFundManagerId = new javax.swing.JTextField();
        lblFundManagerName = new javax.swing.JLabel();
        txtFundManagerName = new javax.swing.JTextField();
        lblFundManagerEmailId = new javax.swing.JLabel();
        txtFundManagerEmailId = new javax.swing.JTextField();
        lblFundManagerPhno = new javax.swing.JLabel();
        txtFundManagerPhno = new javax.swing.JTextField();
        lblFundManagerPassword = new javax.swing.JLabel();
        txtFundManagerPassword = new javax.swing.JPasswordField();
        txtFundManagerUsername = new javax.swing.JTextField();
        lblFundManagerUsername = new javax.swing.JLabel();
        lblFundManagerAge = new javax.swing.JLabel();
        txtFundManagerAge = new javax.swing.JTextField();
        lblFundManagerDOB = new javax.swing.JLabel();
        txtFundManagerDOB = new javax.swing.JTextField();
        lblFundManagerGender = new javax.swing.JLabel();
        cmbFundManagerGender = new javax.swing.JComboBox<>();
        lblFundManagerRole = new javax.swing.JLabel();
        txtFundManagerRole = new javax.swing.JTextField();
        btnFundManagerCreate = new javax.swing.JButton();
        btnFundMangerUpdate = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        panelFoodInv = new javax.swing.JPanel();
        lblTitle10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableNgoOrder = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtOrderId = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtStatus2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        txtItem = new javax.swing.JComboBox<>();
        btnPlaceOrder = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        panelChildren = new javax.swing.JPanel();
        lblTitle9 = new javax.swing.JLabel();
        ScrollPane7 = new javax.swing.JScrollPane();
        tableChildrenCreate = new javax.swing.JTable();
        lblChildrenName = new javax.swing.JLabel();
        txtChildrenName = new javax.swing.JTextField();
        lblChildrenAge = new javax.swing.JLabel();
        txtChildrenAge = new javax.swing.JTextField();
        lblChildrenId = new javax.swing.JLabel();
        txtChildrenId = new javax.swing.JTextField();
        lblChildrenDob = new javax.swing.JLabel();
        txtChildrenDOB = new javax.swing.JTextField();
        lblChildrenGender = new javax.swing.JLabel();
        cmbChildrenGender = new javax.swing.JComboBox<>();
        lblChildrenSearch = new javax.swing.JLabel();
        txtChildrenSearch = new javax.swing.JTextField();
        btnChildrenView = new javax.swing.JButton();
        btnChildrenDelete = new javax.swing.JButton();
        lblChildrenRole = new javax.swing.JLabel();
        txtChildrenRole = new javax.swing.JTextField();
        lblChildrenCaretaker = new javax.swing.JLabel();
        txtChildrenCaretaker = new javax.swing.JComboBox<>();
        btnChildrenCreate = new javax.swing.JButton();
        btnChildrenUpdate = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        panelHealth = new javax.swing.JPanel();
        lblTitle6 = new javax.swing.JLabel();
        ScrollPane5 = new javax.swing.JScrollPane();
        tableChildrenHealth = new javax.swing.JTable();
        btnAutofill1 = new javax.swing.JButton();
        ScrollPane9 = new javax.swing.JScrollPane();
        tableChildrenAppoinment = new javax.swing.JTable();
        lblApplicationNo1 = new javax.swing.JLabel();
        txtApplicationNo1 = new javax.swing.JTextField();
        lblChildName1 = new javax.swing.JLabel();
        txtChildName1 = new javax.swing.JTextField();
        lblChildAge1 = new javax.swing.JLabel();
        lblChildName8 = new javax.swing.JLabel();
        lblChildName9 = new javax.swing.JLabel();
        txtAppDate = new javax.swing.JTextField();
        lblStatus1 = new javax.swing.JLabel();
        txtStatus1 = new javax.swing.JTextField();
        lblChildName10 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtChildComment1 = new javax.swing.JTextArea();
        txtChildAge1 = new javax.swing.JTextField();
        txtChildGender2 = new javax.swing.JTextField();
        btnAppointment = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();

        panelControl.setBackground(new java.awt.Color(51, 51, 51));

        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnEducation.setText("Education");
        btnEducation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEducationActionPerformed(evt);
            }
        });

        btnCaretaker.setText("Caretaker");
        btnCaretaker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaretakerActionPerformed(evt);
            }
        });

        btnChildren.setText("Children");
        btnChildren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChildrenActionPerformed(evt);
            }
        });

        btnEssentialItems.setText("Orders");
        btnEssentialItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEssentialItemsActionPerformed(evt);
            }
        });

        btnHealth.setText("Health");
        btnHealth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHealthActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelControlLayout = new javax.swing.GroupLayout(panelControl);
        panelControl.setLayout(panelControlLayout);
        panelControlLayout.setHorizontalGroup(
            panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelControlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEducation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                    .addComponent(btnCaretaker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnChildren, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEssentialItems, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHealth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelControlLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        panelControlLayout.setVerticalGroup(
            panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelControlLayout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(btnEducation)
                .addGap(18, 18, 18)
                .addComponent(btnEssentialItems)
                .addGap(18, 18, 18)
                .addComponent(btnHealth)
                .addGap(122, 122, 122)
                .addComponent(btnCaretaker)
                .addGap(18, 18, 18)
                .addComponent(btnChildren)
                .addContainerGap(300, Short.MAX_VALUE))
            .addGroup(panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelControlLayout.createSequentialGroup()
                    .addGap(114, 114, 114)
                    .addComponent(btnHome)
                    .addContainerGap(613, Short.MAX_VALUE)))
        );

        SplitPaneNgoManager.setLeftComponent(panelControl);

        panelWork.setLayout(new java.awt.CardLayout());

        panelHome.setBackground(new java.awt.Color(255, 255, 255));
        panelHome.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle2.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitle2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle2.setText("NGO Manager Workspace");
        panelHome.add(lblTitle2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, 680, -1));

        lblRole.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        lblRole.setText("Role: NGO Manager");
        panelHome.add(lblRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(961, 95, 139, -1));

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });
        panelHome.add(btnLogOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(961, 117, -1, -1));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UiImagesssss/NGO manager.png"))); // NOI18N
        panelHome.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 1060, 710));

        panelWork.add(panelHome, "card2");

        panelEducation.setBackground(new java.awt.Color(255, 255, 255));
        panelEducation.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitle7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle7.setText("Children Education");
        panelEducation.add(lblTitle7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 1149, -1));

        tableChildrenApp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Application Id", "Name", "Age", "Gender", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScrollPane6.setViewportView(tableChildrenApp);

        panelEducation.add(ScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 242, 1092, 97));

        lblChildName.setText("Name:");
        panelEducation.add(lblChildName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, -1, -1));

        txtChildName.setEditable(false);
        panelEducation.add(txtChildName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 397, 219, -1));

        lblApplicationNo.setText("Application No:");
        panelEducation.add(lblApplicationNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, -1, -1));
        panelEducation.add(txtApplicationNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 357, 219, -1));

        txtChildAge.setEditable(false);
        panelEducation.add(txtChildAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 437, 219, -1));

        lblChildAge.setText("Age:");
        panelEducation.add(lblChildAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, -1, -1));

        lblChildName2.setText("DOB:");
        panelEducation.add(lblChildName2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, -1, -1));

        txtChildDOB.setEditable(false);
        panelEducation.add(txtChildDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 477, 219, -1));

        lblChildName3.setText("Gender:");
        panelEducation.add(lblChildName3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 535, -1, -1));

        lblChildName4.setText("School:");
        panelEducation.add(lblChildName4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 649, -1, -1));

        txtChildSchool.setEditable(false);
        txtChildSchool.setText("School");
        panelEducation.add(txtChildSchool, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 650, 219, -1));

        lblChildName5.setText("Comment:");
        panelEducation.add(lblChildName5, new org.netbeans.lib.awtextra.AbsoluteConstraints(783, 360, -1, -1));

        txtChildComment.setColumns(20);
        txtChildComment.setRows(5);
        jScrollPane1.setViewportView(txtChildComment);

        panelEducation.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(873, 357, 219, -1));

        lblStatus.setText("Status:");
        panelEducation.add(lblStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 609, -1, -1));

        txtStatus.setEditable(false);
        txtStatus.setText("Pending");
        panelEducation.add(txtStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 610, 219, -1));

        tableChildrenEducation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Children Id", "Name", "Age", "DOB", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScrollPane8.setViewportView(tableChildrenEducation);

        panelEducation.add(ScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 72, 1149, 93));

        jLabel1.setText("NGO Children List:");
        panelEducation.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, -1, -1));

        jLabel2.setText("Student Applications:");
        panelEducation.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, -1, -1));

        lblChildName6.setText("Class:");
        panelEducation.add(lblChildName6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 569, -1, -1));
        panelEducation.add(txtChildClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 570, 219, -1));

        jLabel3.setText("NGO:");
        panelEducation.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 683, -1, -1));

        txtNgo.setEditable(false);
        txtNgo.setText("Yes");
        panelEducation.add(txtNgo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 680, 219, -1));

        btnAutofill.setText("Autofill");
        btnAutofill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutofillActionPerformed(evt);
            }
        });
        panelEducation.add(btnAutofill, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 177, -1, -1));

        cmbChildGender.setEditable(false);
        panelEducation.add(cmbChildGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 532, 219, -1));

        btnApply.setText("Apply");
        btnApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyActionPerformed(evt);
            }
        });
        panelEducation.add(btnApply, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 460, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UiImagesssss/Teacher.png"))); // NOI18N
        panelEducation.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 340, 550, 410));

        panelWork.add(panelEducation, "card8");

        panelCareTaker.setBackground(new java.awt.Color(255, 255, 255));
        panelCareTaker.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle3.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitle3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle3.setText("Caretaker");
        panelCareTaker.add(lblTitle3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 680, -1));

        lblCaretakerSearch.setText("Search:");
        panelCareTaker.add(lblCaretakerSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(443, 101, -1, -1));
        panelCareTaker.add(txtCaretakerSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(498, 98, 225, -1));

        tableCaretaker.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Username", "Age", "Email-Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableCaretaker.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ScrollPaneNgoManager1.setViewportView(tableCaretaker);

        panelCareTaker.add(ScrollPaneNgoManager1, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 126, 695, 112));

        btnCaretakerView.setText("View");
        btnCaretakerView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaretakerViewActionPerformed(evt);
            }
        });
        panelCareTaker.add(btnCaretakerView, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 256, -1, -1));

        btnCaretakerDelete.setText("Delete");
        btnCaretakerDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaretakerDeleteActionPerformed(evt);
            }
        });
        panelCareTaker.add(btnCaretakerDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 256, -1, -1));

        lblCaretakerId.setText("Caretaker Id:");
        panelCareTaker.add(lblCaretakerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 317, -1, -1));

        txtCaretakerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCaretakerIdActionPerformed(evt);
            }
        });
        panelCareTaker.add(txtCaretakerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 317, 206, -1));

        lblCaretakerEmailId.setText("Email-Id:");
        panelCareTaker.add(lblCaretakerEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 599, -1, -1));

        txtCaretakerEmailId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCaretakerEmailIdActionPerformed(evt);
            }
        });
        panelCareTaker.add(txtCaretakerEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 599, 210, -1));

        lblCaretakerName.setText("Name:");
        panelCareTaker.add(lblCaretakerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 358, -1, -1));
        panelCareTaker.add(txtCaretakerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 357, 203, -1));

        lblCaretakerPhno.setText("Phone No:");
        panelCareTaker.add(lblCaretakerPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 630, -1, -1));
        panelCareTaker.add(txtCaretakerPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 627, 210, -1));

        lblCaretakerUsername.setText("Username:");
        panelCareTaker.add(lblCaretakerUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 400, -1, -1));
        panelCareTaker.add(txtCaretakerUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 397, 206, -1));

        lblCaretakerPassword.setText("Password:");
        panelCareTaker.add(lblCaretakerPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 670, -1, -1));
        panelCareTaker.add(txtCaretakerPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 667, 210, -1));
        panelCareTaker.add(txtCaretakerAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 439, 206, -1));

        lblCaretakerAge.setText("Age:");
        panelCareTaker.add(lblCaretakerAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 439, -1, -1));

        lblCaretakerDOB.setText("DOB:");
        panelCareTaker.add(lblCaretakerDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 482, -1, -1));
        panelCareTaker.add(txtCaretakerDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 479, 206, -1));

        lblCaretakerGender.setText("Gender:");
        panelCareTaker.add(lblCaretakerGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 519, -1, -1));

        cmbCaretakerGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));
        panelCareTaker.add(cmbCaretakerGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 519, 210, -1));

        lblCaretakerRole.setText("Role:");
        panelCareTaker.add(lblCaretakerRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 559, -1, -1));

        txtCaretakerRole.setEditable(false);
        txtCaretakerRole.setText("Caretaker");
        panelCareTaker.add(txtCaretakerRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 559, 210, -1));

        btnCaretakerUpdate.setText("Update");
        btnCaretakerUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaretakerUpdateActionPerformed(evt);
            }
        });
        panelCareTaker.add(btnCaretakerUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(652, 257, -1, -1));

        btnCaretakerCreate.setText("Create");
        btnCaretakerCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaretakerCreateActionPerformed(evt);
            }
        });
        panelCareTaker.add(btnCaretakerCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(548, 257, -1, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UiImagesssss/NGO caretaker.jpg"))); // NOI18N
        panelCareTaker.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(409, 320, 750, 420));

        panelWork.add(panelCareTaker, "card4");

        panelFundManager.setBackground(new java.awt.Color(255, 255, 255));
        panelFundManager.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle4.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitle4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle4.setText("Fund Manager");
        panelFundManager.add(lblTitle4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 1170, -1));

        lblFundManagerSearch.setText("Search:");
        panelFundManager.add(lblFundManagerSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(443, 101, -1, -1));
        panelFundManager.add(txtFundManagerSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(498, 98, 225, -1));

        tableFundManager.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Username", "Age", "Email-Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableFundManager.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ScrollPaneNgoManager2.setViewportView(tableFundManager);

        panelFundManager.add(ScrollPaneNgoManager2, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 126, 695, 112));

        btnFundManagerView.setText("View");
        btnFundManagerView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFundManagerViewActionPerformed(evt);
            }
        });
        panelFundManager.add(btnFundManagerView, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 256, -1, -1));

        btnFundManagerDelete.setText("Delete");
        btnFundManagerDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFundManagerDeleteActionPerformed(evt);
            }
        });
        panelFundManager.add(btnFundManagerDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 256, -1, -1));

        lblFundManagerId.setText("Fund Manager Id:");
        panelFundManager.add(lblFundManagerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 334, -1, -1));
        panelFundManager.add(txtFundManagerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 331, 206, -1));

        lblFundManagerName.setText("Name:");
        panelFundManager.add(lblFundManagerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 373, -1, -1));
        panelFundManager.add(txtFundManagerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 365, 206, -1));

        lblFundManagerEmailId.setText("Email-Id:");
        panelFundManager.add(lblFundManagerEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 592, -1, -1));
        panelFundManager.add(txtFundManagerEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 590, 206, -1));

        lblFundManagerPhno.setText("Phone No:");
        panelFundManager.add(lblFundManagerPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 632, -1, -1));
        panelFundManager.add(txtFundManagerPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 630, 206, -1));

        lblFundManagerPassword.setText("Password:");
        panelFundManager.add(lblFundManagerPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 672, -1, -1));
        panelFundManager.add(txtFundManagerPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 670, 206, -1));
        panelFundManager.add(txtFundManagerUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 399, 206, -1));

        lblFundManagerUsername.setText("Username:");
        panelFundManager.add(lblFundManagerUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 407, -1, -1));

        lblFundManagerAge.setText("Age:");
        panelFundManager.add(lblFundManagerAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 449, -1, -1));
        panelFundManager.add(txtFundManagerAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 441, 206, -1));

        lblFundManagerDOB.setText("DOB:");
        panelFundManager.add(lblFundManagerDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 483, -1, -1));
        panelFundManager.add(txtFundManagerDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 481, 206, -1));

        lblFundManagerGender.setText("Gender:");
        panelFundManager.add(lblFundManagerGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 524, -1, -1));

        cmbFundManagerGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));
        cmbFundManagerGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFundManagerGenderActionPerformed(evt);
            }
        });
        panelFundManager.add(cmbFundManagerGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 520, 210, -1));

        lblFundManagerRole.setText("Role:");
        panelFundManager.add(lblFundManagerRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 564, -1, -1));

        txtFundManagerRole.setEditable(false);
        txtFundManagerRole.setText("Fund Manager");
        panelFundManager.add(txtFundManagerRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 561, 206, -1));

        btnFundManagerCreate.setText("Create");
        btnFundManagerCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFundManagerCreateActionPerformed(evt);
            }
        });
        panelFundManager.add(btnFundManagerCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(544, 258, -1, -1));

        btnFundMangerUpdate.setText("Update");
        btnFundMangerUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFundMangerUpdateActionPerformed(evt);
            }
        });
        panelFundManager.add(btnFundMangerUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(651, 258, -1, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UiImagesssss/funds.png"))); // NOI18N
        panelFundManager.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 240, 500, 510));

        panelWork.add(panelFundManager, "card5");

        panelFoodInv.setBackground(new java.awt.Color(255, 255, 255));
        panelFoodInv.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle10.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitle10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle10.setText("Essential Items");
        panelFoodInv.add(lblTitle10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 1170, -1));

        tableNgoOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Order Id", "Item", "Quantity", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tableNgoOrder);

        panelFoodInv.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 121, 614, 115));

        jLabel4.setText("Order Id:");
        panelFoodInv.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 267, -1, -1));
        panelFoodInv.add(txtOrderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 264, 189, -1));

        jLabel5.setText("Item:");
        panelFoodInv.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 307, -1, -1));

        jLabel6.setText("Status:");
        panelFoodInv.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 384, -1, -1));

        txtStatus2.setEditable(false);
        txtStatus2.setText("Pending");
        panelFoodInv.add(txtStatus2, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 384, 189, -1));

        jLabel7.setText("Quantity:");
        panelFoodInv.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 344, -1, -1));
        panelFoodInv.add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 344, 189, -1));

        panelFoodInv.add(txtItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 304, 189, -1));

        btnPlaceOrder.setText("Place Order");
        btnPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceOrderActionPerformed(evt);
            }
        });
        panelFoodInv.add(btnPlaceOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 424, -1, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UiImagesssss/medicines.jpg"))); // NOI18N
        panelFoodInv.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(363, 267, 780, 470));

        panelWork.add(panelFoodInv, "card9");

        panelChildren.setBackground(new java.awt.Color(255, 255, 255));
        panelChildren.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle9.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitle9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle9.setText("Children");
        panelChildren.add(lblTitle9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 1300, -1));

        tableChildrenCreate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Children Id", "Name", "Age", "DOB", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScrollPane7.setViewportView(tableChildrenCreate);

        panelChildren.add(ScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 130, 677, 119));

        lblChildrenName.setText("Name:");
        panelChildren.add(lblChildrenName, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 362, -1, -1));
        panelChildren.add(txtChildrenName, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 359, 230, -1));

        lblChildrenAge.setText("Age:");
        panelChildren.add(lblChildrenAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 402, -1, -1));
        panelChildren.add(txtChildrenAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 399, 230, -1));

        lblChildrenId.setText("Children Id:");
        panelChildren.add(lblChildrenId, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 322, -1, -1));
        panelChildren.add(txtChildrenId, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 319, 230, -1));

        lblChildrenDob.setText("DOB:");
        panelChildren.add(lblChildrenDob, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 442, -1, -1));
        panelChildren.add(txtChildrenDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 439, 230, -1));

        lblChildrenGender.setText("Gender:");
        panelChildren.add(lblChildrenGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 482, -1, -1));

        cmbChildrenGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));
        panelChildren.add(cmbChildrenGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 479, 230, -1));

        lblChildrenSearch.setText("Search:");
        panelChildren.add(lblChildrenSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(438, 93, -1, -1));
        panelChildren.add(txtChildrenSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(493, 90, 225, -1));

        btnChildrenView.setText("View");
        btnChildrenView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChildrenViewActionPerformed(evt);
            }
        });
        panelChildren.add(btnChildrenView, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 267, -1, -1));

        btnChildrenDelete.setText("Delete");
        btnChildrenDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChildrenDeleteActionPerformed(evt);
            }
        });
        panelChildren.add(btnChildrenDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 267, -1, -1));

        lblChildrenRole.setText("Role:");
        panelChildren.add(lblChildrenRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 522, -1, -1));

        txtChildrenRole.setEditable(false);
        txtChildrenRole.setText("Child");
        panelChildren.add(txtChildrenRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 519, 230, -1));

        lblChildrenCaretaker.setText("Caretaker:");
        panelChildren.add(lblChildrenCaretaker, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 556, -1, -1));

        panelChildren.add(txtChildrenCaretaker, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 553, 230, -1));

        btnChildrenCreate.setText("Create");
        btnChildrenCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChildrenCreateActionPerformed(evt);
            }
        });
        panelChildren.add(btnChildrenCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 593, -1, -1));

        btnChildrenUpdate.setText("Update");
        btnChildrenUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChildrenUpdateActionPerformed(evt);
            }
        });
        panelChildren.add(btnChildrenUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(203, 593, -1, -1));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UiImagesssss/children.png"))); // NOI18N
        panelChildren.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 270, 860, 460));

        panelWork.add(panelChildren, "card10");

        panelHealth.setBackground(new java.awt.Color(255, 255, 255));
        panelHealth.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle6.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitle6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle6.setText("Children Health");
        panelHealth.add(lblTitle6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 1170, -1));

        tableChildrenHealth.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Children Id", "Name", "Age", "DOB", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScrollPane5.setViewportView(tableChildrenHealth);

        panelHealth.add(ScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 67, 699, 93));

        btnAutofill1.setText("Autofill");
        btnAutofill1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutofill1ActionPerformed(evt);
            }
        });
        panelHealth.add(btnAutofill1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 178, -1, -1));

        tableChildrenAppoinment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Appointment Id", "Name", "Age", "Gender", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScrollPane9.setViewportView(tableChildrenAppoinment);

        panelHealth.add(ScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 231, 699, 93));

        lblApplicationNo1.setText("Appointment Id:");
        panelHealth.add(lblApplicationNo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 345, -1, -1));
        panelHealth.add(txtApplicationNo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 342, 219, -1));

        lblChildName1.setText("Name:");
        panelHealth.add(lblChildName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 386, -1, -1));

        txtChildName1.setEditable(false);
        panelHealth.add(txtChildName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 383, 219, -1));

        lblChildAge1.setText("Age:");
        panelHealth.add(lblChildAge1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 426, -1, -1));

        lblChildName8.setText("Gender:");
        panelHealth.add(lblChildName8, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 466, -1, -1));

        lblChildName9.setText("Date:");
        panelHealth.add(lblChildName9, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 506, -1, -1));
        panelHealth.add(txtAppDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 503, 219, -1));

        lblStatus1.setText("Status:");
        panelHealth.add(lblStatus1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 546, -1, -1));

        txtStatus1.setEditable(false);
        txtStatus1.setText("Pending");
        panelHealth.add(txtStatus1, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 543, 219, -1));

        lblChildName10.setText("Comment:");
        panelHealth.add(lblChildName10, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 593, -1, -1));

        txtChildComment1.setColumns(20);
        txtChildComment1.setRows(5);
        jScrollPane5.setViewportView(txtChildComment1);

        panelHealth.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 593, 219, 104));

        txtChildAge1.setEditable(false);
        panelHealth.add(txtChildAge1, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 423, 219, -1));

        txtChildGender2.setEditable(false);
        panelHealth.add(txtChildGender2, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 463, 219, -1));

        btnAppointment.setText("Book Appointment");
        btnAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAppointmentActionPerformed(evt);
            }
        });
        panelHealth.add(btnAppointment, new org.netbeans.lib.awtextra.AbsoluteConstraints(562, 342, -1, -1));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UiImagesssss/children health.png"))); // NOI18N
        panelHealth.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 370, 780, 370));

        panelWork.add(panelHealth, "card7");

        SplitPaneNgoManager.setRightComponent(panelWork);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SplitPaneNgoManager)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SplitPaneNgoManager)
        );
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        //        CardLayout cardLayout = (CardLayout) panelWork.getLayout();
        //        panelWork.add("NgoHome", panelHome);
        //        cardLayout.next(panelWork);
        panelWork.removeAll();
        panelWork.add(panelHome);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnEducationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEducationActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelEducation);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnEducationActionPerformed

    private void btnCaretakerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaretakerActionPerformed
        // TODO add your handling code here:
        //        CardLayout cardLayout = (CardLayout) panelWork.getLayout();
        //        panelWork.add("CareTaker", panelCareTaker);
        //        cardLayout.next(panelWork);
        panelWork.removeAll();
        panelWork.add(panelCareTaker);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnCaretakerActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        dB4OUtil.storeSystem(system);
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        cardPanel.remove(this);
        cardLayout.previous(cardPanel);
        

    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnChildrenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChildrenActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelChildren);
        panelWork.repaint();
        panelWork.revalidate();

    }//GEN-LAST:event_btnChildrenActionPerformed

    private void btnAutofillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutofillActionPerformed
        // TODO add your handling code here
        Integer selectedRowIndex = tableChildrenEducation.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableChildrenEducation.getModel();
            Children selApp = (Children) model.getValueAt(selectedRowIndex,0);

            //            txtApplicationNo.setText(selApp.getAppNo());
            txtChildName.setText(selApp.getName());
            txtChildAge.setText(String.valueOf(selApp.getAge()));
            txtChildDOB.setText(selApp.getDob());
            cmbChildGender.setText(selApp.getGender());
            //            txtChildClass.setText(selApp.getCls());
            //            txtStatus.setText(selApp.getStatus());
            //            txtChildComment.setText(selApp.getComment());
        }
    }//GEN-LAST:event_btnAutofillActionPerformed

    private void btnFundManagerViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFundManagerViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableFundManager.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableFundManager.getModel();
            FundManager selMan = (FundManager) model.getValueAt(selectedRowIndex,0);

            txtFundManagerId.setText(selMan.getFundManagerId());
            txtFundManagerName.setText(selMan.getName());
            txtFundManagerUsername.setText(selMan.getUsername());
            txtFundManagerAge.setText(String.valueOf(selMan.getAge()));
            txtFundManagerDOB.setText(selMan.getDob());
            cmbFundManagerGender.setSelectedItem(selMan.getGender());
            txtFundManagerRole.setText(selMan.getRole());
            txtFundManagerEmailId.setText(selMan.getEmailId());
            txtFundManagerPhno.setText(String.valueOf(selMan.getPhno()));
            txtFundManagerPassword.setText(selMan.getPassword());

        }
    }//GEN-LAST:event_btnFundManagerViewActionPerformed

    private void btnFundManagerDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFundManagerDeleteActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableFundManager.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableFundManager.getModel();
            FundManager selectedMan = (FundManager) model.getValueAt(selectedRowIndex,0);

            system.getFundManagerList().deleteFundManager(selectedMan);

            JOptionPane.showMessageDialog(this, "Fund Manager deleted successfully.");

            //            dB4OUtil.storeSystem(system);
            populateFundManagerTable();
        }
    }//GEN-LAST:event_btnFundManagerDeleteActionPerformed

    private void cmbFundManagerGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFundManagerGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbFundManagerGenderActionPerformed

    private void btnEssentialItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEssentialItemsActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelFoodInv);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnEssentialItemsActionPerformed

    private void txtCaretakerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCaretakerIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCaretakerIdActionPerformed

    private void btnCaretakerDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaretakerDeleteActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableCaretaker.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableCaretaker.getModel();
            Caretaker selectedMan = (Caretaker) model.getValueAt(selectedRowIndex,0);

            system.getCareTakerList().deleteCaretaker(selectedMan);

            JOptionPane.showMessageDialog(this, "Caretaker deleted successfully.");

            //            dB4OUtil.storeSystem(system);
            populateCaretakerTable();
        }
    }//GEN-LAST:event_btnCaretakerDeleteActionPerformed

    private void btnCaretakerViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaretakerViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableCaretaker.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableCaretaker.getModel();
            Caretaker selMan = (Caretaker) model.getValueAt(selectedRowIndex,0);

            txtCaretakerId.setText(selMan.getCaretakerId());
            txtCaretakerName.setText(selMan.getName());
            txtCaretakerUsername.setText(selMan.getUsername());
            txtCaretakerAge.setText(String.valueOf(selMan.getAge()));
            txtCaretakerDOB.setText(selMan.getDob());
            txtCaretakerRole.setText(selMan.getRole());
            cmbCaretakerGender.setSelectedItem(selMan.getGender());
            txtCaretakerEmailId.setText(selMan.getEmailId());
            txtCaretakerPhno.setText(String.valueOf(selMan.getPhno()));
            txtCaretakerPassword.setText(selMan.getPassword());

        }
    }//GEN-LAST:event_btnCaretakerViewActionPerformed

    private void btnChildrenViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChildrenViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableChildrenCreate.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableChildrenCreate.getModel();
            Children selMan = (Children) model.getValueAt(selectedRowIndex,0);

            txtChildrenId.setText(selMan.getChildrenId());
            txtChildrenName.setText(selMan.getName());
            txtChildrenAge.setText(String.valueOf(selMan.getAge()));
            txtChildrenDOB.setText(selMan.getDob());
            cmbChildrenGender.setSelectedItem(selMan.getGender());
            txtChildrenRole.setText(selMan.getRole());
            txtChildrenCaretaker.setSelectedItem(selMan.getCaretaker());
        }
    }//GEN-LAST:event_btnChildrenViewActionPerformed

    private void btnChildrenDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChildrenDeleteActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableChildrenCreate.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableChildrenCreate.getModel();
            Children selectedMan = (Children) model.getValueAt(selectedRowIndex,0);

            system.getChildrenList().deleteChildren(selectedMan);

            JOptionPane.showMessageDialog(this, "Child deleted successfully.");

            //            dB4OUtil.storeSystem(system);
            populateChildrenCreateTable();
        }
    }//GEN-LAST:event_btnChildrenDeleteActionPerformed

    private void btnAutofill1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutofill1ActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableChildrenHealth.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableChildrenHealth.getModel();
            Children selApp = (Children) model.getValueAt(selectedRowIndex,0);

            //            txtApplicationNo.setText(selApp.getAppNo());
            txtChildName1.setText(selApp.getName());
            txtChildAge1.setText(String.valueOf(selApp.getAge()));

            txtChildGender2.setText(selApp.getGender());
        }
    }//GEN-LAST:event_btnAutofill1ActionPerformed

    private void btnHealthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHealthActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelHealth);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnHealthActionPerformed

    private void btnApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyActionPerformed
        // TODO add your handling code here:
        String appNo = txtApplicationNo.getText();
        if(appNo.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Application Number");
            return;
        }
        else if(system.getApplicationList().uiqueApplicationId(appNo)== false){
            JOptionPane.showMessageDialog(this, "Application Number already exist");
            return;
        }

        //        if(appNo.isEmpty()){
            //            JOptionPane.showMessageDialog(this, "Enter the appNo");
            //            return;
            //        }
        //        else if(system.getCareTakerList().uiqueCaretakerId(appNo)== false){
            //            JOptionPane.showMessageDialog(this, "appNo already exist");
            //            return;
            //        }
        //        system.getap

        String name = txtChildName.getText();

        Integer age = Integer.valueOf(txtChildAge.getText());

        String dob = txtChildDOB.getText();
        if(!data.dateCheck(dob)){
            JOptionPane.showMessageDialog(this, "Please enter correct date in format mm/dd/yyy");
            return;
        }

        String gender = cmbChildGender.getText();

        String cls = txtChildClass.getText();
        if(cls.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Class");
            return;
        }

        String status = txtStatus.getText();
        String school = txtChildSchool.getText();
        String ngo = txtNgo.getText();

        String comm = txtChildComment.getText();
        if(comm.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Comments");
            return;
        }

        Application newApp = system.getApplicationList().addApplication();

        newApp.setAppNo(appNo);
        newApp.setName(name);
        newApp.setAge(age);
        newApp.setDob(dob);
        newApp.setGender(gender);
        newApp.setCls(cls);
        newApp.setStatus(status);
        newApp.setSchool(school);
        newApp.setNgo(ngo);
        newApp.setComment(comm);

        JOptionPane.showMessageDialog(this, "Application submitted successfully");

        txtApplicationNo.setText("");
        txtChildName.setText("");
        txtChildAge.setText("");
        txtChildDOB.setText("");
        cmbChildGender.setText("");
        txtChildClass.setText("");
        txtChildComment.setText("");

        populateStudentApp();

    }//GEN-LAST:event_btnApplyActionPerformed

    private void btnCaretakerUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaretakerUpdateActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableCaretaker.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableCaretaker.getModel();
            Caretaker selMan = (Caretaker) model.getValueAt(selectedRowIndex,0);

            //            selMan.setCaretakerId(txtCaretakerId.getText());
            //
            selMan.setName(txtCaretakerName.getText());
            if(txtCaretakerName.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Enter valid name");
                return;
            }
            //            selMan.setUsername(txtCaretakerUsername.getText());

            if(!data.numcheck(txtCaretakerAge.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid age");
                return;
            }
            selMan.setAge(Integer.valueOf(txtCaretakerAge.getText()));

            selMan.setDob(txtCaretakerDOB.getText());
            if(!data.dateCheck(txtCaretakerDOB.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid date");
                return;
            }
            selMan.setGender(String.valueOf(cmbCaretakerGender.getSelectedItem()));
            selMan.setRole(txtCaretakerRole.getText());
            selMan.setEmailId(txtCaretakerEmailId.getText());
            if(!data.emailCheck(txtCaretakerEmailId.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid emailid");
                return;
            }

            if(!data.phnocheck(txtCaretakerPhno.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid phone no");
                return;
            }
            selMan.setPhno(Long.valueOf(txtCaretakerPhno.getText()));
            selMan.setPassword(txtCaretakerPassword.getText());
            if(txtCaretakerPassword.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Enter valid password");
                return;
            }

            JOptionPane.showMessageDialog(this, "Caretaker updated successfully");

            //            dB4OUtil.storeSystem(system);
            populateCaretakerTable();
        }

    }//GEN-LAST:event_btnCaretakerUpdateActionPerformed

    private void btnCaretakerCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaretakerCreateActionPerformed
        // TODO add your handling code here:

        String id = txtCaretakerId.getText();
        if(id.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Id");
            return;
        }
        else if(system.getCareTakerList().uiqueCaretakerId(id)== false){
            JOptionPane.showMessageDialog(this, "Id already exist");
            return;
        }
        String name = txtCaretakerName.getText();
        if(name.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the name");
            return;
        }
        String username = txtCaretakerUsername.getText();
        if(username.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the username");
            return;
        }
        else if(system.getCareTakerList().uniqueCaretakerUsername(username)==false){
            JOptionPane.showMessageDialog(this, "Username already exist");
            return;
        }

        if(data.numcheck(txtCaretakerAge.getText())==false){
            JOptionPane.showMessageDialog(this, "Enter valid age");
            return;
        }
        Integer age = Integer.valueOf(txtCaretakerAge.getText());
        String dob = txtCaretakerDOB.getText();

        if(!data.dateCheck(dob)){
            JOptionPane.showMessageDialog(this, "Please enter correct date in format mm/dd/yyyy");
            return;
        }
        String gender = String.valueOf(cmbCaretakerGender.getSelectedItem());
        String role = txtCaretakerRole.getText();
        String emailid= txtCaretakerEmailId.getText();

        if(!data.emailCheck(emailid)){
            JOptionPane.showMessageDialog(this, "Enter valid email id");
            return;
        }

        if(!data.phnocheck(txtCaretakerPhno.getText())){
            JOptionPane.showMessageDialog(this, "Enter valid phone no");
            return;
        }

        Long phno = Long.valueOf(txtCaretakerPhno.getText());

        String pass = txtCaretakerPassword.getText();
        if(pass.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter valid password");
            return;
        }

        Caretaker newManager = system.getCareTakerList().addCaretaker();

        newManager.setCaretakerId(id);
        newManager.setName(name);
        newManager.setUsername(username);
        newManager.setAge(age);
        newManager.setDob(dob);
        newManager.setGender(gender);
        newManager.setRole(role);
        newManager.setEmailId(emailid);
        newManager.setPhno(phno);
        newManager.setPassword(pass);

        JOptionPane.showMessageDialog(this, "Caretaker created successfully");

        txtCaretakerId.setText("");
        txtCaretakerName.setText("");
        txtCaretakerUsername.setText("");
        txtCaretakerAge.setText("");
        txtCaretakerDOB.setText("");
        txtCaretakerEmailId.setText("");
        txtCaretakerPhno.setText("");
        txtCaretakerPassword.setText("");

        //        dB4OUtil.storeSystem(system);
        populateCaretakerTable();
        populateCombo();
    }//GEN-LAST:event_btnCaretakerCreateActionPerformed

    private void btnFundManagerCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFundManagerCreateActionPerformed
        // TODO add your handling code here:
        String id = txtFundManagerId.getText();
        if(id.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Id");
            return;
        }
        else if(system.getFundManagerList().uniqueFundManId(id)== false){
            JOptionPane.showMessageDialog(this, "Id already exist");
            return;
        }

        String name = txtFundManagerName.getText();
        if(name.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the name");
            return;
        }

        String username = txtFundManagerUsername.getText();
        if(username.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the username");
            return;
        }
        else if(system.getFundManagerList().uniqueFundManUsername(username)==false){
            JOptionPane.showMessageDialog(this, "Username already exist");
            return;
        }

        if(data.numcheck(txtFundManagerAge.getText())==false){
            JOptionPane.showMessageDialog(this, "Enter valid age");
            return;
        }
        Integer age = Integer.valueOf(txtFundManagerAge.getText());

        String gender = String.valueOf(cmbFundManagerGender.getSelectedItem());

        String role = txtFundManagerRole.getText();

        String dob = txtFundManagerDOB.getText();
        if(!data.dateCheck(dob)){
            JOptionPane.showMessageDialog(this, "Please enter correct date in format mm/dd/yyyy");
            return;
        }

        String emailid= txtFundManagerEmailId.getText();
        if(!data.emailCheck(emailid)){
            JOptionPane.showMessageDialog(this, "Enter valid email id");
            return;
        }

        if(!data.phnocheck(txtFundManagerPhno.getText())){
            JOptionPane.showMessageDialog(this, "Enter valid phone no");
            return;
        }
        Long phno = Long.valueOf(txtFundManagerPhno.getText());

        String pass = txtFundManagerPassword.getText();
        if(pass.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter valid password");
            return;
        }

        FundManager newManager = system.getFundManagerList().addFundManager();

        newManager.setFundManagerId(id);
        newManager.setName(name);
        newManager.setUsername(username);
        newManager.setAge(age);
        newManager.setGender(gender);
        newManager.setRole(role);
        newManager.setDob(dob);
        newManager.setEmailId(emailid);
        newManager.setPhno(phno);
        newManager.setPassword(pass);

        JOptionPane.showMessageDialog(this, "Fund Manager created successfully");

        txtFundManagerId.setText("");
        txtFundManagerName.setText("");
        txtFundManagerUsername.setText("");
        txtFundManagerAge.setText("");
        txtFundManagerDOB.setText("");
        txtFundManagerEmailId.setText("");
        txtFundManagerPhno.setText("");
        txtFundManagerPassword.setText("");

        //        dB4OUtil.storeSystem(system);
        populateFundManagerTable();
    }//GEN-LAST:event_btnFundManagerCreateActionPerformed

    private void btnFundMangerUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFundMangerUpdateActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableFundManager.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableFundManager.getModel();
            FundManager selMan = (FundManager) model.getValueAt(selectedRowIndex,0);

            //            selMan.setFundManagerId(txtFundManagerId.getText());

            selMan.setName(txtFundManagerName.getText());
            if(txtFundManagerPassword.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Enter valid name");
                return;
            }
            selMan.setName(txtFundManagerName.getText());

            //            selMan.setUsername(txtFundManagerUsername.getText());

            if(!data.numcheck(txtFundManagerAge.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid age");
                return;
            }

            selMan.setAge(Integer.valueOf(txtFundManagerAge.getText()));

            selMan.setDob(txtFundManagerDOB.getText());
            if(!data.dateCheck(txtFundManagerDOB.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid date");
                return;
            }

            selMan.setGender(String.valueOf(cmbFundManagerGender.getSelectedItem()));

            selMan.setRole(txtFundManagerRole.getText());

            selMan.setEmailId(txtFundManagerEmailId.getText());
            if(!data.emailCheck(txtFundManagerEmailId.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid emailid");
                return;
            }

            selMan.setPhno(Long.valueOf(txtFundManagerPhno.getText()));

            if(!data.phnocheck(txtFundManagerPhno.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid phone no");
                return;
            }

            selMan.setPassword(txtFundManagerPassword.getText());
            if(txtFundManagerPassword.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Enter valid password");
                return;
            }

            JOptionPane.showMessageDialog(this, "Fund Manager updated successfully");

            //            dB4OUtil.storeSystem(system);
            populateFundManagerTable();
        }
    }//GEN-LAST:event_btnFundMangerUpdateActionPerformed

    private void btnChildrenCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChildrenCreateActionPerformed
        // TODO add your handling code here:
        String id = txtChildrenId.getText();
        if(id.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Id");
            return;
        }
        else if(system.getChildrenList().uiqueChildrenId(id)== false){
            JOptionPane.showMessageDialog(this, "Id already exist");
            return;
        }

        String name = txtChildrenName.getText();
        if(name.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the name");
            return;
        }

        if(data.numcheck(txtChildrenAge.getText())==false){
            JOptionPane.showMessageDialog(this, "Enter valid age");
            return;
        }
        Integer age = Integer.valueOf(txtChildrenAge.getText());

        String dob = txtChildrenDOB.getText();
        if(!data.dateCheck(dob)){
            JOptionPane.showMessageDialog(this, "Please enter correct date in format mm/dd/yyyy");
            return;
        }

        String gender = String.valueOf(cmbChildrenGender.getSelectedItem());

        String role = txtChildrenRole.getText();

        String caretaker = String.valueOf(txtChildrenCaretaker.getSelectedItem());

        Children newManager = system.getChildrenList().addChildren();

        newManager.setChildrenId(id);
        newManager.setName(name);
        newManager.setAge(age);
        newManager.setDob(dob);
        newManager.setGender(gender);
        newManager.setRole(role);
        newManager.setCaretaker(caretaker);

        JOptionPane.showMessageDialog(this, "Child created successfully");

        txtChildrenId.setText("");
        txtChildrenName.setText("");
        txtChildrenAge.setText("");
        txtChildrenDOB.setText("");

        //        dB4OUtil.storeSystem(system);
        populateChildrenCreateTable();
        populateChildrenEducationTable();
        populateChildrenHealthTable();
    }//GEN-LAST:event_btnChildrenCreateActionPerformed

    private void btnChildrenUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChildrenUpdateActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableChildrenCreate.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableChildrenCreate.getModel();
            Children selMan = (Children) model.getValueAt(selectedRowIndex,0);

            //            selMan.setChildrenId(txtChildrenId.getText());

            selMan.setName(txtChildrenName.getText());
            if(txtChildrenName.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Enter valid name");
                return;
            }

            if(!data.numcheck(txtChildrenAge.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid age");
                return;
            }
            selMan.setAge(Integer.valueOf(txtChildrenAge.getText()));

            selMan.setDob(txtChildrenDOB.getText());
            if(!data.dateCheck(txtChildrenDOB.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid date");
                return;
            }

            selMan.setGender(String.valueOf(cmbChildrenGender.getSelectedItem()));

            selMan.setRole(txtChildrenRole.getText());

            selMan.setCaretaker(String.valueOf(txtChildrenCaretaker.getSelectedItem()));

            JOptionPane.showMessageDialog(this, "Child updated successfully");

            //            dB4OUtil.storeSystem(system);
            populateChildrenCreateTable();
            populateChildrenEducationTable();
            populateChildrenHealthTable();
        }
    }//GEN-LAST:event_btnChildrenUpdateActionPerformed

    private void btnPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceOrderActionPerformed
        // TODO add your handling code here:
        String id = txtOrderId.getText();
        if(id.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter Order Id");
            return;
        }
        else if(system.getNgoOrderList().uiqueNgoOrderId(id)== false){
            JOptionPane.showMessageDialog(this, "Order already exist");
            return;
        }

        String items = String.valueOf(txtItem.getSelectedItem());

        if(data.numcheck(txtQty.getText())==false){
            JOptionPane.showMessageDialog(this, "Enter valid Quantity");
            return;
        }
        Integer qty = Integer.valueOf(txtQty.getText());

        String status = txtStatus.getText();

        NgoOrder newManager = system.getNgoOrderList().addNgoOrder();

        newManager.setOrderid(id);
        newManager.setItems(items);
        newManager.setQty(qty);
        newManager.setStatus(status);

        JOptionPane.showMessageDialog(this, "Order created successfully");

        txtOrderId.setText("");

        txtQty.setText("");

        populateNgoOrderTable();
    }//GEN-LAST:event_btnPlaceOrderActionPerformed

    private void btnAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAppointmentActionPerformed
        // TODO add your handling code here:
        String appNo = txtApplicationNo1.getText();
        if(appNo.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter Application Number");
            return;
        }
        else if(system.getHosAppList().uiqueAppId(appNo)== false){
            JOptionPane.showMessageDialog(this, "Application Number already exist");
            return;
        }

        String name = txtChildName1.getText();
        Integer age = Integer.valueOf(txtChildAge1.getText());

        String gender = txtChildGender2.getText();

        String date  = txtAppDate.getText();
        if(!data.dateCheck(date)){
            JOptionPane.showMessageDialog(this, "Please enter correct date in format mm/dd/yyyy");
            return;
        }

        String status = txtStatus1.getText();

        String comm = txtChildComment1.getText();
        if(comm.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter Comment");
            return;
        }

        Appointment newApp = system.getHosAppList().addAppointment();

        newApp.setAppNo(appNo);
        newApp.setPatient(name);
        newApp.setAge(age);

        newApp.setGender(gender);
        newApp.setDate(name);
        newApp.setStatus(status);

        newApp.setComment(comm);

        JOptionPane.showMessageDialog(this, "Application submitted successfully");

        txtApplicationNo1.setText("");
        txtChildName1.setText("");
        txtChildAge1.setText("");

        txtChildGender2.setText("");
        txtAppDate.setText("");
        txtChildComment1.setText("");

        populateAppoinmentTable();

    }//GEN-LAST:event_btnAppointmentActionPerformed

    private void txtCaretakerEmailIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCaretakerEmailIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCaretakerEmailIdActionPerformed

        

    private void populateCaretakerTable(){
        DefaultTableModel model = (DefaultTableModel) tableCaretaker.getModel();
        model.setRowCount(0);
        
//        
            for(Caretaker c: system.getCareTakerList().getCaretakerList()){

                Object[] row = new Object[5];
                row[0] = c; 
                row[1] = c.getName();
                row[2] = c.getUsername();
                row[3] = c.getAge();
                row[4] = c.getEmailId();
                model.addRow(row);
            }
    }
    
    private void populateFundManagerTable(){
        DefaultTableModel model = (DefaultTableModel) tableFundManager.getModel();
        model.setRowCount(0);
        
//        
            for(FundManager f: system.getFundManagerList().getFundManagerList()){

                Object[] row = new Object[5];
                row[0] = f; 
                row[1] = f.getName();
                row[2] = f.getUsername();
                row[3] = f.getAge();
                row[4] = f.getEmailId();
                model.addRow(row);
            }
    }
      
    private void populateChildrenCreateTable(){
        DefaultTableModel model = (DefaultTableModel) tableChildrenCreate.getModel();
        model.setRowCount(0);
        
//        
            for(Children c: system.getChildrenList().getChildrenList()){

                Object[] row = new Object[5];
                row[0] = c; 
                row[1] = c.getName();
                row[2] = c.getAge();
                row[3] = c.getDob();
                row[4] = c.getGender();
                model.addRow(row);
            }
      }
      
   
      private void populateChildrenEducationTable(){
        DefaultTableModel model = (DefaultTableModel) tableChildrenEducation.getModel();
        model.setRowCount(0);
        
//        
            for(Children c: system.getChildrenList().getChildrenList()){

                Object[] row = new Object[5];
                row[0] = c; 
                row[1] = c.getName();
                row[2] = c.getAge();
                row[3] = c.getDob();
                row[4] = c.getGender();
                model.addRow(row);
            }
      }

      private void populateStudentApp(){
        DefaultTableModel model = (DefaultTableModel) tableChildrenApp.getModel();
        model.setRowCount(0);
        
//        
            for(Application man: system.getApplicationList().getApplicationList()){

                Object[] row = new Object[5];
                row[0] = man; 
                row[1] = man.getName();
                row[2] = man.getAge();
                row[3] = man.getGender();
//                row[4] = man.getNgo();
                row[4] = man.getStatus();
                model.addRow(row);
            }
          
      }
      
      private void populateAppoinmentTable(){
        DefaultTableModel model = (DefaultTableModel) tableChildrenAppoinment.getModel();
        model.setRowCount(0);
        
//        
            for(Appointment man: system.getHosAppList().getHosAppList()){

                Object[] row = new Object[5];
                row[0] = man; 
                row[1] = man.getPatient();
                row[2] = man.getAge();
                row[3] = man.getGender();
//                row[4] = man.getNgo();
                row[4] = man.getStatus();
                model.addRow(row);
            }
          
      }
      
      private void populateChildrenHealthTable(){
        DefaultTableModel model = (DefaultTableModel) tableChildrenHealth.getModel();
        model.setRowCount(0);
        
//        
            for(Children c: system.getChildrenList().getChildrenList()){

                Object[] row = new Object[5];
                row[0] = c; 
                row[1] = c.getName();
                row[2] = c.getAge();
                row[3] = c.getDob();
                row[4] = c.getGender();
                model.addRow(row);
            }
      }
      
       private void populateNgoOrderTable(){
        DefaultTableModel model = (DefaultTableModel) tableNgoOrder.getModel();
        model.setRowCount(0);
        
//        
            for(NgoOrder man: system.getNgoOrderList().getNgoOrderList()){

                Object[] row = new Object[4];
                row[0] = man; 
                row[1] = man.getItems();
                row[2] = man.getQty();
                row[3] = man.getStatus();
         
                model.addRow(row);
            }
          
      }
      
     public void populateCombo(){
        String[] docArr1 = system.getCareTakerList().carUsernameArray();
        DefaultComboBoxModel dn1 = new DefaultComboBoxModel(docArr1);
        txtChildrenCaretaker.setModel(dn1);
        
        String[] docArr = system.getMedicineList().medArray();
        DefaultComboBoxModel dn = new DefaultComboBoxModel(docArr);
        txtItem.setModel(dn);
      }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane5;
    private javax.swing.JScrollPane ScrollPane6;
    private javax.swing.JScrollPane ScrollPane7;
    private javax.swing.JScrollPane ScrollPane8;
    private javax.swing.JScrollPane ScrollPane9;
    private javax.swing.JScrollPane ScrollPaneNgoManager1;
    private javax.swing.JScrollPane ScrollPaneNgoManager2;
    private javax.swing.JSplitPane SplitPaneNgoManager;
    private javax.swing.JButton btnApply;
    private javax.swing.JButton btnAppointment;
    private javax.swing.JButton btnAutofill;
    private javax.swing.JButton btnAutofill1;
    private javax.swing.JButton btnCaretaker;
    private javax.swing.JButton btnCaretakerCreate;
    private javax.swing.JButton btnCaretakerDelete;
    private javax.swing.JButton btnCaretakerUpdate;
    private javax.swing.JButton btnCaretakerView;
    private javax.swing.JButton btnChildren;
    private javax.swing.JButton btnChildrenCreate;
    private javax.swing.JButton btnChildrenDelete;
    private javax.swing.JButton btnChildrenUpdate;
    private javax.swing.JButton btnChildrenView;
    private javax.swing.JButton btnEducation;
    private javax.swing.JButton btnEssentialItems;
    private javax.swing.JButton btnFundManagerCreate;
    private javax.swing.JButton btnFundManagerDelete;
    private javax.swing.JButton btnFundManagerView;
    private javax.swing.JButton btnFundMangerUpdate;
    private javax.swing.JButton btnHealth;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnPlaceOrder;
    private javax.swing.JComboBox<String> cmbCaretakerGender;
    private javax.swing.JTextField cmbChildGender;
    private javax.swing.JComboBox<String> cmbChildrenGender;
    private javax.swing.JComboBox<String> cmbFundManagerGender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblApplicationNo;
    private javax.swing.JLabel lblApplicationNo1;
    private javax.swing.JLabel lblCaretakerAge;
    private javax.swing.JLabel lblCaretakerDOB;
    private javax.swing.JLabel lblCaretakerEmailId;
    private javax.swing.JLabel lblCaretakerGender;
    private javax.swing.JLabel lblCaretakerId;
    private javax.swing.JLabel lblCaretakerName;
    private javax.swing.JLabel lblCaretakerPassword;
    private javax.swing.JLabel lblCaretakerPhno;
    private javax.swing.JLabel lblCaretakerRole;
    private javax.swing.JLabel lblCaretakerSearch;
    private javax.swing.JLabel lblCaretakerUsername;
    private javax.swing.JLabel lblChildAge;
    private javax.swing.JLabel lblChildAge1;
    private javax.swing.JLabel lblChildName;
    private javax.swing.JLabel lblChildName1;
    private javax.swing.JLabel lblChildName10;
    private javax.swing.JLabel lblChildName2;
    private javax.swing.JLabel lblChildName3;
    private javax.swing.JLabel lblChildName4;
    private javax.swing.JLabel lblChildName5;
    private javax.swing.JLabel lblChildName6;
    private javax.swing.JLabel lblChildName8;
    private javax.swing.JLabel lblChildName9;
    private javax.swing.JLabel lblChildrenAge;
    private javax.swing.JLabel lblChildrenCaretaker;
    private javax.swing.JLabel lblChildrenDob;
    private javax.swing.JLabel lblChildrenGender;
    private javax.swing.JLabel lblChildrenId;
    private javax.swing.JLabel lblChildrenName;
    private javax.swing.JLabel lblChildrenRole;
    private javax.swing.JLabel lblChildrenSearch;
    private javax.swing.JLabel lblFundManagerAge;
    private javax.swing.JLabel lblFundManagerDOB;
    private javax.swing.JLabel lblFundManagerEmailId;
    private javax.swing.JLabel lblFundManagerGender;
    private javax.swing.JLabel lblFundManagerId;
    private javax.swing.JLabel lblFundManagerName;
    private javax.swing.JLabel lblFundManagerPassword;
    private javax.swing.JLabel lblFundManagerPhno;
    private javax.swing.JLabel lblFundManagerRole;
    private javax.swing.JLabel lblFundManagerSearch;
    private javax.swing.JLabel lblFundManagerUsername;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblStatus1;
    private javax.swing.JLabel lblTitle10;
    private javax.swing.JLabel lblTitle2;
    private javax.swing.JLabel lblTitle3;
    private javax.swing.JLabel lblTitle4;
    private javax.swing.JLabel lblTitle6;
    private javax.swing.JLabel lblTitle7;
    private javax.swing.JLabel lblTitle9;
    private javax.swing.JPanel panelCareTaker;
    private javax.swing.JPanel panelChildren;
    private javax.swing.JPanel panelControl;
    private javax.swing.JPanel panelEducation;
    private javax.swing.JPanel panelFoodInv;
    private javax.swing.JPanel panelFundManager;
    private javax.swing.JPanel panelHealth;
    private javax.swing.JPanel panelHome;
    private javax.swing.JPanel panelWork;
    private javax.swing.JTable tableCaretaker;
    private javax.swing.JTable tableChildrenApp;
    private javax.swing.JTable tableChildrenAppoinment;
    private javax.swing.JTable tableChildrenCreate;
    private javax.swing.JTable tableChildrenEducation;
    private javax.swing.JTable tableChildrenHealth;
    private javax.swing.JTable tableFundManager;
    private javax.swing.JTable tableNgoOrder;
    private javax.swing.JTextField txtAppDate;
    private javax.swing.JTextField txtApplicationNo;
    private javax.swing.JTextField txtApplicationNo1;
    private javax.swing.JTextField txtCaretakerAge;
    private javax.swing.JTextField txtCaretakerDOB;
    private javax.swing.JTextField txtCaretakerEmailId;
    private javax.swing.JTextField txtCaretakerId;
    private javax.swing.JTextField txtCaretakerName;
    private javax.swing.JPasswordField txtCaretakerPassword;
    private javax.swing.JTextField txtCaretakerPhno;
    private javax.swing.JTextField txtCaretakerRole;
    private javax.swing.JTextField txtCaretakerSearch;
    private javax.swing.JTextField txtCaretakerUsername;
    private javax.swing.JTextField txtChildAge;
    private javax.swing.JTextField txtChildAge1;
    private javax.swing.JTextField txtChildClass;
    private javax.swing.JTextArea txtChildComment;
    private javax.swing.JTextArea txtChildComment1;
    private javax.swing.JTextField txtChildDOB;
    private javax.swing.JTextField txtChildGender2;
    private javax.swing.JTextField txtChildName;
    private javax.swing.JTextField txtChildName1;
    private javax.swing.JTextField txtChildSchool;
    private javax.swing.JTextField txtChildrenAge;
    private javax.swing.JComboBox<String> txtChildrenCaretaker;
    private javax.swing.JTextField txtChildrenDOB;
    private javax.swing.JTextField txtChildrenId;
    private javax.swing.JTextField txtChildrenName;
    private javax.swing.JTextField txtChildrenRole;
    private javax.swing.JTextField txtChildrenSearch;
    private javax.swing.JTextField txtFundManagerAge;
    private javax.swing.JTextField txtFundManagerDOB;
    private javax.swing.JTextField txtFundManagerEmailId;
    private javax.swing.JTextField txtFundManagerId;
    private javax.swing.JTextField txtFundManagerName;
    private javax.swing.JPasswordField txtFundManagerPassword;
    private javax.swing.JTextField txtFundManagerPhno;
    private javax.swing.JTextField txtFundManagerRole;
    private javax.swing.JTextField txtFundManagerSearch;
    private javax.swing.JTextField txtFundManagerUsername;
    private javax.swing.JComboBox<String> txtItem;
    private javax.swing.JTextField txtNgo;
    private javax.swing.JTextField txtOrderId;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtStatus1;
    private javax.swing.JTextField txtStatus2;
    // End of variables declaration//GEN-END:variables

   
}
