/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Ui.Ngo;

import Funding.FundManager.FundManager;
import Funding.PublicUser.PublicUser;
import Hospital.Encounter.Appointment;
import Ngo.Budget.Budget;
import Ngo.CareTaker.Caretaker;
import Ngo.Children.Children;
import Ngo.NgoManager.NgoManager;
import Ngo.Order.NgoOrder;
import School.Application.Application;
import System.Directories.DB4OUtil;
import System.Directories.DataValidation;
import System.Directories.MainSystem;
import java.awt.CardLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author SrushtiGhatage
 */
public class NgoAdminWorkspace extends javax.swing.JPanel {

    /**
     * Creates new form NgoAdminWorkspace
     */
    
    private JPanel cardPanel;
    private MainSystem system;
    private DB4OUtil dB4OUtil;
    private final String FILENAME = "ProjectDataBank.db4o";
    private DataValidation data;
    
    public NgoAdminWorkspace(JPanel cardPanel, MainSystem system, DB4OUtil dB4OUtil) {
        initComponents();
        this.cardPanel = cardPanel;
        this.system = system;
        this.dB4OUtil = dB4OUtil;
        this.data=new DataValidation();
        populateNgoManagerTable();
        populateCaretakerTable();
        populateFundManagerTable();
        populateChildrenCreateTable();
        populateChildrenHealthTable();
        populateChildrenEducationTable();
        populateStudentApp();
        populateAppoinmentTable();
        populatePublicUser();
        populateNgoOrderTable();
        populateCombo();
        initializeBud();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SplitPaneAdmin = new javax.swing.JSplitPane();
        panelAdminControl = new javax.swing.JPanel();
        btnHome = new javax.swing.JButton();
        btnNgoManager = new javax.swing.JButton();
        btnHealth = new javax.swing.JButton();
        btnEducation = new javax.swing.JButton();
        btnBudget = new javax.swing.JButton();
        btnCaretaker = new javax.swing.JButton();
        btnFundManager = new javax.swing.JButton();
        btnPerson = new javax.swing.JButton();
        lblAccounts = new javax.swing.JLabel();
        btnChildren = new javax.swing.JButton();
        btnEssentialItems = new javax.swing.JButton();
        panelAdminWork = new javax.swing.JPanel();
        panelHome = new javax.swing.JPanel();
        lblTitle2 = new javax.swing.JLabel();
        lblRole = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        panelNgoManager = new javax.swing.JPanel();
        lblTitle1 = new javax.swing.JLabel();
        lblNgoManagerName = new javax.swing.JLabel();
        lblNgoManagerAge = new javax.swing.JLabel();
        txtNgoManagerName = new javax.swing.JTextField();
        txtNgoManagerAge = new javax.swing.JTextField();
        btnNgoManagerCreate = new javax.swing.JButton();
        btnNgoManagerView = new javax.swing.JButton();
        ScrollPaneNgoManager = new javax.swing.JScrollPane();
        tableNgoManager = new javax.swing.JTable();
        btnNgoManagerDelete = new javax.swing.JButton();
        lblNgoManagerDOB = new javax.swing.JLabel();
        txtNgoManagerDOB = new javax.swing.JTextField();
        lblNgoManagerUsername = new javax.swing.JLabel();
        txtNgoManagerUsername = new javax.swing.JTextField();
        lblNgoManagerEmailId = new javax.swing.JLabel();
        txtNgoManagerEmailId = new javax.swing.JTextField();
        txtNgoManagerPhno = new javax.swing.JTextField();
        lblNgoManagerPhno = new javax.swing.JLabel();
        lblNgoManagerPassword = new javax.swing.JLabel();
        txtNgoManagerPassword = new javax.swing.JPasswordField();
        btnNgoMangerUpdate = new javax.swing.JButton();
        lblNgoManagerId = new javax.swing.JLabel();
        txtNgoManagerId = new javax.swing.JTextField();
        lblNgoManagerGender = new javax.swing.JLabel();
        cmbNgoManagerGender = new javax.swing.JComboBox<>();
        lblNgoManagerRole = new javax.swing.JLabel();
        txtNgoManagerRole = new javax.swing.JTextField();
        panelCareTaker = new javax.swing.JPanel();
        lblTitle3 = new javax.swing.JLabel();
        ScrollPaneNgoManager1 = new javax.swing.JScrollPane();
        tableCaretaker = new javax.swing.JTable();
        btnCaretakerView = new javax.swing.JButton();
        btnCaretakerDelete = new javax.swing.JButton();
        lblCaretakerId = new javax.swing.JLabel();
        txtCaretakerId = new javax.swing.JTextField();
        lblCaretakerEmailId = new javax.swing.JLabel();
        txtCaretakerEmailId = new javax.swing.JTextField();
        lblCaretakerName = new javax.swing.JLabel();
        txtCaretakerName = new javax.swing.JTextField();
        lblCaretakerPhno = new javax.swing.JLabel();
        txtCaretakerPhno = new javax.swing.JTextField();
        lblCaretakerUsername = new javax.swing.JLabel();
        txtCaretakerUsername = new javax.swing.JTextField();
        lblCaretakerPassword = new javax.swing.JLabel();
        txtCaretakerPassword = new javax.swing.JPasswordField();
        txtCaretakerAge = new javax.swing.JTextField();
        lblCaretakerAge = new javax.swing.JLabel();
        lblCaretakerDOB = new javax.swing.JLabel();
        txtCaretakerDOB = new javax.swing.JTextField();
        btnCaretakerCreate = new javax.swing.JButton();
        btnCaretakerUpdate = new javax.swing.JButton();
        lblCaretakerGender = new javax.swing.JLabel();
        cmbCaretakerGender = new javax.swing.JComboBox<>();
        lblCaretakerRole = new javax.swing.JLabel();
        txtCaretakerRole = new javax.swing.JTextField();
        panelFundManager = new javax.swing.JPanel();
        lblTitle4 = new javax.swing.JLabel();
        ScrollPaneNgoManager2 = new javax.swing.JScrollPane();
        tableFundManager = new javax.swing.JTable();
        btnFundManagerView = new javax.swing.JButton();
        btnFundManagerDelete = new javax.swing.JButton();
        lblFundManagerId = new javax.swing.JLabel();
        txtFundManagerId = new javax.swing.JTextField();
        lblFundManagerName = new javax.swing.JLabel();
        txtFundManagerName = new javax.swing.JTextField();
        lblFundManagerEmailId = new javax.swing.JLabel();
        txtFundManagerEmailId = new javax.swing.JTextField();
        lblFundManagerPhno = new javax.swing.JLabel();
        txtFundManagerPhno = new javax.swing.JTextField();
        lblFundManagerPassword = new javax.swing.JLabel();
        txtFundManagerPassword = new javax.swing.JPasswordField();
        txtFundManagerUsername = new javax.swing.JTextField();
        lblFundManagerUsername = new javax.swing.JLabel();
        lblFundManagerAge = new javax.swing.JLabel();
        txtFundManagerAge = new javax.swing.JTextField();
        lblFundManagerDOB = new javax.swing.JLabel();
        txtFundManagerDOB = new javax.swing.JTextField();
        btnFundManagerCreate = new javax.swing.JButton();
        btnFundMangerUpdate = new javax.swing.JButton();
        lblFundManagerGender = new javax.swing.JLabel();
        cmbFundManagerGender = new javax.swing.JComboBox<>();
        lblFundManagerRole = new javax.swing.JLabel();
        txtFundManagerRole = new javax.swing.JTextField();
        panelPerson = new javax.swing.JPanel();
        lblTitle5 = new javax.swing.JLabel();
        ScrollPane4 = new javax.swing.JScrollPane();
        tablePerson = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        panelHealth = new javax.swing.JPanel();
        lblTitle6 = new javax.swing.JLabel();
        ScrollPane5 = new javax.swing.JScrollPane();
        tableChildrenHealth = new javax.swing.JTable();
        btnAppointment = new javax.swing.JButton();
        btnAutofill1 = new javax.swing.JButton();
        ScrollPane9 = new javax.swing.JScrollPane();
        tableChildrenAppoinment = new javax.swing.JTable();
        lblApplicationNo1 = new javax.swing.JLabel();
        txtApplicationNo1 = new javax.swing.JTextField();
        lblChildName1 = new javax.swing.JLabel();
        txtChildName1 = new javax.swing.JTextField();
        lblChildAge1 = new javax.swing.JLabel();
        lblChildName8 = new javax.swing.JLabel();
        lblChildName9 = new javax.swing.JLabel();
        txtAppDate = new javax.swing.JTextField();
        lblStatus1 = new javax.swing.JLabel();
        txtStatus1 = new javax.swing.JTextField();
        lblChildName10 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtChildComment1 = new javax.swing.JTextArea();
        txtChildAge1 = new javax.swing.JTextField();
        txtChildGender2 = new javax.swing.JTextField();
        panelEducation = new javax.swing.JPanel();
        lblTitle7 = new javax.swing.JLabel();
        ScrollPane6 = new javax.swing.JScrollPane();
        tableChildrenApp = new javax.swing.JTable();
        lblChildName = new javax.swing.JLabel();
        txtChildName = new javax.swing.JTextField();
        btnApply = new javax.swing.JButton();
        lblApplicationNo = new javax.swing.JLabel();
        txtApplicationNo = new javax.swing.JTextField();
        txtChildAge = new javax.swing.JTextField();
        lblChildAge = new javax.swing.JLabel();
        lblChildName2 = new javax.swing.JLabel();
        txtChildDOB = new javax.swing.JTextField();
        lblChildName3 = new javax.swing.JLabel();
        lblChildName4 = new javax.swing.JLabel();
        txtChildSchool = new javax.swing.JTextField();
        lblChildName5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtChildComment = new javax.swing.JTextArea();
        lblStatus = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        ScrollPane8 = new javax.swing.JScrollPane();
        tableChildrenEducation = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblChildName6 = new javax.swing.JLabel();
        txtChildClass = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNgo = new javax.swing.JTextField();
        btnAutofill = new javax.swing.JButton();
        cmbChildGender = new javax.swing.JTextField();
        panelBudget = new javax.swing.JPanel();
        lblTitle8 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        lblEducation = new javax.swing.JLabel();
        txtEducation = new javax.swing.JTextField();
        lblHealth = new javax.swing.JLabel();
        txtHealth = new javax.swing.JTextField();
        lblFood = new javax.swing.JLabel();
        txtFood = new javax.swing.JTextField();
        lblExpenditure = new javax.swing.JLabel();
        lblIncome = new javax.swing.JLabel();
        txtDonation = new javax.swing.JTextField();
        lblDonation = new javax.swing.JLabel();
        txtOther = new javax.swing.JTextField();
        lblOthers = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        panelChildren = new javax.swing.JPanel();
        lblTitle9 = new javax.swing.JLabel();
        ScrollPane7 = new javax.swing.JScrollPane();
        tableChildrenCreate = new javax.swing.JTable();
        lblChildrenName = new javax.swing.JLabel();
        txtChildrenName = new javax.swing.JTextField();
        lblChildrenAge = new javax.swing.JLabel();
        txtChildrenAge = new javax.swing.JTextField();
        lblChildrenId = new javax.swing.JLabel();
        txtChildrenId = new javax.swing.JTextField();
        lblChildrenDob = new javax.swing.JLabel();
        txtChildrenDOB = new javax.swing.JTextField();
        lblChildrenGender = new javax.swing.JLabel();
        cmbChildrenGender = new javax.swing.JComboBox<>();
        btnChildrenView = new javax.swing.JButton();
        btnChildrenDelete = new javax.swing.JButton();
        btnChildrenCreate = new javax.swing.JButton();
        btnChildrenUpdate = new javax.swing.JButton();
        lblChildrenRole = new javax.swing.JLabel();
        txtChildrenRole = new javax.swing.JTextField();
        lblChildrenCaretaker = new javax.swing.JLabel();
        txtChildrenCaretaker = new javax.swing.JComboBox<>();
        panelFoodInv = new javax.swing.JPanel();
        lblTitle10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableNgoOrder = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtOrderId = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtStatus2 = new javax.swing.JTextField();
        btnPlaceOrder = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        txtItem = new javax.swing.JComboBox<>();

        panelAdminControl.setBackground(new java.awt.Color(51, 51, 51));

        btnHome.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnNgoManager.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnNgoManager.setText("NGO Manager");
        btnNgoManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNgoManagerActionPerformed(evt);
            }
        });

        btnHealth.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnHealth.setText("Health");
        btnHealth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHealthActionPerformed(evt);
            }
        });

        btnEducation.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnEducation.setText("Education");
        btnEducation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEducationActionPerformed(evt);
            }
        });

        btnBudget.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnBudget.setText("Budget");
        btnBudget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBudgetActionPerformed(evt);
            }
        });

        btnCaretaker.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnCaretaker.setText("Caretaker");
        btnCaretaker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaretakerActionPerformed(evt);
            }
        });

        btnFundManager.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnFundManager.setText("Fund Manager");
        btnFundManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFundManagerActionPerformed(evt);
            }
        });

        btnPerson.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnPerson.setText("Public User");
        btnPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPersonActionPerformed(evt);
            }
        });

        lblAccounts.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblAccounts.setForeground(new java.awt.Color(255, 255, 255));
        lblAccounts.setText("Accounts:");

        btnChildren.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnChildren.setText("Children");
        btnChildren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChildrenActionPerformed(evt);
            }
        });

        btnEssentialItems.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnEssentialItems.setText("Orders");
        btnEssentialItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEssentialItemsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAdminControlLayout = new javax.swing.GroupLayout(panelAdminControl);
        panelAdminControl.setLayout(panelAdminControlLayout);
        panelAdminControlLayout.setHorizontalGroup(
            panelAdminControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminControlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAdminControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEducation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBudget, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCaretaker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFundManager, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPerson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelAdminControlLayout.createSequentialGroup()
                        .addComponent(lblAccounts)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnChildren, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEssentialItems, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHealth, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAdminControlLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNgoManager))
                    .addComponent(btnHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelAdminControlLayout.setVerticalGroup(
            panelAdminControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminControlLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(btnHome)
                .addGap(18, 18, 18)
                .addComponent(btnHealth)
                .addGap(18, 18, 18)
                .addComponent(btnEducation)
                .addGap(18, 18, 18)
                .addComponent(btnBudget)
                .addGap(18, 18, 18)
                .addComponent(btnEssentialItems)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 193, Short.MAX_VALUE)
                .addComponent(lblAccounts)
                .addGap(18, 18, 18)
                .addComponent(btnNgoManager)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCaretaker)
                .addGap(18, 18, 18)
                .addComponent(btnFundManager)
                .addGap(18, 18, 18)
                .addComponent(btnPerson)
                .addGap(18, 18, 18)
                .addComponent(btnChildren)
                .addGap(81, 81, 81))
        );

        SplitPaneAdmin.setLeftComponent(panelAdminControl);

        panelAdminWork.setLayout(new java.awt.CardLayout());

        panelHome.setBackground(new java.awt.Color(245, 245, 245));
        panelHome.setLayout(null);

        lblTitle2.setFont(new java.awt.Font("Rockwell", 1, 40)); // NOI18N
        lblTitle2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle2.setText("NGO Admin");
        panelHome.add(lblTitle2);
        lblTitle2.setBounds(190, 40, 568, 48);

        lblRole.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        lblRole.setText("Role: NGO Admin");
        panelHome.add(lblRole);
        lblRole.setBounds(967, 106, 139, 16);

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });
        panelHome.add(btnLogOut);
        btnLogOut.setBounds(967, 128, 73, 23);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/ngoadminworkspace.gif"))); // NOI18N
        panelHome.add(jLabel8);
        jLabel8.setBounds(0, 50, 1180, 690);

        panelAdminWork.add(panelHome, "card3");

        panelNgoManager.setBackground(new java.awt.Color(204, 255, 255));
        panelNgoManager.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle1.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle1.setText("NGO Manager");
        panelNgoManager.add(lblTitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 860, -1));

        lblNgoManagerName.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblNgoManagerName.setText("Name:");
        panelNgoManager.add(lblNgoManagerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 331, -1, -1));

        lblNgoManagerAge.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblNgoManagerAge.setText("Age:");
        panelNgoManager.add(lblNgoManagerAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 411, -1, -1));
        panelNgoManager.add(txtNgoManagerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 328, 206, -1));
        panelNgoManager.add(txtNgoManagerAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 408, 206, -1));

        btnNgoManagerCreate.setBackground(new java.awt.Color(0, 51, 51));
        btnNgoManagerCreate.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnNgoManagerCreate.setForeground(new java.awt.Color(255, 255, 255));
        btnNgoManagerCreate.setText("Create");
        btnNgoManagerCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNgoManagerCreateActionPerformed(evt);
            }
        });
        panelNgoManager.add(btnNgoManagerCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(516, 237, -1, -1));

        btnNgoManagerView.setBackground(new java.awt.Color(0, 51, 51));
        btnNgoManagerView.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnNgoManagerView.setForeground(new java.awt.Color(255, 255, 255));
        btnNgoManagerView.setText("View");
        btnNgoManagerView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNgoManagerViewActionPerformed(evt);
            }
        });
        panelNgoManager.add(btnNgoManagerView, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 237, -1, -1));

        tableNgoManager.setBackground(new java.awt.Color(255, 255, 204));
        tableNgoManager.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        tableNgoManager.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Username", "Age", "Email-Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableNgoManager.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ScrollPaneNgoManager.setViewportView(tableNgoManager);

        panelNgoManager.add(ScrollPaneNgoManager, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 107, 695, 112));

        btnNgoManagerDelete.setBackground(new java.awt.Color(0, 51, 51));
        btnNgoManagerDelete.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnNgoManagerDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnNgoManagerDelete.setText("Delete");
        btnNgoManagerDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNgoManagerDeleteActionPerformed(evt);
            }
        });
        panelNgoManager.add(btnNgoManagerDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 237, -1, -1));

        lblNgoManagerDOB.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblNgoManagerDOB.setText("DOB:");
        panelNgoManager.add(lblNgoManagerDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 451, -1, -1));
        panelNgoManager.add(txtNgoManagerDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 448, 206, -1));

        lblNgoManagerUsername.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblNgoManagerUsername.setText("Username:");
        panelNgoManager.add(lblNgoManagerUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 371, -1, -1));
        panelNgoManager.add(txtNgoManagerUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 368, 206, -1));

        lblNgoManagerEmailId.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblNgoManagerEmailId.setText("Email-Id:");
        panelNgoManager.add(lblNgoManagerEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 568, -1, -1));
        panelNgoManager.add(txtNgoManagerEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 568, 206, -1));
        panelNgoManager.add(txtNgoManagerPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 608, 206, -1));

        lblNgoManagerPhno.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblNgoManagerPhno.setText("Phone No:");
        panelNgoManager.add(lblNgoManagerPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 608, -1, -1));

        lblNgoManagerPassword.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblNgoManagerPassword.setText("Password:");
        panelNgoManager.add(lblNgoManagerPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 648, -1, -1));
        panelNgoManager.add(txtNgoManagerPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 648, 206, -1));

        btnNgoMangerUpdate.setBackground(new java.awt.Color(0, 51, 51));
        btnNgoMangerUpdate.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnNgoMangerUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnNgoMangerUpdate.setText("Update");
        btnNgoMangerUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNgoMangerUpdateActionPerformed(evt);
            }
        });
        panelNgoManager.add(btnNgoMangerUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 237, -1, -1));

        lblNgoManagerId.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblNgoManagerId.setText("NGO Manager Id:");
        panelNgoManager.add(lblNgoManagerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 291, -1, -1));
        panelNgoManager.add(txtNgoManagerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 288, 206, -1));

        lblNgoManagerGender.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblNgoManagerGender.setText("Gender:");
        panelNgoManager.add(lblNgoManagerGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 531, -1, -1));

        cmbNgoManagerGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));
        panelNgoManager.add(cmbNgoManagerGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 528, 206, -1));

        lblNgoManagerRole.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblNgoManagerRole.setText("Role:");
        panelNgoManager.add(lblNgoManagerRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 491, -1, -1));

        txtNgoManagerRole.setEditable(false);
        txtNgoManagerRole.setText("NGO Manager");
        panelNgoManager.add(txtNgoManagerRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 488, 206, -1));

        panelAdminWork.add(panelNgoManager, "card2");

        panelCareTaker.setBackground(new java.awt.Color(204, 255, 255));
        panelCareTaker.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle3.setFont(new java.awt.Font("Rockwell", 1, 40)); // NOI18N
        lblTitle3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle3.setText("NGO Caretaker");
        panelCareTaker.add(lblTitle3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 900, -1));

        tableCaretaker.setBackground(new java.awt.Color(255, 255, 204));
        tableCaretaker.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Username", "Age", "Email-Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableCaretaker.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ScrollPaneNgoManager1.setViewportView(tableCaretaker);

        panelCareTaker.add(ScrollPaneNgoManager1, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 102, 695, 112));

        btnCaretakerView.setBackground(new java.awt.Color(0, 51, 51));
        btnCaretakerView.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnCaretakerView.setForeground(new java.awt.Color(255, 255, 255));
        btnCaretakerView.setText("View");
        btnCaretakerView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaretakerViewActionPerformed(evt);
            }
        });
        panelCareTaker.add(btnCaretakerView, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 232, -1, -1));

        btnCaretakerDelete.setBackground(new java.awt.Color(0, 51, 51));
        btnCaretakerDelete.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnCaretakerDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnCaretakerDelete.setText("Delete");
        btnCaretakerDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaretakerDeleteActionPerformed(evt);
            }
        });
        panelCareTaker.add(btnCaretakerDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 232, -1, -1));

        lblCaretakerId.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblCaretakerId.setText("Caretaker Id:");
        panelCareTaker.add(lblCaretakerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        txtCaretakerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCaretakerIdActionPerformed(evt);
            }
        });
        panelCareTaker.add(txtCaretakerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 300, 200, -1));

        lblCaretakerEmailId.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblCaretakerEmailId.setText("Email-Id:");
        panelCareTaker.add(lblCaretakerEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 582, -1, -1));
        panelCareTaker.add(txtCaretakerEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 582, 200, -1));

        lblCaretakerName.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblCaretakerName.setText("Name:");
        panelCareTaker.add(lblCaretakerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, -1));
        panelCareTaker.add(txtCaretakerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 340, 200, -1));

        lblCaretakerPhno.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblCaretakerPhno.setText("Phone No:");
        panelCareTaker.add(lblCaretakerPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 625, -1, -1));
        panelCareTaker.add(txtCaretakerPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 622, 200, -1));

        lblCaretakerUsername.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblCaretakerUsername.setText("Username:");
        panelCareTaker.add(lblCaretakerUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 390, -1, -1));
        panelCareTaker.add(txtCaretakerUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 387, 200, -1));

        lblCaretakerPassword.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblCaretakerPassword.setText("Password:");
        panelCareTaker.add(lblCaretakerPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 665, -1, -1));
        panelCareTaker.add(txtCaretakerPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 662, 200, -1));
        panelCareTaker.add(txtCaretakerAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 427, 200, -1));

        lblCaretakerAge.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblCaretakerAge.setText("Age:");
        panelCareTaker.add(lblCaretakerAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 430, -1, -1));

        lblCaretakerDOB.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblCaretakerDOB.setText("DOB:");
        panelCareTaker.add(lblCaretakerDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, -1, -1));
        panelCareTaker.add(txtCaretakerDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 470, 200, -1));

        btnCaretakerCreate.setText("Create");
        btnCaretakerCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaretakerCreateActionPerformed(evt);
            }
        });
        panelCareTaker.add(btnCaretakerCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(521, 232, -1, -1));

        btnCaretakerUpdate.setText("Update");
        btnCaretakerUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaretakerUpdateActionPerformed(evt);
            }
        });
        panelCareTaker.add(btnCaretakerUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 232, -1, -1));

        lblCaretakerGender.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblCaretakerGender.setText("Gender:");
        panelCareTaker.add(lblCaretakerGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 514, -1, -1));

        cmbCaretakerGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));
        panelCareTaker.add(cmbCaretakerGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 510, 200, -1));

        lblCaretakerRole.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblCaretakerRole.setText("Role:");
        panelCareTaker.add(lblCaretakerRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 548, -1, -1));

        txtCaretakerRole.setEditable(false);
        txtCaretakerRole.setText("Caretaker");
        panelCareTaker.add(txtCaretakerRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 550, 200, -1));

        panelAdminWork.add(panelCareTaker, "card4");

        panelFundManager.setBackground(new java.awt.Color(204, 255, 255));
        panelFundManager.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle4.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitle4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle4.setText("Fund Manager");
        panelFundManager.add(lblTitle4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 1290, -1));

        tableFundManager.setBackground(new java.awt.Color(255, 255, 204));
        tableFundManager.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Username", "Age", "Email-Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableFundManager.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ScrollPaneNgoManager2.setViewportView(tableFundManager);

        panelFundManager.add(ScrollPaneNgoManager2, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 81, 695, 112));

        btnFundManagerView.setBackground(new java.awt.Color(0, 51, 51));
        btnFundManagerView.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnFundManagerView.setForeground(new java.awt.Color(255, 255, 255));
        btnFundManagerView.setText("View");
        btnFundManagerView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFundManagerViewActionPerformed(evt);
            }
        });
        panelFundManager.add(btnFundManagerView, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 211, -1, -1));

        btnFundManagerDelete.setBackground(new java.awt.Color(0, 51, 51));
        btnFundManagerDelete.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnFundManagerDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnFundManagerDelete.setText("Delete");
        btnFundManagerDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFundManagerDeleteActionPerformed(evt);
            }
        });
        panelFundManager.add(btnFundManagerDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 211, -1, -1));

        lblFundManagerId.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblFundManagerId.setText("Fund Manager Id:");
        panelFundManager.add(lblFundManagerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 483, -1, -1));
        panelFundManager.add(txtFundManagerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 480, 210, -1));

        lblFundManagerName.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblFundManagerName.setText("Name:");
        panelFundManager.add(lblFundManagerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 268, -1, -1));
        panelFundManager.add(txtFundManagerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 268, 206, -1));

        lblFundManagerEmailId.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblFundManagerEmailId.setText("Email-Id:");
        panelFundManager.add(lblFundManagerEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 508, -1, -1));
        panelFundManager.add(txtFundManagerEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 508, 210, -1));

        lblFundManagerPhno.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblFundManagerPhno.setText("Phone No:");
        panelFundManager.add(lblFundManagerPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 548, 63, -1));
        panelFundManager.add(txtFundManagerPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 548, 210, -1));

        lblFundManagerPassword.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblFundManagerPassword.setText("Password:");
        panelFundManager.add(lblFundManagerPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 588, -1, -1));
        panelFundManager.add(txtFundManagerPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 588, 210, -1));
        panelFundManager.add(txtFundManagerUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 302, 206, -1));

        lblFundManagerUsername.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblFundManagerUsername.setText("Username:");
        panelFundManager.add(lblFundManagerUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 302, -1, -1));

        lblFundManagerAge.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblFundManagerAge.setText("Age:");
        panelFundManager.add(lblFundManagerAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 344, -1, -1));
        panelFundManager.add(txtFundManagerAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 342, 206, -1));

        lblFundManagerDOB.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblFundManagerDOB.setText("DOB:");
        panelFundManager.add(lblFundManagerDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 378, -1, -1));
        panelFundManager.add(txtFundManagerDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 376, 206, -1));

        btnFundManagerCreate.setBackground(new java.awt.Color(0, 51, 51));
        btnFundManagerCreate.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnFundManagerCreate.setForeground(new java.awt.Color(255, 255, 255));
        btnFundManagerCreate.setText("Create");
        btnFundManagerCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFundManagerCreateActionPerformed(evt);
            }
        });
        panelFundManager.add(btnFundManagerCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(479, 211, -1, -1));

        btnFundMangerUpdate.setBackground(new java.awt.Color(0, 51, 51));
        btnFundMangerUpdate.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnFundMangerUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnFundMangerUpdate.setText("Update");
        btnFundMangerUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFundMangerUpdateActionPerformed(evt);
            }
        });
        panelFundManager.add(btnFundMangerUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(617, 211, -1, -1));

        lblFundManagerGender.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblFundManagerGender.setText("Gender:");
        panelFundManager.add(lblFundManagerGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 413, -1, -1));

        cmbFundManagerGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));
        cmbFundManagerGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFundManagerGenderActionPerformed(evt);
            }
        });
        panelFundManager.add(cmbFundManagerGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 410, 210, -1));

        lblFundManagerRole.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblFundManagerRole.setText("Role:");
        panelFundManager.add(lblFundManagerRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 452, -1, -1));

        txtFundManagerRole.setEditable(false);
        txtFundManagerRole.setText("Fund Manager");
        panelFundManager.add(txtFundManagerRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 446, 210, -1));

        panelAdminWork.add(panelFundManager, "card5");

        panelPerson.setBackground(new java.awt.Color(255, 255, 204));
        panelPerson.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle5.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitle5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle5.setText("Public User");
        panelPerson.add(lblTitle5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 940, -1));

        tablePerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Username", "Name", "Age", "Gender", "Email-Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScrollPane4.setViewportView(tablePerson);

        panelPerson.add(ScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 1110, 129));

        btnDelete.setBackground(new java.awt.Color(0, 51, 51));
        btnDelete.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete Account");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        panelPerson.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 260, -1, -1));

        panelAdminWork.add(panelPerson, "card6");

        panelHealth.setBackground(new java.awt.Color(204, 255, 255));
        panelHealth.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle6.setFont(new java.awt.Font("Rockwell", 1, 40)); // NOI18N
        lblTitle6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle6.setText("Children Health");
        panelHealth.add(lblTitle6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 18, 1290, -1));

        tableChildrenHealth.setBackground(new java.awt.Color(255, 255, 204));
        tableChildrenHealth.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Children Id", "Name", "Age", "DOB", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScrollPane5.setViewportView(tableChildrenHealth);
        if (tableChildrenHealth.getColumnModel().getColumnCount() > 0) {
            tableChildrenHealth.getColumnModel().getColumn(3).setHeaderValue("DOB");
        }

        panelHealth.add(ScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 123, 699, 93));

        btnAppointment.setBackground(new java.awt.Color(0, 51, 51));
        btnAppointment.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnAppointment.setForeground(new java.awt.Color(255, 255, 255));
        btnAppointment.setText("Book Appointment");
        btnAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAppointmentActionPerformed(evt);
            }
        });
        panelHealth.add(btnAppointment, new org.netbeans.lib.awtextra.AbsoluteConstraints(786, 148, -1, -1));

        btnAutofill1.setBackground(new java.awt.Color(0, 51, 51));
        btnAutofill1.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnAutofill1.setForeground(new java.awt.Color(255, 255, 255));
        btnAutofill1.setText("Autofill");
        btnAutofill1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutofill1ActionPerformed(evt);
            }
        });
        panelHealth.add(btnAutofill1, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 222, -1, -1));

        tableChildrenAppoinment.setBackground(new java.awt.Color(255, 255, 204));
        tableChildrenAppoinment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Appointment Id", "Name", "Age", "Gender", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScrollPane9.setViewportView(tableChildrenAppoinment);

        panelHealth.add(ScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 251, 699, 93));

        lblApplicationNo1.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblApplicationNo1.setText("Appointment Id:");
        panelHealth.add(lblApplicationNo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 377, -1, -1));

        txtApplicationNo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApplicationNo1ActionPerformed(evt);
            }
        });
        panelHealth.add(txtApplicationNo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 374, 219, -1));

        lblChildName1.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblChildName1.setText("Name:");
        panelHealth.add(lblChildName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 417, -1, -1));
        panelHealth.add(txtChildName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 414, 219, -1));

        lblChildAge1.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblChildAge1.setText("Age:");
        panelHealth.add(lblChildAge1, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 457, -1, -1));

        lblChildName8.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblChildName8.setText("Gender:");
        panelHealth.add(lblChildName8, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 497, -1, -1));

        lblChildName9.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblChildName9.setText("Date:");
        panelHealth.add(lblChildName9, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 537, -1, -1));
        panelHealth.add(txtAppDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 534, 219, -1));

        lblStatus1.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblStatus1.setText("Status:");
        panelHealth.add(lblStatus1, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 577, -1, -1));

        txtStatus1.setText("Pending");
        panelHealth.add(txtStatus1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 574, 219, -1));

        lblChildName10.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblChildName10.setText("Comment:");
        panelHealth.add(lblChildName10, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 614, -1, -1));

        txtChildComment1.setColumns(20);
        txtChildComment1.setRows(5);
        jScrollPane5.setViewportView(txtChildComment1);

        panelHealth.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 620, 219, 104));

        txtChildAge1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChildAge1ActionPerformed(evt);
            }
        });
        panelHealth.add(txtChildAge1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 454, 219, -1));
        panelHealth.add(txtChildGender2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 494, 219, -1));

        panelAdminWork.add(panelHealth, "card7");

        panelEducation.setBackground(new java.awt.Color(204, 255, 255));
        panelEducation.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle7.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitle7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle7.setText("Children Education");
        panelEducation.add(lblTitle7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 1300, -1));

        tableChildrenApp.setBackground(new java.awt.Color(255, 255, 204));
        tableChildrenApp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Application Id", "Name", "Age", "Gender", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScrollPane6.setViewportView(tableChildrenApp);

        panelEducation.add(ScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 247, 1140, 97));

        lblChildName.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblChildName.setText("Name:");
        panelEducation.add(lblChildName, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 413, -1, -1));

        txtChildName.setEditable(false);
        panelEducation.add(txtChildName, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 410, 219, -1));

        btnApply.setBackground(new java.awt.Color(0, 51, 51));
        btnApply.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnApply.setForeground(new java.awt.Color(255, 255, 255));
        btnApply.setText("Apply");
        btnApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyActionPerformed(evt);
            }
        });
        panelEducation.add(btnApply, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 470, -1, -1));

        lblApplicationNo.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblApplicationNo.setText("Application Id:");
        panelEducation.add(lblApplicationNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 373, -1, -1));
        panelEducation.add(txtApplicationNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 370, 219, -1));

        txtChildAge.setEditable(false);
        panelEducation.add(txtChildAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 450, 219, -1));

        lblChildAge.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblChildAge.setText("Age:");
        panelEducation.add(lblChildAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 453, -1, -1));

        lblChildName2.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblChildName2.setText("DOB:");
        panelEducation.add(lblChildName2, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 493, -1, -1));

        txtChildDOB.setEditable(false);
        panelEducation.add(txtChildDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 490, 219, -1));

        lblChildName3.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblChildName3.setText("Gender:");
        panelEducation.add(lblChildName3, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 533, -1, -1));

        lblChildName4.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblChildName4.setText("School:");
        panelEducation.add(lblChildName4, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 659, -1, -1));

        txtChildSchool.setEditable(false);
        txtChildSchool.setText("School");
        panelEducation.add(txtChildSchool, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 656, 219, -1));

        lblChildName5.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblChildName5.setText("Comment:");
        panelEducation.add(lblChildName5, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 360, -1, -1));

        txtChildComment.setColumns(20);
        txtChildComment.setRows(5);
        jScrollPane1.setViewportView(txtChildComment);

        panelEducation.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 360, 219, -1));

        lblStatus.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblStatus.setText("Status:");
        panelEducation.add(lblStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 619, -1, -1));

        txtStatus.setEditable(false);
        txtStatus.setText("Pending");
        panelEducation.add(txtStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 616, 219, -1));

        tableChildrenEducation.setBackground(new java.awt.Color(255, 255, 204));
        tableChildrenEducation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Children Id", "Name", "Age", "DOB", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScrollPane8.setViewportView(tableChildrenEducation);

        panelEducation.add(ScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 77, 1140, 93));

        jLabel1.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jLabel1.setText("NGO Children List:");
        panelEducation.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 55, -1, -1));

        jLabel2.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jLabel2.setText("Student Applications:");
        panelEducation.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 225, -1, -1));

        lblChildName6.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblChildName6.setText("Class:");
        panelEducation.add(lblChildName6, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 579, -1, -1));
        panelEducation.add(txtChildClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 576, 219, -1));

        jLabel3.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jLabel3.setText("NGO:");
        panelEducation.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 687, -1, -1));

        txtNgo.setEditable(false);
        txtNgo.setText("Yes");
        txtNgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNgoActionPerformed(evt);
            }
        });
        panelEducation.add(txtNgo, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 684, 219, -1));

        btnAutofill.setBackground(new java.awt.Color(0, 51, 51));
        btnAutofill.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnAutofill.setForeground(new java.awt.Color(255, 255, 255));
        btnAutofill.setText("Autofill");
        btnAutofill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutofillActionPerformed(evt);
            }
        });
        panelEducation.add(btnAutofill, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 182, -1, -1));

        cmbChildGender.setEditable(false);
        panelEducation.add(cmbChildGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 530, 219, -1));

        panelAdminWork.add(panelEducation, "card8");

        panelBudget.setBackground(new java.awt.Color(255, 255, 255));
        panelBudget.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle8.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitle8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle8.setText("Budget");
        panelBudget.add(lblTitle8, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 26, 852, -1));

        lblTotal.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        lblTotal.setText("Total($):");
        panelBudget.add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 119, -1, -1));
        panelBudget.add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 116, 301, 43));

        lblEducation.setText("Education:");
        panelBudget.add(lblEducation, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 278, -1, -1));
        panelBudget.add(txtEducation, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 275, 166, -1));

        lblHealth.setText("Health:");
        panelBudget.add(lblHealth, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 318, -1, -1));
        panelBudget.add(txtHealth, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 315, 166, -1));

        lblFood.setText("Essential Items:");
        panelBudget.add(lblFood, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 358, -1, -1));
        panelBudget.add(txtFood, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 355, 166, -1));

        lblExpenditure.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        lblExpenditure.setText("Expenditure:");
        panelBudget.add(lblExpenditure, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 223, -1, -1));

        lblIncome.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblIncome.setText("Income:");
        panelBudget.add(lblIncome, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 426, -1, -1));
        panelBudget.add(txtDonation, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 480, 166, -1));

        lblDonation.setText("Donations:");
        panelBudget.add(lblDonation, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 483, -1, -1));
        panelBudget.add(txtOther, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 520, 166, -1));

        lblOthers.setText("Others:");
        panelBudget.add(lblOthers, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 523, -1, -1));

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        panelBudget.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 592, -1, -1));

        panelAdminWork.add(panelBudget, "card9");

        panelChildren.setBackground(new java.awt.Color(204, 255, 255));
        panelChildren.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle9.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitle9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle9.setText("NGO Children");
        panelChildren.add(lblTitle9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 1340, -1));

        tableChildrenCreate.setBackground(new java.awt.Color(255, 255, 204));
        tableChildrenCreate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Children Id", "Name", "Age", "DOB", "Gender", "Caretaker"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScrollPane7.setViewportView(tableChildrenCreate);

        panelChildren.add(ScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 134, 677, 119));

        lblChildrenName.setText("Name:");
        panelChildren.add(lblChildrenName, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 349, -1, -1));
        panelChildren.add(txtChildrenName, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 346, 230, -1));

        lblChildrenAge.setText("Age:");
        panelChildren.add(lblChildrenAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 389, -1, -1));
        panelChildren.add(txtChildrenAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 386, 230, -1));

        lblChildrenId.setText("Children Id:");
        panelChildren.add(lblChildrenId, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 309, -1, -1));
        panelChildren.add(txtChildrenId, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 306, 230, -1));

        lblChildrenDob.setText("DOB:");
        panelChildren.add(lblChildrenDob, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 429, -1, -1));
        panelChildren.add(txtChildrenDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 426, 230, -1));

        lblChildrenGender.setText("Gender:");
        panelChildren.add(lblChildrenGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 469, -1, -1));

        cmbChildrenGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));
        panelChildren.add(cmbChildrenGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 466, 230, -1));

        btnChildrenView.setBackground(new java.awt.Color(0, 51, 51));
        btnChildrenView.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnChildrenView.setForeground(new java.awt.Color(255, 255, 255));
        btnChildrenView.setText("View");
        btnChildrenView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChildrenViewActionPerformed(evt);
            }
        });
        panelChildren.add(btnChildrenView, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 271, -1, -1));

        btnChildrenDelete.setBackground(new java.awt.Color(0, 51, 51));
        btnChildrenDelete.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnChildrenDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnChildrenDelete.setText("Delete");
        btnChildrenDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChildrenDeleteActionPerformed(evt);
            }
        });
        panelChildren.add(btnChildrenDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 271, -1, -1));

        btnChildrenCreate.setBackground(new java.awt.Color(0, 51, 51));
        btnChildrenCreate.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnChildrenCreate.setForeground(new java.awt.Color(255, 255, 255));
        btnChildrenCreate.setText("Create");
        btnChildrenCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChildrenCreateActionPerformed(evt);
            }
        });
        panelChildren.add(btnChildrenCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 592, -1, -1));

        btnChildrenUpdate.setBackground(new java.awt.Color(0, 51, 51));
        btnChildrenUpdate.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnChildrenUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnChildrenUpdate.setText("Update");
        btnChildrenUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChildrenUpdateActionPerformed(evt);
            }
        });
        panelChildren.add(btnChildrenUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(221, 592, -1, -1));

        lblChildrenRole.setText("Role:");
        panelChildren.add(lblChildrenRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 509, -1, -1));

        txtChildrenRole.setEditable(false);
        txtChildrenRole.setText("Child");
        panelChildren.add(txtChildrenRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 506, 230, -1));

        lblChildrenCaretaker.setText("Caretaker:");
        panelChildren.add(lblChildrenCaretaker, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 543, -1, -1));

        panelChildren.add(txtChildrenCaretaker, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 540, 230, -1));

        panelAdminWork.add(panelChildren, "card10");

        panelFoodInv.setBackground(new java.awt.Color(204, 255, 255));
        panelFoodInv.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle10.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitle10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle10.setText("Essential Items");
        panelFoodInv.add(lblTitle10, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, 740, -1));

        tableNgoOrder.setBackground(new java.awt.Color(255, 255, 204));
        tableNgoOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Order Id", "Item", "Quantity", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tableNgoOrder);

        panelFoodInv.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 93, 614, 115));

        jLabel4.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jLabel4.setText("Order Id:");
        panelFoodInv.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 258, -1, -1));
        panelFoodInv.add(txtOrderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 255, 189, -1));

        jLabel5.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jLabel5.setText("Item:");
        panelFoodInv.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 298, -1, -1));

        jLabel6.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jLabel6.setText("Status:");
        panelFoodInv.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 378, -1, -1));

        txtStatus2.setEditable(false);
        txtStatus2.setText("Pending");
        panelFoodInv.add(txtStatus2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 375, 189, -1));

        btnPlaceOrder.setBackground(new java.awt.Color(0, 51, 51));
        btnPlaceOrder.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnPlaceOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnPlaceOrder.setText("Place Order");
        btnPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceOrderActionPerformed(evt);
            }
        });
        panelFoodInv.add(btnPlaceOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(176, 427, -1, -1));

        jLabel7.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jLabel7.setText("Quantity:");
        panelFoodInv.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 338, -1, -1));
        panelFoodInv.add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 335, 189, -1));

        panelFoodInv.add(txtItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 295, 189, -1));

        panelAdminWork.add(panelFoodInv, "card9");

        SplitPaneAdmin.setRightComponent(panelAdminWork);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SplitPaneAdmin)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SplitPaneAdmin)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void initializeBud(){
        if(system.getBudgetList().getMoney()!=null){
            System.out.println("Hello");
            Integer donation = Integer.valueOf(system.getBudgetList().getMoney().getDonation());
            Integer other = Integer.valueOf(system.getBudgetList().getMoney().getOthers());
            System.out.println("issue with total");
            Integer total= Integer.valueOf(system.getBudgetList().getMoney().getTotal());
            
//            Integer total = donation+other;
            Double edu = 0.2*total;
            Double hel = 0.2*total;
            Double ess = 0.3*total;
            txtDonation.setText(String.valueOf(donation));
            txtOther.setText(String.valueOf(other));
            txtTotal.setText(String.valueOf(total));
            txtEducation.setText(String.valueOf(edu));
            txtHealth.setText(String.valueOf(hel));
            txtFood.setText(String.valueOf(ess));
        }
        else{
            txtDonation.setText(String.valueOf(0));
            txtOther.setText(String.valueOf(0));
            txtTotal.setText(String.valueOf(0));
            txtEducation.setText(String.valueOf(0));
            txtHealth.setText(String.valueOf(0));
            txtFood.setText(String.valueOf(0));
        }
    }
   
    private void btnNgoManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNgoManagerActionPerformed
        // TODO add your handling code here:
//        CardLayout cardLayout = (CardLayout) panelAdminWork.getLayout();
//        panelAdminWork.add("NgoManager", panelNgoManager);
//        cardLayout.next(panelAdminWork);
          panelAdminWork.removeAll();
          panelAdminWork.add(panelNgoManager);
          panelAdminWork.repaint();
          panelAdminWork.revalidate();
    }//GEN-LAST:event_btnNgoManagerActionPerformed

    private void btnNgoManagerCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNgoManagerCreateActionPerformed
        // TODO add your handling code here:
        
        String id = txtNgoManagerId.getText();
        if(id.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter Id");
            return;
        }
        else if(system.getNgoManagerList().uiqueNgoManagerId(id)== false){
            JOptionPane.showMessageDialog(this, "Id already present");
            return;
        }
        
        
        
        String name = txtNgoManagerName.getText();
        if(name.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter Name");
            return;
        }
        
        
        
        String username = txtNgoManagerUsername.getText();
        if(username.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the username");
            return;
        }
        else if(system.getNgoManagerList().uniqueNgoManagerUsername(username)==false){
            JOptionPane.showMessageDialog(this, "Username already exist");
            return;
        }
        
        
        
        if(data.numcheck(txtNgoManagerAge.getText())==false){
            JOptionPane.showMessageDialog(this, "Enter valid age");
            return;
        }
        Integer age = Integer.valueOf(txtNgoManagerAge.getText());
        
        
        
        String dob = txtNgoManagerDOB.getText();
        if(!data.dateCheck(dob)){
            JOptionPane.showMessageDialog(this, "Please enter correct date in format mm/dd/yyyy");
            return;
        }
        
        
        
        String gender = String.valueOf(cmbNgoManagerGender.getSelectedItem());
        
        
        
        String role = txtNgoManagerRole.getText();
        
        
        
        String emailid= txtNgoManagerEmailId.getText();
        if(!data.emailCheck(emailid)){
            JOptionPane.showMessageDialog(this, "Enter valid email id");
            return;
        }
        
        
        
        if(!data.phnocheck(txtNgoManagerPhno.getText())){
            JOptionPane.showMessageDialog(this, "Enter valid phone no");
            return;
        }
        Long phno = Long.valueOf(txtNgoManagerPhno.getText());
        
        
        
        String pass = txtNgoManagerPassword.getText();
        if(pass.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter Password");
            return;
        }
        
        
        
        NgoManager newManager = system.getNgoManagerList().addNgoManager();
        
        newManager.setNgoManagerId(id);
        newManager.setName(name);
        newManager.setUsername(username);
        newManager.setAge(age);
        newManager.setDob(dob);
        newManager.setGender(gender);
        newManager.setRole(role);
        newManager.setEmailId(emailid);
        newManager.setPhno(phno);
        newManager.setPassword(pass);
        
        JOptionPane.showMessageDialog(this, "NGO Manager created successfully");
        
        txtNgoManagerId.setText("");
        txtNgoManagerName.setText("");
        txtNgoManagerUsername.setText("");
        txtNgoManagerAge.setText("");
        txtNgoManagerDOB.setText("");
        txtNgoManagerEmailId.setText("");
        txtNgoManagerPhno.setText("");
        txtNgoManagerPassword.setText("");
        
        
//        dB4OUtil.storeSystem(system);
        populateNgoManagerTable();
        
    }//GEN-LAST:event_btnNgoManagerCreateActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        dB4OUtil.storeSystem(system);
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        cardPanel.remove(this);
        cardLayout.previous(cardPanel);
        
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
//        CardLayout cardLayout = (CardLayout) panelAdminWork.getLayout();
//        panelAdminWork.add("NgoHome", panelHome);
//        cardLayout.next(panelAdminWork);
          panelAdminWork.removeAll();
          panelAdminWork.add(panelHome);
          panelAdminWork.repaint();
          panelAdminWork.revalidate();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnNgoManagerViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNgoManagerViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableNgoManager.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableNgoManager.getModel();
            NgoManager selMan = (NgoManager) model.getValueAt(selectedRowIndex,0);
            
            txtNgoManagerId.setText(selMan.getNgoManagerId());
            txtNgoManagerName.setText(selMan.getName());
            txtNgoManagerUsername.setText(selMan.getUsername());
            txtNgoManagerAge.setText(String.valueOf(selMan.getAge()));
            txtNgoManagerDOB.setText(selMan.getDob());
            cmbNgoManagerGender.setSelectedItem(selMan.getGender());
            txtNgoManagerRole.setText(selMan.getRole());
            txtNgoManagerEmailId.setText(selMan.getEmailId());
            txtNgoManagerPhno.setText(String.valueOf(selMan.getPhno()));
            txtNgoManagerPassword.setText(selMan.getPassword());
            
        }
    }//GEN-LAST:event_btnNgoManagerViewActionPerformed

    private void btnBudgetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBudgetActionPerformed
        // TODO add your handling code here:
        panelAdminWork.removeAll();
        panelAdminWork.add(panelBudget);
        panelAdminWork.repaint();
        panelAdminWork.revalidate();
    }//GEN-LAST:event_btnBudgetActionPerformed

    private void btnNgoManagerDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNgoManagerDeleteActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableNgoManager.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableNgoManager.getModel();
            NgoManager selectedMan = (NgoManager) model.getValueAt(selectedRowIndex,0);

            system.getNgoManagerList().deleteNgoManager(selectedMan);

            JOptionPane.showMessageDialog(this, "NGO Manager deleted successfully.");
            
//            dB4OUtil.storeSystem(system);
            populateNgoManagerTable();
        }
    }//GEN-LAST:event_btnNgoManagerDeleteActionPerformed

    private void btnCaretakerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaretakerActionPerformed
        // TODO add your handling code here:
//        CardLayout cardLayout = (CardLayout) panelAdminWork.getLayout();
//        panelAdminWork.add("CareTaker", panelCareTaker);
//        cardLayout.next(panelAdminWork);
        panelAdminWork.removeAll();
        panelAdminWork.add(panelCareTaker);
        panelAdminWork.repaint();
        panelAdminWork.revalidate();
    }//GEN-LAST:event_btnCaretakerActionPerformed

    private void btnFundManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFundManagerActionPerformed
        // TODO add your handling code here:
        panelAdminWork.removeAll();
        panelAdminWork.add(panelFundManager);
        panelAdminWork.repaint();
        panelAdminWork.revalidate();
    }//GEN-LAST:event_btnFundManagerActionPerformed

    private void btnPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPersonActionPerformed
        // TODO add your handling code here:
        panelAdminWork.removeAll();
        panelAdminWork.add(panelPerson);
        panelAdminWork.repaint();
        panelAdminWork.revalidate();
    }//GEN-LAST:event_btnPersonActionPerformed

    private void btnAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAppointmentActionPerformed
        // TODO add your handling code here:
        String appNo = txtApplicationNo1.getText();
        if(appNo.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter Application Number");
            return;
        }
        else if(system.getHosAppList().uiqueAppId(appNo)== false){
            JOptionPane.showMessageDialog(this, "Application Number already exist");
            return;
        }
        
        
        
        String name = txtChildName1.getText();
        Integer age = Integer.valueOf(txtChildAge1.getText());
        
        String gender = txtChildGender2.getText();
        
        
        String date  = txtAppDate.getText();
        if(!data.dateCheck(date)){
            JOptionPane.showMessageDialog(this, "Please enter correct date in format mm/dd/yyyy");
            return;
        }
        
        
        
        String status = txtStatus1.getText();
        
        String comm = txtChildComment1.getText();
        if(comm.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter Comment");
            return;
        }
        
        Appointment newApp = system.getHosAppList().addAppointment();
        
        newApp.setAppNo(appNo);
        newApp.setPatient(name);
        newApp.setAge(age);
 
        newApp.setGender(gender);
        newApp.setDate(name);
        newApp.setStatus(status);
       
        newApp.setComment(comm);
        
        JOptionPane.showMessageDialog(this, "Application submitted successfully");
        
        txtApplicationNo1.setText("");
        txtChildName1.setText("");
        txtChildAge1.setText("");
        
        txtChildGender2.setText("");
        txtAppDate.setText("");
        txtChildComment1.setText("");
        
        populateAppoinmentTable();
        
    }//GEN-LAST:event_btnAppointmentActionPerformed

    private void btnHealthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHealthActionPerformed
        // TODO add your handling code here:
        panelAdminWork.removeAll();
        panelAdminWork.add(panelHealth);
        panelAdminWork.repaint();
        panelAdminWork.revalidate();
    }//GEN-LAST:event_btnHealthActionPerformed

    private void btnEducationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEducationActionPerformed
        // TODO add your handling code here:
        panelAdminWork.removeAll();
        panelAdminWork.add(panelEducation);
        panelAdminWork.repaint();
        panelAdminWork.revalidate();
    }//GEN-LAST:event_btnEducationActionPerformed

    private void btnChildrenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChildrenActionPerformed
        // TODO add your handling code here:
        panelAdminWork.removeAll();
        panelAdminWork.add(panelChildren);
        panelAdminWork.repaint();
        panelAdminWork.revalidate();
    }//GEN-LAST:event_btnChildrenActionPerformed

    private void btnNgoMangerUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNgoMangerUpdateActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableNgoManager.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableNgoManager.getModel();
            NgoManager selMan = (NgoManager) model.getValueAt(selectedRowIndex,0);
            
//            String id = txtNgoManagerId.getText();
//            if(id.isEmpty()){
//                JOptionPane.showMessageDialog(this, "Please enter Id");
//                return;
//            }
//            
//
//            selMan.setNgoManagerId(txtNgoManagerId.getText());
            


            selMan.setName(txtNgoManagerName.getText());
            if(txtNgoManagerName.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Enter valid name");
                return;
            }
            selMan.setName(txtNgoManagerName.getText());
            
            
            
            
//            String username = txtNgoManagerUsername.getText();
//            if(username.isEmpty()){
//               JOptionPane.showMessageDialog(this, "Please enter Username");
//               return;
//            }
//            selMan.setUsername(txtNgoManagerUsername.getText());
            
            
            
            
            if(!data.numcheck(txtNgoManagerAge.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid age");
                return;
            }
            selMan.setAge(Integer.valueOf(txtNgoManagerAge.getText()));
            
            
            
            
            selMan.setDob(txtNgoManagerDOB.getText());
            if(!data.dateCheck(txtNgoManagerDOB.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid date");
                return;
            }
            
            
            
            selMan.setGender(String.valueOf(cmbNgoManagerGender.getSelectedItem()));
            
            
            
            selMan.setRole(txtNgoManagerRole.getText());
            
            
            
            selMan.setEmailId(txtNgoManagerEmailId.getText());
            if(!data.emailCheck(txtNgoManagerEmailId.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid emailid");
                return;
            }
            
            
            
            if(!data.phnocheck(txtNgoManagerPhno.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid phone no");
                return;
            }
            selMan.setPhno(Long.valueOf(txtNgoManagerPhno.getText()));
            
            
            
            selMan.setPassword(txtNgoManagerPassword.getText());
            if(txtNgoManagerPassword.getText().isEmpty()){
		JOptionPane.showMessageDialog(this, "Enter valid password");
                return;
            }
            
            
            
            JOptionPane.showMessageDialog(this, "Ngo Manager updated successfully");
            
            txtNgoManagerId.setText("");
            txtNgoManagerName.setText("");
            txtNgoManagerUsername.setText("");
            txtNgoManagerAge.setText("");
            txtNgoManagerDOB.setText("");
            txtNgoManagerEmailId.setText("");
            txtNgoManagerPhno.setText("");
            txtNgoManagerPassword.setText("");
            
            
            

            populateNgoManagerTable();
            
          
        }
        
    }//GEN-LAST:event_btnNgoMangerUpdateActionPerformed

    private void btnCaretakerViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaretakerViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableCaretaker.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableCaretaker.getModel();
            Caretaker selMan = (Caretaker) model.getValueAt(selectedRowIndex,0);
            
            txtCaretakerId.setText(selMan.getCaretakerId());
            txtCaretakerName.setText(selMan.getName());
            txtCaretakerUsername.setText(selMan.getUsername());
            txtCaretakerAge.setText(String.valueOf(selMan.getAge()));
            txtCaretakerDOB.setText(selMan.getDob());
            txtCaretakerRole.setText(selMan.getRole());
            cmbCaretakerGender.setSelectedItem(selMan.getGender());
            txtCaretakerEmailId.setText(selMan.getEmailId());
            txtCaretakerPhno.setText(String.valueOf(selMan.getPhno()));
            txtCaretakerPassword.setText(selMan.getPassword());
            
        }
    }//GEN-LAST:event_btnCaretakerViewActionPerformed

    private void btnCaretakerDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaretakerDeleteActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableCaretaker.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableCaretaker.getModel();
            Caretaker selectedMan = (Caretaker) model.getValueAt(selectedRowIndex,0);

            system.getCareTakerList().deleteCaretaker(selectedMan);

            JOptionPane.showMessageDialog(this, "Caretaker deleted successfully.");
            
//            dB4OUtil.storeSystem(system);
            populateCaretakerTable();
        }
    }//GEN-LAST:event_btnCaretakerDeleteActionPerformed

    private void btnCaretakerCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaretakerCreateActionPerformed
        // TODO add your handling code here:
        
        String id = txtCaretakerId.getText();
        if(id.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Id");
            return;
        }
        else if(system.getCareTakerList().uiqueCaretakerId(id)== false){
            JOptionPane.showMessageDialog(this, "Id already exist");
            return;
        }
        String name = txtCaretakerName.getText();
        if(name.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the name");
            return;
        }
        String username = txtCaretakerUsername.getText();
        if(username.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the username");
            return;
        }
        else if(system.getCareTakerList().uniqueCaretakerUsername(username)==false){
            JOptionPane.showMessageDialog(this, "Username already exist");
            return;
        }
        
        if(data.numcheck(txtCaretakerAge.getText())==false){
            JOptionPane.showMessageDialog(this, "Enter valid age");
            return;
        }
        Integer age = Integer.valueOf(txtCaretakerAge.getText());
        String dob = txtCaretakerDOB.getText();
       
        if(!data.dateCheck(dob)){
            JOptionPane.showMessageDialog(this, "Please enter correct date in format mm/dd/yyyy");
            return;
        }
        String gender = String.valueOf(cmbCaretakerGender.getSelectedItem());
        String role = txtCaretakerRole.getText();
        String emailid= txtCaretakerEmailId.getText();
        
        if(!data.emailCheck(emailid)){
            JOptionPane.showMessageDialog(this, "Enter valid email id");
            return;
        }
        
        if(!data.phnocheck(txtCaretakerPhno.getText())){
            JOptionPane.showMessageDialog(this, "Enter valid phone no");
            return;
        } 
        
        Long phno = Long.valueOf(txtCaretakerPhno.getText());
        
        String pass = txtCaretakerPassword.getText();
        if(pass.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter valid password");
            return;
        }
        
        Caretaker newManager = system.getCareTakerList().addCaretaker();
        
        newManager.setCaretakerId(id);
        newManager.setName(name);
        newManager.setUsername(username);
        newManager.setAge(age);
        newManager.setDob(dob);
        newManager.setGender(gender);
        newManager.setRole(role);
        newManager.setEmailId(emailid);
        newManager.setPhno(phno);
        newManager.setPassword(pass);
        
        JOptionPane.showMessageDialog(this, "Caretaker created successfully");
        
        txtCaretakerId.setText("");
        txtCaretakerName.setText("");
        txtCaretakerUsername.setText("");
        txtCaretakerAge.setText("");
        txtCaretakerDOB.setText("");
        txtCaretakerEmailId.setText("");
        txtCaretakerPhno.setText("");
        txtCaretakerPassword.setText("");
        
        
//        dB4OUtil.storeSystem(system);
        populateCaretakerTable();
        populateCombo();
    }//GEN-LAST:event_btnCaretakerCreateActionPerformed

    private void btnCaretakerUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaretakerUpdateActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableCaretaker.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableCaretaker.getModel();
            Caretaker selMan = (Caretaker) model.getValueAt(selectedRowIndex,0);
            
//            selMan.setCaretakerId(txtCaretakerId.getText());
//    
            selMan.setName(txtCaretakerName.getText());
            if(txtCaretakerName.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Enter valid name");
                return;
            }
//            selMan.setUsername(txtCaretakerUsername.getText());
            
            if(!data.numcheck(txtCaretakerAge.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid age");
                return;
            }
            selMan.setAge(Integer.valueOf(txtCaretakerAge.getText()));
            
            selMan.setDob(txtCaretakerDOB.getText());
            if(!data.dateCheck(txtCaretakerDOB.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid date");
                return;
            }
            selMan.setGender(String.valueOf(cmbCaretakerGender.getSelectedItem()));
            selMan.setRole(txtCaretakerRole.getText());
            selMan.setEmailId(txtCaretakerEmailId.getText());
            if(!data.emailCheck(txtCaretakerEmailId.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid emailid");
                return;
            }
            
            if(!data.phnocheck(txtCaretakerPhno.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid phone no");
                return;
            }
            selMan.setPhno(Long.valueOf(txtCaretakerPhno.getText()));
            selMan.setPassword(txtCaretakerPassword.getText());
            if(txtCaretakerPassword.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Enter valid password");
                return;
            }
            
            JOptionPane.showMessageDialog(this, "Caretaker updated successfully");
            
//            dB4OUtil.storeSystem(system);
            populateCaretakerTable();
        }
            
    }//GEN-LAST:event_btnCaretakerUpdateActionPerformed

    private void btnFundManagerViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFundManagerViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableFundManager.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableFundManager.getModel();
            FundManager selMan = (FundManager) model.getValueAt(selectedRowIndex,0);
            
            txtFundManagerId.setText(selMan.getFundManagerId());
            txtFundManagerName.setText(selMan.getName());
            txtFundManagerUsername.setText(selMan.getUsername());
            txtFundManagerAge.setText(String.valueOf(selMan.getAge()));
            txtFundManagerDOB.setText(selMan.getDob());
            cmbFundManagerGender.setSelectedItem(selMan.getGender());
            txtFundManagerRole.setText(selMan.getRole());
            txtFundManagerEmailId.setText(selMan.getEmailId());
            txtFundManagerPhno.setText(String.valueOf(selMan.getPhno()));
            txtFundManagerPassword.setText(selMan.getPassword());
            
        }
    }//GEN-LAST:event_btnFundManagerViewActionPerformed

    private void btnFundManagerDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFundManagerDeleteActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableFundManager.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableFundManager.getModel();
            FundManager selectedMan = (FundManager) model.getValueAt(selectedRowIndex,0);

            system.getFundManagerList().deleteFundManager(selectedMan);

            JOptionPane.showMessageDialog(this, "Fund Manager deleted successfully.");
            
//            dB4OUtil.storeSystem(system);
            populateFundManagerTable();
        }
    }//GEN-LAST:event_btnFundManagerDeleteActionPerformed

    private void btnFundManagerCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFundManagerCreateActionPerformed
        // TODO add your handling code here:
        String id = txtFundManagerId.getText();
        if(id.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Id");
            return;
        }
        else if(system.getFundManagerList().uniqueFundManId(id)== false){
            JOptionPane.showMessageDialog(this, "Id already exist");
            return;
        }
        
        
        String name = txtFundManagerName.getText();
        if(name.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the name");
            return;
        }
        
        
        String username = txtFundManagerUsername.getText();
        if(username.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the username");
            return;
        }
        else if(system.getFundManagerList().uniqueFundManUsername(username)==false){
            JOptionPane.showMessageDialog(this, "Username already exist");
            return;
        }
        
        
        if(data.numcheck(txtFundManagerAge.getText())==false){
            JOptionPane.showMessageDialog(this, "Enter valid age");
            return;
        }
        Integer age = Integer.valueOf(txtFundManagerAge.getText());
        
        
        
        String gender = String.valueOf(cmbFundManagerGender.getSelectedItem());
        
        
        
        String role = txtFundManagerRole.getText();
        
        
        
        String dob = txtFundManagerDOB.getText();
        if(!data.dateCheck(dob)){
            JOptionPane.showMessageDialog(this, "Please enter correct date in format mm/dd/yyyy");
            return;
        }
        
        
        String emailid= txtFundManagerEmailId.getText();
        if(!data.emailCheck(emailid)){
            JOptionPane.showMessageDialog(this, "Enter valid email id");
            return;
        }
        
        if(!data.phnocheck(txtFundManagerPhno.getText())){
            JOptionPane.showMessageDialog(this, "Enter valid phone no");
            return;
        }
        Long phno = Long.valueOf(txtFundManagerPhno.getText());
        
        
        
        String pass = txtFundManagerPassword.getText();
        if(pass.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter valid password");
            return;
        }
        
        
        
        FundManager newManager = system.getFundManagerList().addFundManager();
        
        newManager.setFundManagerId(id);
        newManager.setName(name);
        newManager.setUsername(username);
        newManager.setAge(age);
        newManager.setGender(gender);
        newManager.setRole(role);
        newManager.setDob(dob);
        newManager.setEmailId(emailid);
        newManager.setPhno(phno);
        newManager.setPassword(pass);
        
        JOptionPane.showMessageDialog(this, "Fund Manager created successfully");
        
        txtFundManagerId.setText("");
        txtFundManagerName.setText("");
        txtFundManagerUsername.setText("");
        txtFundManagerAge.setText("");
        txtFundManagerDOB.setText("");
        txtFundManagerEmailId.setText("");
        txtFundManagerPhno.setText("");
        txtFundManagerPassword.setText("");
        
        
//        dB4OUtil.storeSystem(system);
        populateFundManagerTable();
    }//GEN-LAST:event_btnFundManagerCreateActionPerformed

    private void btnFundMangerUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFundMangerUpdateActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableFundManager.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableFundManager.getModel();
            FundManager selMan = (FundManager) model.getValueAt(selectedRowIndex,0);
            
//            selMan.setFundManagerId(txtFundManagerId.getText());
            
            
            
            selMan.setName(txtFundManagerName.getText());
            if(txtFundManagerPassword.getText().isEmpty()){
		JOptionPane.showMessageDialog(this, "Enter valid name");
                return;
            }
            selMan.setName(txtFundManagerName.getText());
            
            
            
//            selMan.setUsername(txtFundManagerUsername.getText());
            
            
        
            if(!data.numcheck(txtFundManagerAge.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid age");
                return;
            } 
           
            selMan.setAge(Integer.valueOf(txtFundManagerAge.getText()));
            
            
            
            selMan.setDob(txtFundManagerDOB.getText());
            if(!data.dateCheck(txtFundManagerDOB.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid date");
                return;
            }
            
            
            
            selMan.setGender(String.valueOf(cmbFundManagerGender.getSelectedItem()));
            
            
            
            selMan.setRole(txtFundManagerRole.getText());
            
            
            
            selMan.setEmailId(txtFundManagerEmailId.getText());
            if(!data.emailCheck(txtFundManagerEmailId.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid emailid");
                return;
            }
            
            
            
            selMan.setPhno(Long.valueOf(txtFundManagerPhno.getText()));
            
            if(!data.phnocheck(txtFundManagerPhno.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid phone no");
                return;
            }
            
            
            
            selMan.setPassword(txtFundManagerPassword.getText());
            if(txtFundManagerPassword.getText().isEmpty()){
		JOptionPane.showMessageDialog(this, "Enter valid password");
                return;
            }
            
            
            
            JOptionPane.showMessageDialog(this, "Fund Manager updated successfully");
            
//            dB4OUtil.storeSystem(system);
            populateFundManagerTable();
        }
    }//GEN-LAST:event_btnFundMangerUpdateActionPerformed

    private void txtCaretakerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCaretakerIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCaretakerIdActionPerformed

    private void cmbFundManagerGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFundManagerGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbFundManagerGenderActionPerformed

    private void btnChildrenViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChildrenViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableChildrenCreate.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableChildrenCreate.getModel();
            Children selMan = (Children) model.getValueAt(selectedRowIndex,0);
            
            txtChildrenId.setText(selMan.getChildrenId());
            txtChildrenName.setText(selMan.getName());
            txtChildrenAge.setText(String.valueOf(selMan.getAge()));
            txtChildrenDOB.setText(selMan.getDob());
            cmbChildrenGender.setSelectedItem(selMan.getGender());
            txtChildrenRole.setText(selMan.getRole());
            txtChildrenCaretaker.setSelectedItem(selMan.getCaretaker());
        }
    }//GEN-LAST:event_btnChildrenViewActionPerformed

    private void btnChildrenDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChildrenDeleteActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableChildrenCreate.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableChildrenCreate.getModel();
            Children selectedMan = (Children) model.getValueAt(selectedRowIndex,0);

            system.getChildrenList().deleteChildren(selectedMan);

            JOptionPane.showMessageDialog(this, "Child deleted successfully.");
            
//            dB4OUtil.storeSystem(system);
            populateChildrenCreateTable();
        }
    }//GEN-LAST:event_btnChildrenDeleteActionPerformed

    private void btnChildrenCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChildrenCreateActionPerformed
        // TODO add your handling code here:
        String id = txtChildrenId.getText();
        if(id.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Id");
            return;
        }
        else if(system.getChildrenList().uiqueChildrenId(id)== false){
            JOptionPane.showMessageDialog(this, "Id already exist");
            return;
        }
        
        
        String name = txtChildrenName.getText();
        if(name.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the name");
            return;
        }
        
        if(data.numcheck(txtChildrenAge.getText())==false){
            JOptionPane.showMessageDialog(this, "Enter valid age");
            return;
        }
        Integer age = Integer.valueOf(txtChildrenAge.getText());
        
        
        
        String dob = txtChildrenDOB.getText();
        if(!data.dateCheck(dob)){
            JOptionPane.showMessageDialog(this, "Please enter correct date in format mm/dd/yyyy");
            return;
        }
        
        
        String gender = String.valueOf(cmbChildrenGender.getSelectedItem());
        
        
        
        String role = txtChildrenRole.getText();
        
        
        
        String caretaker = String.valueOf(txtChildrenCaretaker.getSelectedItem());
        
        
        Children newManager = system.getChildrenList().addChildren();
        
        newManager.setChildrenId(id);
        newManager.setName(name);
        newManager.setAge(age);
        newManager.setDob(dob);
        newManager.setGender(gender);
        newManager.setRole(role);
        newManager.setCaretaker(caretaker);
        
        JOptionPane.showMessageDialog(this, "Child created successfully");
        
        txtChildrenId.setText("");
        txtChildrenName.setText("");
        txtChildrenAge.setText("");
        txtChildrenDOB.setText("");
       
//        dB4OUtil.storeSystem(system);
        populateChildrenCreateTable();
        populateChildrenEducationTable();
        populateChildrenHealthTable();
    }//GEN-LAST:event_btnChildrenCreateActionPerformed

    private void btnChildrenUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChildrenUpdateActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableChildrenCreate.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableChildrenCreate.getModel();
            Children selMan = (Children) model.getValueAt(selectedRowIndex,0);
            
//            selMan.setChildrenId(txtChildrenId.getText());
            
            
            
            selMan.setName(txtChildrenName.getText());
            if(txtChildrenName.getText().isEmpty()){
		JOptionPane.showMessageDialog(this, "Enter valid name");
                return;
            }
            
            if(!data.numcheck(txtChildrenAge.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid age");
                return;
            }
            selMan.setAge(Integer.valueOf(txtChildrenAge.getText()));
            
            
            selMan.setDob(txtChildrenDOB.getText());
            if(!data.dateCheck(txtChildrenDOB.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid date");
                return;
            }
            
            selMan.setGender(String.valueOf(cmbChildrenGender.getSelectedItem()));
            
            
            selMan.setRole(txtChildrenRole.getText());
            
            
            selMan.setCaretaker(String.valueOf(txtChildrenCaretaker.getSelectedItem()));
            
            
            
            JOptionPane.showMessageDialog(this, "Child updated successfully");
            
//            dB4OUtil.storeSystem(system);
            populateChildrenCreateTable();
            populateChildrenEducationTable();
            populateChildrenHealthTable();
        }
    }//GEN-LAST:event_btnChildrenUpdateActionPerformed

    private void btnApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyActionPerformed
        // TODO add your handling code here:
        String appNo = txtApplicationNo.getText();
        if(appNo.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Application Number");
            return;
        }
        else if(system.getApplicationList().uiqueApplicationId(appNo)== false){
            JOptionPane.showMessageDialog(this, "Application Number already exist");
            return;
        }

//        if(appNo.isEmpty()){
//            JOptionPane.showMessageDialog(this, "Enter the appNo");
//            return;
//        }
//        else if(system.getCareTakerList().uiqueCaretakerId(appNo)== false){
//            JOptionPane.showMessageDialog(this, "appNo already exist");
//            return;
//        }
//        system.getap
        
        String name = txtChildName.getText();
   
        Integer age = Integer.valueOf(txtChildAge.getText());
        
        
        String dob = txtChildDOB.getText();
        if(!data.dateCheck(dob)){
            JOptionPane.showMessageDialog(this, "Please enter correct date in format mm/dd/yyy");
            return;
        }
        
        
        String gender = cmbChildGender.getText();
        
        
        
        String cls = txtChildClass.getText();
        if(cls.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Class");
            return;
        }
        
        
        
        String status = txtStatus.getText();
        String school = txtChildSchool.getText();
        String ngo = txtNgo.getText();
        
        
        String comm = txtChildComment.getText();
        if(comm.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Comments");
            return;
        }
        
        
        Application newApp = system.getApplicationList().addApplication();
        
        newApp.setAppNo(appNo);
        newApp.setName(name);
        newApp.setAge(age);
        newApp.setDob(dob);
        newApp.setGender(gender);
        newApp.setCls(cls);
        newApp.setStatus(status);
        newApp.setSchool(school);
        newApp.setNgo(ngo);
        newApp.setComment(comm);
        
        JOptionPane.showMessageDialog(this, "Application submitted successfully");
        
        txtApplicationNo.setText("");
        txtChildName.setText("");
        txtChildAge.setText("");
        txtChildDOB.setText("");
        cmbChildGender.setText("");
        txtChildClass.setText("");
        txtChildComment.setText("");
        
        populateStudentApp();
        
    }//GEN-LAST:event_btnApplyActionPerformed

    private void btnAutofillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutofillActionPerformed
        // TODO add your handling code here
        Integer selectedRowIndex = tableChildrenEducation.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        
        else{
            DefaultTableModel model = (DefaultTableModel) tableChildrenEducation.getModel();
            Children selApp = (Children) model.getValueAt(selectedRowIndex,0);

//            txtApplicationNo.setText(selApp.getAppNo());
            txtChildName.setText(selApp.getName());
            txtChildAge.setText(String.valueOf(selApp.getAge()));
            txtChildDOB.setText(selApp.getDob());
            cmbChildGender.setText(selApp.getGender());
//            txtChildClass.setText(selApp.getCls());
//            txtStatus.setText(selApp.getStatus());
//            txtChildComment.setText(selApp.getComment());
        }
    }//GEN-LAST:event_btnAutofillActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:\
        Integer selectedRowIndex = tablePerson.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tablePerson.getModel();
            PublicUser selectedMan = (PublicUser) model.getValueAt(selectedRowIndex,0);

            system.getPublicUserList().deleteUser(selectedMan);

            JOptionPane.showMessageDialog(this, "User deleted successfully.");
            
//            dB4OUtil.storeSystem(system);
            populatePublicUser();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if(system.getBudgetList()==null){
            Budget b = system.getBudgetList().addBudget();
            
            
            b.setDonation(Integer.valueOf(txtDonation.getText()));
            b.setOthers(Integer.valueOf(txtOther.getText()));
            
            Integer donation = b.getDonation();
            Integer other = b.getOthers();
            Integer total = donation+other;
            b.setTotal(total);
            txtTotal.setText(String.valueOf(total));

            
            Double edu = 0.3*total;
            Double hel = 0.3*total;
            Double ess = 0.4*total;
            
            
            txtEducation.setText(String.valueOf(edu));
            txtHealth.setText(String.valueOf(hel));
            txtFood.setText(String.valueOf(ess));
            
            
            
        }
        else{
            system.getBudgetList().getBudgetList().clear();
            Budget b = system.getBudgetList().addBudget();
            b.setDonation(Integer.valueOf(txtDonation.getText()));
            b.setOthers(Integer.valueOf(txtOther.getText()));
            
            Integer donation = b.getDonation();
            Integer other = b.getOthers();
            Integer total = donation+other;
            b.setTotal(total);
            Double edu = 0.3*total;
            Double hel = 0.3*total;
            Double ess = 0.4*total;
            txtTotal.setText(String.valueOf(total));
            txtEducation.setText(String.valueOf(edu));
            txtHealth.setText(String.valueOf(hel));
            txtFood.setText(String.valueOf(ess));
        }
        JOptionPane.showMessageDialog(this, "Budget updated succefully");
            
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnAutofill1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutofill1ActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableChildrenHealth.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        
        else{
            DefaultTableModel model = (DefaultTableModel) tableChildrenHealth.getModel();
            Children selApp = (Children) model.getValueAt(selectedRowIndex,0);

//            txtApplicationNo.setText(selApp.getAppNo());
            txtChildName1.setText(selApp.getName());
            txtChildAge1.setText(String.valueOf(selApp.getAge()));
            
            txtChildGender2.setText(selApp.getGender());
        }
    }//GEN-LAST:event_btnAutofill1ActionPerformed

    private void btnPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceOrderActionPerformed
        // TODO add your handling code here:
        String id = txtOrderId.getText();
        if(id.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter Order Id");
            return;
        }
        else if(system.getNgoOrderList().uiqueNgoOrderId(id)== false){
            JOptionPane.showMessageDialog(this, "Order already exist");
            return;
        }
        
        
        String items = String.valueOf(txtItem.getSelectedItem());
        
        if(data.numcheck(txtQty.getText())==false){
            JOptionPane.showMessageDialog(this, "Enter valid Quantity");
            return;
        }
        Integer qty = Integer.valueOf(txtQty.getText());
        
        
        
        String status = txtStatus.getText();
        
        
        NgoOrder newManager = system.getNgoOrderList().addNgoOrder();
        
        newManager.setOrderid(id);
        newManager.setItems(items);
        newManager.setQty(qty);
        newManager.setStatus(status);
        
        JOptionPane.showMessageDialog(this, "Order created successfully");
        
        txtOrderId.setText("");
        
        txtQty.setText("");
        
        populateNgoOrderTable();
    }//GEN-LAST:event_btnPlaceOrderActionPerformed

    private void btnEssentialItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEssentialItemsActionPerformed
        // TODO add your handling code here:
        panelAdminWork.removeAll();
        panelAdminWork.add(panelFoodInv);
        panelAdminWork.repaint();
        panelAdminWork.revalidate();
    }//GEN-LAST:event_btnEssentialItemsActionPerformed

    private void txtChildAge1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChildAge1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChildAge1ActionPerformed

    private void txtApplicationNo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApplicationNo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApplicationNo1ActionPerformed

    private void txtNgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNgoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNgoActionPerformed


    private void populateNgoManagerTable(){
    
        DefaultTableModel model = (DefaultTableModel) tableNgoManager.getModel();
        model.setRowCount(0);
        
//        
            for(NgoManager man: system.getNgoManagerList().getNgoManagerList()){

                Object[] row = new Object[5];
                row[0] = man; 
                row[1] = man.getName();
                row[2] = man.getUsername();
                row[3] = man.getAge();
                row[4] = man.getEmailId();
                model.addRow(row);
            }
//        }
//        db.close();
        
    }
    
    private void populateCaretakerTable(){
        DefaultTableModel model = (DefaultTableModel) tableCaretaker.getModel();
        model.setRowCount(0);
        
//        
            for(Caretaker c: system.getCareTakerList().getCaretakerList()){

                Object[] row = new Object[5];
                row[0] = c; 
                row[1] = c.getName();
                row[2] = c.getUsername();
                row[3] = c.getAge();
                row[4] = c.getEmailId();
                model.addRow(row);
            }
    }
    
    private void populateFundManagerTable(){
        DefaultTableModel model = (DefaultTableModel) tableFundManager.getModel();
        model.setRowCount(0);
        
//        
            for(FundManager f: system.getFundManagerList().getFundManagerList()){

                Object[] row = new Object[5];
                row[0] = f; 
                row[1] = f.getName();
                row[2] = f.getUsername();
                row[3] = f.getAge();
                row[4] = f.getEmailId();
                model.addRow(row);
            }
    }
      
    private void populateChildrenCreateTable(){
        DefaultTableModel model = (DefaultTableModel) tableChildrenCreate.getModel();
        model.setRowCount(0);
        
//        
            for(Children c: system.getChildrenList().getChildrenList()){

                Object[] row = new Object[6];
                row[0] = c; 
                row[1] = c.getName();
                row[2] = c.getAge();
                row[3] = c.getDob();
                row[4] = c.getGender();
                row[5] = c.getCaretaker();
                model.addRow(row);
            }
      }
      
      private void populateChildrenHealthTable(){
        DefaultTableModel model = (DefaultTableModel) tableChildrenHealth.getModel();
        model.setRowCount(0);
        
//        
            for(Children c: system.getChildrenList().getChildrenList()){

                Object[] row = new Object[5];
                row[0] = c; 
                row[1] = c.getName();
                row[2] = c.getAge();
                row[3] = c.getDob();
                row[4] = c.getGender();
                model.addRow(row);
            }
      }
      
      private void populateChildrenEducationTable(){
        DefaultTableModel model = (DefaultTableModel) tableChildrenEducation.getModel();
        model.setRowCount(0);
        
//        
            for(Children c: system.getChildrenList().getChildrenList()){

                Object[] row = new Object[5];
                row[0] = c; 
                row[1] = c.getName();
                row[2] = c.getAge();
                row[3] = c.getDob();
                row[4] = c.getGender();
                model.addRow(row);
            }
      }
      
      private void populateStudentApp(){
        DefaultTableModel model = (DefaultTableModel) tableChildrenApp.getModel();
        model.setRowCount(0);
        
//        
            for(Application man: system.getApplicationList().getApplicationList()){
                if(man.getNgo().equals("Yes")){
                    Object[] row = new Object[5];
                    row[0] = man; 
                    row[1] = man.getName();
                    row[2] = man.getAge();
                    row[3] = man.getGender();
    //                row[4] = man.getNgo();
                    row[4] = man.getStatus();
                    model.addRow(row);
                }
            }
          
      }
      
    private void populatePublicUser(){
        DefaultTableModel model = (DefaultTableModel) tablePerson.getModel();
        model.setRowCount(0);
        
//        
            for(PublicUser man: system.getPublicUserList().getPublicUserList()){

                Object[] row = new Object[5];
                row[0] = man; 
                row[1] = man.getName();
                row[2] = man.getAge();
                row[3] = man.getGender();
//                row[4] = man.getNgo();
                row[4] = man.getEmailId();
                model.addRow(row);
            }
          
      }
      
    private void populateAppoinmentTable(){
        DefaultTableModel model = (DefaultTableModel) tableChildrenAppoinment.getModel();
        model.setRowCount(0);
        
//        
            for(Appointment man: system.getHosAppList().getHosAppList()){

                Object[] row = new Object[5];
                row[0] = man; 
                row[1] = man.getPatient();
                row[2] = man.getAge();
                row[3] = man.getGender();
//                row[4] = man.getNgo();
                row[4] = man.getStatus();
                model.addRow(row);
            }
          
      }
    
      private void populateNgoOrderTable(){
        DefaultTableModel model = (DefaultTableModel) tableNgoOrder.getModel();
        model.setRowCount(0);
        
//        
            for(NgoOrder man: system.getNgoOrderList().getNgoOrderList()){

                Object[] row = new Object[4];
                row[0] = man; 
                row[1] = man.getItems();
                row[2] = man.getQty();
                row[3] = man.getStatus();
         
                model.addRow(row);
            }
          
      }
      
     public void populateCombo(){
        String[] docArr1 = system.getCareTakerList().carUsernameArray();
        DefaultComboBoxModel dn1 = new DefaultComboBoxModel(docArr1);
        txtChildrenCaretaker.setModel(dn1);
        
        String[] docArr = system.getMedicineList().medArray();
        DefaultComboBoxModel dn = new DefaultComboBoxModel(docArr);
        txtItem.setModel(dn);
      }
     
     public void SearchChildren(String query){
        DefaultTableModel model = (DefaultTableModel) tableChildrenCreate.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        
        tableChildrenCreate.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
     }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane4;
    private javax.swing.JScrollPane ScrollPane5;
    private javax.swing.JScrollPane ScrollPane6;
    private javax.swing.JScrollPane ScrollPane7;
    private javax.swing.JScrollPane ScrollPane8;
    private javax.swing.JScrollPane ScrollPane9;
    private javax.swing.JScrollPane ScrollPaneNgoManager;
    private javax.swing.JScrollPane ScrollPaneNgoManager1;
    private javax.swing.JScrollPane ScrollPaneNgoManager2;
    private javax.swing.JSplitPane SplitPaneAdmin;
    private javax.swing.JButton btnApply;
    private javax.swing.JButton btnAppointment;
    private javax.swing.JButton btnAutofill;
    private javax.swing.JButton btnAutofill1;
    private javax.swing.JButton btnBudget;
    private javax.swing.JButton btnCaretaker;
    private javax.swing.JButton btnCaretakerCreate;
    private javax.swing.JButton btnCaretakerDelete;
    private javax.swing.JButton btnCaretakerUpdate;
    private javax.swing.JButton btnCaretakerView;
    private javax.swing.JButton btnChildren;
    private javax.swing.JButton btnChildrenCreate;
    private javax.swing.JButton btnChildrenDelete;
    private javax.swing.JButton btnChildrenUpdate;
    private javax.swing.JButton btnChildrenView;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEducation;
    private javax.swing.JButton btnEssentialItems;
    private javax.swing.JButton btnFundManager;
    private javax.swing.JButton btnFundManagerCreate;
    private javax.swing.JButton btnFundManagerDelete;
    private javax.swing.JButton btnFundManagerView;
    private javax.swing.JButton btnFundMangerUpdate;
    private javax.swing.JButton btnHealth;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnNgoManager;
    private javax.swing.JButton btnNgoManagerCreate;
    private javax.swing.JButton btnNgoManagerDelete;
    private javax.swing.JButton btnNgoManagerView;
    private javax.swing.JButton btnNgoMangerUpdate;
    private javax.swing.JButton btnPerson;
    private javax.swing.JButton btnPlaceOrder;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbCaretakerGender;
    private javax.swing.JTextField cmbChildGender;
    private javax.swing.JComboBox<String> cmbChildrenGender;
    private javax.swing.JComboBox<String> cmbFundManagerGender;
    private javax.swing.JComboBox<String> cmbNgoManagerGender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblAccounts;
    private javax.swing.JLabel lblApplicationNo;
    private javax.swing.JLabel lblApplicationNo1;
    private javax.swing.JLabel lblCaretakerAge;
    private javax.swing.JLabel lblCaretakerDOB;
    private javax.swing.JLabel lblCaretakerEmailId;
    private javax.swing.JLabel lblCaretakerGender;
    private javax.swing.JLabel lblCaretakerId;
    private javax.swing.JLabel lblCaretakerName;
    private javax.swing.JLabel lblCaretakerPassword;
    private javax.swing.JLabel lblCaretakerPhno;
    private javax.swing.JLabel lblCaretakerRole;
    private javax.swing.JLabel lblCaretakerUsername;
    private javax.swing.JLabel lblChildAge;
    private javax.swing.JLabel lblChildAge1;
    private javax.swing.JLabel lblChildName;
    private javax.swing.JLabel lblChildName1;
    private javax.swing.JLabel lblChildName10;
    private javax.swing.JLabel lblChildName2;
    private javax.swing.JLabel lblChildName3;
    private javax.swing.JLabel lblChildName4;
    private javax.swing.JLabel lblChildName5;
    private javax.swing.JLabel lblChildName6;
    private javax.swing.JLabel lblChildName8;
    private javax.swing.JLabel lblChildName9;
    private javax.swing.JLabel lblChildrenAge;
    private javax.swing.JLabel lblChildrenCaretaker;
    private javax.swing.JLabel lblChildrenDob;
    private javax.swing.JLabel lblChildrenGender;
    private javax.swing.JLabel lblChildrenId;
    private javax.swing.JLabel lblChildrenName;
    private javax.swing.JLabel lblChildrenRole;
    private javax.swing.JLabel lblDonation;
    private javax.swing.JLabel lblEducation;
    private javax.swing.JLabel lblExpenditure;
    private javax.swing.JLabel lblFood;
    private javax.swing.JLabel lblFundManagerAge;
    private javax.swing.JLabel lblFundManagerDOB;
    private javax.swing.JLabel lblFundManagerEmailId;
    private javax.swing.JLabel lblFundManagerGender;
    private javax.swing.JLabel lblFundManagerId;
    private javax.swing.JLabel lblFundManagerName;
    private javax.swing.JLabel lblFundManagerPassword;
    private javax.swing.JLabel lblFundManagerPhno;
    private javax.swing.JLabel lblFundManagerRole;
    private javax.swing.JLabel lblFundManagerUsername;
    private javax.swing.JLabel lblHealth;
    private javax.swing.JLabel lblIncome;
    private javax.swing.JLabel lblNgoManagerAge;
    private javax.swing.JLabel lblNgoManagerDOB;
    private javax.swing.JLabel lblNgoManagerEmailId;
    private javax.swing.JLabel lblNgoManagerGender;
    private javax.swing.JLabel lblNgoManagerId;
    private javax.swing.JLabel lblNgoManagerName;
    private javax.swing.JLabel lblNgoManagerPassword;
    private javax.swing.JLabel lblNgoManagerPhno;
    private javax.swing.JLabel lblNgoManagerRole;
    private javax.swing.JLabel lblNgoManagerUsername;
    private javax.swing.JLabel lblOthers;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblStatus1;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblTitle10;
    private javax.swing.JLabel lblTitle2;
    private javax.swing.JLabel lblTitle3;
    private javax.swing.JLabel lblTitle4;
    private javax.swing.JLabel lblTitle5;
    private javax.swing.JLabel lblTitle6;
    private javax.swing.JLabel lblTitle7;
    private javax.swing.JLabel lblTitle8;
    private javax.swing.JLabel lblTitle9;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JPanel panelAdminControl;
    private javax.swing.JPanel panelAdminWork;
    private javax.swing.JPanel panelBudget;
    private javax.swing.JPanel panelCareTaker;
    private javax.swing.JPanel panelChildren;
    private javax.swing.JPanel panelEducation;
    private javax.swing.JPanel panelFoodInv;
    private javax.swing.JPanel panelFundManager;
    private javax.swing.JPanel panelHealth;
    private javax.swing.JPanel panelHome;
    private javax.swing.JPanel panelNgoManager;
    private javax.swing.JPanel panelPerson;
    private javax.swing.JTable tableCaretaker;
    private javax.swing.JTable tableChildrenApp;
    private javax.swing.JTable tableChildrenAppoinment;
    private javax.swing.JTable tableChildrenCreate;
    private javax.swing.JTable tableChildrenEducation;
    private javax.swing.JTable tableChildrenHealth;
    private javax.swing.JTable tableFundManager;
    private javax.swing.JTable tableNgoManager;
    private javax.swing.JTable tableNgoOrder;
    private javax.swing.JTable tablePerson;
    private javax.swing.JTextField txtAppDate;
    private javax.swing.JTextField txtApplicationNo;
    private javax.swing.JTextField txtApplicationNo1;
    private javax.swing.JTextField txtCaretakerAge;
    private javax.swing.JTextField txtCaretakerDOB;
    private javax.swing.JTextField txtCaretakerEmailId;
    private javax.swing.JTextField txtCaretakerId;
    private javax.swing.JTextField txtCaretakerName;
    private javax.swing.JPasswordField txtCaretakerPassword;
    private javax.swing.JTextField txtCaretakerPhno;
    private javax.swing.JTextField txtCaretakerRole;
    private javax.swing.JTextField txtCaretakerUsername;
    private javax.swing.JTextField txtChildAge;
    private javax.swing.JTextField txtChildAge1;
    private javax.swing.JTextField txtChildClass;
    private javax.swing.JTextArea txtChildComment;
    private javax.swing.JTextArea txtChildComment1;
    private javax.swing.JTextField txtChildDOB;
    private javax.swing.JTextField txtChildGender2;
    private javax.swing.JTextField txtChildName;
    private javax.swing.JTextField txtChildName1;
    private javax.swing.JTextField txtChildSchool;
    private javax.swing.JTextField txtChildrenAge;
    private javax.swing.JComboBox<String> txtChildrenCaretaker;
    private javax.swing.JTextField txtChildrenDOB;
    private javax.swing.JTextField txtChildrenId;
    private javax.swing.JTextField txtChildrenName;
    private javax.swing.JTextField txtChildrenRole;
    private javax.swing.JTextField txtDonation;
    private javax.swing.JTextField txtEducation;
    private javax.swing.JTextField txtFood;
    private javax.swing.JTextField txtFundManagerAge;
    private javax.swing.JTextField txtFundManagerDOB;
    private javax.swing.JTextField txtFundManagerEmailId;
    private javax.swing.JTextField txtFundManagerId;
    private javax.swing.JTextField txtFundManagerName;
    private javax.swing.JPasswordField txtFundManagerPassword;
    private javax.swing.JTextField txtFundManagerPhno;
    private javax.swing.JTextField txtFundManagerRole;
    private javax.swing.JTextField txtFundManagerUsername;
    private javax.swing.JTextField txtHealth;
    private javax.swing.JComboBox<String> txtItem;
    private javax.swing.JTextField txtNgo;
    private javax.swing.JTextField txtNgoManagerAge;
    private javax.swing.JTextField txtNgoManagerDOB;
    private javax.swing.JTextField txtNgoManagerEmailId;
    private javax.swing.JTextField txtNgoManagerId;
    private javax.swing.JTextField txtNgoManagerName;
    private javax.swing.JPasswordField txtNgoManagerPassword;
    private javax.swing.JTextField txtNgoManagerPhno;
    private javax.swing.JTextField txtNgoManagerRole;
    private javax.swing.JTextField txtNgoManagerUsername;
    private javax.swing.JTextField txtOrderId;
    private javax.swing.JTextField txtOther;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtStatus1;
    private javax.swing.JTextField txtStatus2;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
