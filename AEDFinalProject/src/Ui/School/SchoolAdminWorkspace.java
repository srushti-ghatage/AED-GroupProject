/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Ui.School;

import JobApp.Applicant.TeacherApply;
import Ngo.Budget.Budget;
import School.Application.Application;
import School.Principal.Principal;
import School.Student.Student;
import School.Teacher.Teacher;
import System.Directories.DB4OUtil;
import System.Directories.DataValidation;
import System.Directories.MainSystem;
import java.awt.CardLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author megha
 */
public class SchoolAdminWorkspace extends javax.swing.JPanel {

    /**
     * Creates new form SchoolAdminWorkspace
     */
    private JPanel cardPanel;
    private MainSystem system;
    private DB4OUtil dB4OUtil;
    private final String FILENAME = "ProjectDataBank.db4o";
    private DataValidation data;
    
    public SchoolAdminWorkspace(JPanel cardPanel, MainSystem system, DB4OUtil dB4OUtil) {
        initComponents();
        this.cardPanel = cardPanel;
        this.system = system;
        this.dB4OUtil = dB4OUtil;
        this.data=new DataValidation();
        populateTeacherTable();
        populatePrincipalTable();
        populateStudentTable();
        populateApplicationTable();
        populateAppTable();
        populateCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SplitPaneSchoolAdmin = new javax.swing.JSplitPane();
        panelControl = new javax.swing.JPanel();
        btnHome = new javax.swing.JButton();
        btnPrincipal = new javax.swing.JButton();
        btnTeacher = new javax.swing.JButton();
        btnStudent = new javax.swing.JButton();
        btnApplication = new javax.swing.JButton();
        btnJobApp = new javax.swing.JButton();
        panelWork = new javax.swing.JPanel();
        panelHome = new javax.swing.JPanel();
        lblTitle2 = new javax.swing.JLabel();
        lblRole = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JButton();
        panelTeacher = new javax.swing.JPanel();
        lblTitle1 = new javax.swing.JLabel();
        lblTeacherName = new javax.swing.JLabel();
        lblTeacherAge = new javax.swing.JLabel();
        txtTeacherName = new javax.swing.JTextField();
        txtTeacherAge = new javax.swing.JTextField();
        btnTeacherCreate = new javax.swing.JButton();
        btnTeacherView = new javax.swing.JButton();
        ScrollPaneNgoManager = new javax.swing.JScrollPane();
        tableTeacher = new javax.swing.JTable();
        btnTeacherDelete = new javax.swing.JButton();
        lblTeacherDOB = new javax.swing.JLabel();
        txtTeacherDOB = new javax.swing.JTextField();
        lblTeacherUsername = new javax.swing.JLabel();
        txtTeacherUsername = new javax.swing.JTextField();
        lblTeacherEmailId = new javax.swing.JLabel();
        txtTeacherEmailId = new javax.swing.JTextField();
        txtTeacherPhno = new javax.swing.JTextField();
        lblTeacherPhno = new javax.swing.JLabel();
        lblTeacherPassword = new javax.swing.JLabel();
        txtTeacherPassword = new javax.swing.JPasswordField();
        btnTeacherUpdate = new javax.swing.JButton();
        lblNgoManagerId = new javax.swing.JLabel();
        txtTeacherId = new javax.swing.JTextField();
        lblTeacherSearch = new javax.swing.JLabel();
        txtTeacherSearch = new javax.swing.JTextField();
        lblTeacherGender = new javax.swing.JLabel();
        cmbTeacherGender = new javax.swing.JComboBox<>();
        lblTeacherRole = new javax.swing.JLabel();
        txtTeacherRole = new javax.swing.JTextField();
        lblTeacherEx = new javax.swing.JLabel();
        txtTeacherEx = new javax.swing.JTextField();
        panelStudent = new javax.swing.JPanel();
        lblTitle3 = new javax.swing.JLabel();
        lblStudentName = new javax.swing.JLabel();
        lblTeacherAge1 = new javax.swing.JLabel();
        txtStudentName = new javax.swing.JTextField();
        txtStudentAge = new javax.swing.JTextField();
        btnStudentCreate = new javax.swing.JButton();
        btnStudentView = new javax.swing.JButton();
        ScrollPaneNgoManager1 = new javax.swing.JScrollPane();
        tableStudent = new javax.swing.JTable();
        btnStudentDelete = new javax.swing.JButton();
        lblTeacherDOB1 = new javax.swing.JLabel();
        txtStudentDOB = new javax.swing.JTextField();
        lblStudentEmailId = new javax.swing.JLabel();
        txtStudentEmailId = new javax.swing.JTextField();
        txtStudentPhno = new javax.swing.JTextField();
        lblStudentPhno = new javax.swing.JLabel();
        btnStudentUpdate = new javax.swing.JButton();
        lblStudentId = new javax.swing.JLabel();
        txtStudentId = new javax.swing.JTextField();
        lblStudentSearch = new javax.swing.JLabel();
        txtStudentSearch = new javax.swing.JTextField();
        lblStudentGender = new javax.swing.JLabel();
        cmbStudentGender = new javax.swing.JComboBox<>();
        lblStudentRole = new javax.swing.JLabel();
        txtStudentRole = new javax.swing.JTextField();
        lblStudentClass = new javax.swing.JLabel();
        txtStudentClass = new javax.swing.JTextField();
        lblStudentPhno1 = new javax.swing.JLabel();
        txtStudentTeacherId = new javax.swing.JComboBox<>();
        panelPrincipal = new javax.swing.JPanel();
        lblTitle4 = new javax.swing.JLabel();
        lblPrincipalName = new javax.swing.JLabel();
        lblPrincipalAge = new javax.swing.JLabel();
        txtPrincipalName = new javax.swing.JTextField();
        txtPrincipalAge = new javax.swing.JTextField();
        btnPrincipalCreate = new javax.swing.JButton();
        btnPrincipalView = new javax.swing.JButton();
        ScrollPaneNgoManager2 = new javax.swing.JScrollPane();
        tablePrincipal = new javax.swing.JTable();
        btnPrincipalDelete = new javax.swing.JButton();
        lblPrincipalDOB = new javax.swing.JLabel();
        txtPrincipalDOB = new javax.swing.JTextField();
        lblPrincipalUsername = new javax.swing.JLabel();
        txtPrincipalUsername = new javax.swing.JTextField();
        lblPrincipalEmailId = new javax.swing.JLabel();
        txtPrincipalEmailId = new javax.swing.JTextField();
        txtPrincipalPhno = new javax.swing.JTextField();
        lblTeacherPhno1 = new javax.swing.JLabel();
        lblTeacherPassword1 = new javax.swing.JLabel();
        txtPrincipalPassword = new javax.swing.JPasswordField();
        btnPrincipalUpdate = new javax.swing.JButton();
        lblPrincipalId = new javax.swing.JLabel();
        txtPrincipalId = new javax.swing.JTextField();
        lblPrincipalGender = new javax.swing.JLabel();
        cmbPrincipalGender = new javax.swing.JComboBox<>();
        lblPrincipalRole = new javax.swing.JLabel();
        txtPrincipalRole = new javax.swing.JTextField();
        lblTeacherEx1 = new javax.swing.JLabel();
        txtPrincipalEx = new javax.swing.JTextField();
        panelApplications = new javax.swing.JPanel();
        ScrollPane6 = new javax.swing.JScrollPane();
        tableApplication = new javax.swing.JTable();
        lblApplicationNo = new javax.swing.JLabel();
        txtApplicationNo = new javax.swing.JTextField();
        lblChildName = new javax.swing.JLabel();
        txtChildName = new javax.swing.JTextField();
        lblChildAge = new javax.swing.JLabel();
        txtChildAge = new javax.swing.JTextField();
        lblChildName2 = new javax.swing.JLabel();
        txtChildDOB = new javax.swing.JTextField();
        lblChildName3 = new javax.swing.JLabel();
        cmbChildGender = new javax.swing.JComboBox<>();
        lblChildName4 = new javax.swing.JLabel();
        txtChildSchool = new javax.swing.JTextField();
        lblChildName5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtChildComment = new javax.swing.JTextArea();
        lblStatus = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        btnAccept = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        lblTitle7 = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        lblChildName6 = new javax.swing.JLabel();
        txtChildClass = new javax.swing.JTextField();
        lblChildName7 = new javax.swing.JLabel();
        txtNgo = new javax.swing.JComboBox<>();
        panelJobApply = new javax.swing.JPanel();
        lblTitle5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableJobApp = new javax.swing.JTable();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblUsername1 = new javax.swing.JLabel();
        txtAppId = new javax.swing.JTextField();
        lblUsername2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtQua = new javax.swing.JTextField();
        lblQua = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblAge1 = new javax.swing.JLabel();
        txtGender = new javax.swing.JTextField();
        lblQua1 = new javax.swing.JLabel();
        txtEx = new javax.swing.JTextField();
        lblQua2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtComm = new javax.swing.JTextArea();
        lblSub = new javax.swing.JLabel();
        txtSubject = new javax.swing.JTextField();
        lblSchool = new javax.swing.JLabel();
        txtSchool = new javax.swing.JTextField();
        lblStatus1 = new javax.swing.JLabel();
        txtStatus1 = new javax.swing.JTextField();
        lblEmailid = new javax.swing.JLabel();
        txtEmailId = new javax.swing.JTextField();
        btnClear1 = new javax.swing.JButton();
        btnAccept1 = new javax.swing.JButton();
        btnReject1 = new javax.swing.JButton();
        btnView1 = new javax.swing.JButton();

        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnPrincipal.setText("Principal");
        btnPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrincipalActionPerformed(evt);
            }
        });

        btnTeacher.setText("Teacher");
        btnTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTeacherActionPerformed(evt);
            }
        });

        btnStudent.setText("Student");
        btnStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudentActionPerformed(evt);
            }
        });

        btnApplication.setText("Applications");
        btnApplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplicationActionPerformed(evt);
            }
        });

        btnJobApp.setText("Job Applications");
        btnJobApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJobAppActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelControlLayout = new javax.swing.GroupLayout(panelControl);
        panelControl.setLayout(panelControlLayout);
        panelControlLayout.setHorizontalGroup(
            panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelControlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTeacher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnApplication, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnStudent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnJobApp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelControlLayout.setVerticalGroup(
            panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelControlLayout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(btnHome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnApplication)
                .addGap(18, 18, 18)
                .addComponent(btnJobApp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 213, Short.MAX_VALUE)
                .addComponent(btnPrincipal)
                .addGap(18, 18, 18)
                .addComponent(btnTeacher)
                .addGap(18, 18, 18)
                .addComponent(btnStudent)
                .addGap(179, 179, 179))
        );

        SplitPaneSchoolAdmin.setLeftComponent(panelControl);

        panelWork.setLayout(new java.awt.CardLayout());

        lblTitle2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitle2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle2.setText("School");

        lblRole.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        lblRole.setText("Role: School Admin");

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelHomeLayout = new javax.swing.GroupLayout(panelHome);
        panelHome.setLayout(panelHomeLayout);
        panelHomeLayout.setHorizontalGroup(
            panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHomeLayout.createSequentialGroup()
                .addContainerGap(957, Short.MAX_VALUE)
                .addGroup(panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogOut)
                    .addComponent(lblRole, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70))
        );
        panelHomeLayout.setVerticalGroup(
            panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle2)
                .addGap(57, 57, 57)
                .addComponent(lblRole)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogOut)
                .addContainerGap(610, Short.MAX_VALUE))
        );

        panelWork.add(panelHome, "card2");

        panelTeacher.setBackground(new java.awt.Color(255, 255, 255));

        lblTitle1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle1.setText("Teacher");

        lblTeacherName.setText("Name:");

        lblTeacherAge.setText("Age:");

        txtTeacherName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTeacherNameActionPerformed(evt);
            }
        });

        btnTeacherCreate.setText("Create");
        btnTeacherCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTeacherCreateActionPerformed(evt);
            }
        });

        btnTeacherView.setText("View");
        btnTeacherView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTeacherViewActionPerformed(evt);
            }
        });

        tableTeacher.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Username", "Age", "Email-Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableTeacher.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ScrollPaneNgoManager.setViewportView(tableTeacher);

        btnTeacherDelete.setText("Delete");
        btnTeacherDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTeacherDeleteActionPerformed(evt);
            }
        });

        lblTeacherDOB.setText("DOB:");

        lblTeacherUsername.setText("Username:");

        lblTeacherEmailId.setText("Email-Id:");

        lblTeacherPhno.setText("Phone No:");

        lblTeacherPassword.setText("Password:");

        btnTeacherUpdate.setText("Update");
        btnTeacherUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTeacherUpdateActionPerformed(evt);
            }
        });

        lblNgoManagerId.setText("Teacher Id:");

        lblTeacherSearch.setText("Search:");

        lblTeacherGender.setText("Gender:");

        cmbTeacherGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));

        lblTeacherRole.setText("Role:");

        txtTeacherRole.setEditable(false);
        txtTeacherRole.setText("Teacher");

        lblTeacherEx.setText("Experience:");

        javax.swing.GroupLayout panelTeacherLayout = new javax.swing.GroupLayout(panelTeacher);
        panelTeacher.setLayout(panelTeacherLayout);
        panelTeacherLayout.setHorizontalGroup(
            panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTeacherLayout.createSequentialGroup()
                .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTeacherLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTeacherCreate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTeacherUpdate))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTeacherLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTeacherName)
                            .addComponent(lblTeacherAge)
                            .addComponent(lblTeacherDOB)
                            .addComponent(lblTeacherUsername)
                            .addComponent(lblNgoManagerId)
                            .addComponent(lblTeacherRole))
                        .addGap(18, 18, 18)
                        .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTeacherRole, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTeacherUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTeacherId, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTeacherName, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTeacherAge, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTeacherDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 405, Short.MAX_VALUE)
                        .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTeacherEx)
                            .addComponent(lblTeacherPhno)
                            .addComponent(lblTeacherPassword)
                            .addComponent(lblTeacherEmailId)
                            .addComponent(lblTeacherGender))
                        .addGap(56, 56, 56)
                        .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtTeacherPassword)
                                .addComponent(txtTeacherPhno, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cmbTeacherGender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTeacherEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtTeacherEx, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 31, Short.MAX_VALUE)))
                .addGap(77, 77, 77))
            .addGroup(panelTeacherLayout.createSequentialGroup()
                .addContainerGap(186, Short.MAX_VALUE)
                .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ScrollPaneNgoManager, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(panelTeacherLayout.createSequentialGroup()
                            .addComponent(lblTeacherSearch)
                            .addGap(18, 18, 18)
                            .addComponent(txtTeacherSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelTeacherLayout.createSequentialGroup()
                            .addComponent(btnTeacherView)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnTeacherDelete)
                            .addGap(539, 539, 539))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelTeacherLayout.setVerticalGroup(
            panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTeacherLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(lblTitle1)
                .addGap(73, 73, 73)
                .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTeacherSearch)
                    .addComponent(txtTeacherSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(ScrollPaneNgoManager, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTeacherView)
                    .addComponent(btnTeacherDelete))
                .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTeacherLayout.createSequentialGroup()
                        .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelTeacherLayout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblNgoManagerId)
                                    .addComponent(lblTeacherGender))
                                .addGap(18, 18, 18)
                                .addComponent(lblTeacherEmailId)
                                .addGap(18, 18, 18)
                                .addComponent(lblTeacherPhno)
                                .addGap(18, 18, 18)
                                .addComponent(lblTeacherEx))
                            .addGroup(panelTeacherLayout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panelTeacherLayout.createSequentialGroup()
                                        .addComponent(lblTeacherName)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblTeacherUsername))
                                    .addGroup(panelTeacherLayout.createSequentialGroup()
                                        .addComponent(txtTeacherId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelTeacherLayout.createSequentialGroup()
                                                .addGap(34, 34, 34)
                                                .addComponent(txtTeacherUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtTeacherName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelTeacherLayout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(lblTeacherAge))
                                    .addGroup(panelTeacherLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(txtTeacherAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(18, 18, 18)
                        .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTeacherDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTeacherDOB)
                            .addComponent(lblTeacherPassword))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTeacherRole)
                            .addComponent(txtTeacherRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                        .addGroup(panelTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTeacherCreate)
                            .addComponent(btnTeacherUpdate))
                        .addGap(46, 46, 46))
                    .addGroup(panelTeacherLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(cmbTeacherGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTeacherEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTeacherPhno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTeacherEx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTeacherPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        panelWork.add(panelTeacher, "card2");

        panelStudent.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitle3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle3.setText("Student");
        panelStudent.add(lblTitle3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 46, 1166, -1));

        lblStudentName.setText("Name:");
        panelStudent.add(lblStudentName, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 429, -1, -1));

        lblTeacherAge1.setText("Age:");
        panelStudent.add(lblTeacherAge1, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 472, -1, -1));
        panelStudent.add(txtStudentName, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 426, 206, -1));
        panelStudent.add(txtStudentAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 466, 206, -1));

        btnStudentCreate.setText("Create");
        btnStudentCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudentCreateActionPerformed(evt);
            }
        });
        panelStudent.add(btnStudentCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 310, -1, -1));

        btnStudentView.setText("View");
        btnStudentView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudentViewActionPerformed(evt);
            }
        });
        panelStudent.add(btnStudentView, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 309, -1, -1));

        tableStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Class", "Age", "Email-Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableStudent.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ScrollPaneNgoManager1.setViewportView(tableStudent);

        panelStudent.add(ScrollPaneNgoManager1, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 179, 695, 112));

        btnStudentDelete.setText("Delete");
        btnStudentDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudentDeleteActionPerformed(evt);
            }
        });
        panelStudent.add(btnStudentDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(319, 309, -1, -1));

        lblTeacherDOB1.setText("DOB:");
        panelStudent.add(lblTeacherDOB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 509, -1, -1));
        panelStudent.add(txtStudentDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 506, 206, -1));

        lblStudentEmailId.setText("Email-Id:");
        panelStudent.add(lblStudentEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 429, -1, -1));
        panelStudent.add(txtStudentEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 430, 206, -1));
        panelStudent.add(txtStudentPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 470, 206, -1));

        lblStudentPhno.setText("Phone No:");
        panelStudent.add(lblStudentPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 469, -1, -1));

        btnStudentUpdate.setText("Update");
        btnStudentUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudentUpdateActionPerformed(evt);
            }
        });
        panelStudent.add(btnStudentUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 310, -1, -1));

        lblStudentId.setText("Student Id:");
        panelStudent.add(lblStudentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 389, -1, -1));
        panelStudent.add(txtStudentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 386, 206, -1));

        lblStudentSearch.setText("Search:");
        panelStudent.add(lblStudentSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 154, -1, -1));

        txtStudentSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtStudentSearchKeyReleased(evt);
            }
        });
        panelStudent.add(txtStudentSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(705, 151, 225, -1));

        lblStudentGender.setText("Gender:");
        panelStudent.add(lblStudentGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 389, -1, -1));

        cmbStudentGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));
        panelStudent.add(cmbStudentGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 390, 206, -1));

        lblStudentRole.setText("Role:");
        panelStudent.add(lblStudentRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 551, -1, -1));

        txtStudentRole.setEditable(false);
        txtStudentRole.setText("Student");
        panelStudent.add(txtStudentRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 548, 206, -1));

        lblStudentClass.setText("Class:");
        panelStudent.add(lblStudentClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 591, -1, -1));
        panelStudent.add(txtStudentClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 588, 206, -1));

        lblStudentPhno1.setText("Teacher:");
        panelStudent.add(lblStudentPhno1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 510, -1, -1));

        panelStudent.add(txtStudentTeacherId, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 510, 206, -1));

        panelWork.add(panelStudent, "card2");

        panelPrincipal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitle4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle4.setText("Principal");
        panelPrincipal.add(lblTitle4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 46, 1300, -1));

        lblPrincipalName.setText("Name:");
        panelPrincipal.add(lblPrincipalName, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 430, -1, -1));

        lblPrincipalAge.setText("Age:");
        panelPrincipal.add(lblPrincipalAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 510, -1, -1));
        panelPrincipal.add(txtPrincipalName, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 430, 206, -1));
        panelPrincipal.add(txtPrincipalAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(419, 509, 206, -1));

        btnPrincipalCreate.setText("Create");
        btnPrincipalCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrincipalCreateActionPerformed(evt);
            }
        });
        panelPrincipal.add(btnPrincipalCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 290, -1, -1));

        btnPrincipalView.setText("View");
        btnPrincipalView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrincipalViewActionPerformed(evt);
            }
        });
        panelPrincipal.add(btnPrincipalView, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 310, -1, -1));

        tablePrincipal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Username", "Age", "Email-Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablePrincipal.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ScrollPaneNgoManager2.setViewportView(tablePrincipal);

        panelPrincipal.add(ScrollPaneNgoManager2, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 154, 695, 93));

        btnPrincipalDelete.setText("Delete");
        btnPrincipalDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrincipalDeleteActionPerformed(evt);
            }
        });
        panelPrincipal.add(btnPrincipalDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 310, -1, -1));

        lblPrincipalDOB.setText("DOB:");
        panelPrincipal.add(lblPrincipalDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 550, -1, -1));
        panelPrincipal.add(txtPrincipalDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(419, 549, 206, -1));

        lblPrincipalUsername.setText("Username:");
        panelPrincipal.add(lblPrincipalUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 470, -1, -1));
        panelPrincipal.add(txtPrincipalUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(419, 467, 206, -1));

        lblPrincipalEmailId.setText("Email-Id:");
        panelPrincipal.add(lblPrincipalEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 430, -1, -1));
        panelPrincipal.add(txtPrincipalEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(1017, 427, 206, -1));
        panelPrincipal.add(txtPrincipalPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(1017, 467, 206, -1));

        lblTeacherPhno1.setText("Phone No:");
        panelPrincipal.add(lblTeacherPhno1, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 470, -1, -1));

        lblTeacherPassword1.setText("Password:");
        panelPrincipal.add(lblTeacherPassword1, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 550, -1, -1));
        panelPrincipal.add(txtPrincipalPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(1017, 549, 206, -1));

        btnPrincipalUpdate.setText("Update");
        btnPrincipalUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrincipalUpdateActionPerformed(evt);
            }
        });
        panelPrincipal.add(btnPrincipalUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 290, -1, -1));

        lblPrincipalId.setText("Principal Id:");
        panelPrincipal.add(lblPrincipalId, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 390, -1, -1));
        panelPrincipal.add(txtPrincipalId, new org.netbeans.lib.awtextra.AbsoluteConstraints(419, 387, 206, -1));

        lblPrincipalGender.setText("Gender:");
        panelPrincipal.add(lblPrincipalGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 390, -1, -1));

        cmbPrincipalGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));
        panelPrincipal.add(cmbPrincipalGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(1017, 387, 206, -1));

        lblPrincipalRole.setText("Role:");
        panelPrincipal.add(lblPrincipalRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 580, -1, -1));

        txtPrincipalRole.setEditable(false);
        txtPrincipalRole.setText("Principal");
        panelPrincipal.add(txtPrincipalRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(419, 583, 206, -1));

        lblTeacherEx1.setText("Experience:");
        panelPrincipal.add(lblTeacherEx1, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 510, -1, -1));
        panelPrincipal.add(txtPrincipalEx, new org.netbeans.lib.awtextra.AbsoluteConstraints(1017, 507, 206, -1));

        panelWork.add(panelPrincipal, "card2");

        panelApplications.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableApplication.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Application Id", "Name", "Age", "Gender", "NGO", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScrollPane6.setViewportView(tableApplication);

        panelApplications.add(ScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 716, 184));

        lblApplicationNo.setText("Application No:");
        panelApplications.add(lblApplicationNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, -1, -1));
        panelApplications.add(txtApplicationNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 410, 219, -1));

        lblChildName.setText("Name:");
        panelApplications.add(lblChildName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, -1, -1));
        panelApplications.add(txtChildName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 450, 219, -1));

        lblChildAge.setText("Age:");
        panelApplications.add(lblChildAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, -1, -1));
        panelApplications.add(txtChildAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 490, 219, -1));

        lblChildName2.setText("DOB:");
        panelApplications.add(lblChildName2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 530, -1, -1));
        panelApplications.add(txtChildDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 530, 219, -1));

        lblChildName3.setText("Gender:");
        panelApplications.add(lblChildName3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 590, -1, -1));

        cmbChildGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));
        panelApplications.add(cmbChildGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 590, 219, -1));

        lblChildName4.setText("School:");
        panelApplications.add(lblChildName4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 490, -1, -1));

        txtChildSchool.setEditable(false);
        txtChildSchool.setText("School");
        panelApplications.add(txtChildSchool, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 490, 219, -1));

        lblChildName5.setText("Comment:");
        panelApplications.add(lblChildName5, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 590, -1, -1));

        txtChildComment.setColumns(20);
        txtChildComment.setRows(5);
        jScrollPane1.setViewportView(txtChildComment);

        panelApplications.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 590, 219, 104));

        lblStatus.setText("Status:");
        panelApplications.add(lblStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 450, -1, -1));

        txtStatus.setEditable(false);
        txtStatus.setText("Pending");
        panelApplications.add(txtStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 450, 219, -1));

        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });
        panelApplications.add(btnAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 710, -1, -1));

        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });
        panelApplications.add(btnReject, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 710, -1, -1));

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        panelApplications.add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 710, -1, -1));

        lblTitle7.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitle7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle7.setText("Applications");
        panelApplications.add(lblTitle7, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, 920, -1));

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        panelApplications.add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, -1, -1));

        lblChildName6.setText("Class:");
        panelApplications.add(lblChildName6, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 410, -1, -1));
        panelApplications.add(txtChildClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 410, 219, -1));

        lblChildName7.setText("NGO:");
        panelApplications.add(lblChildName7, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 530, -1, -1));

        txtNgo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));
        panelApplications.add(txtNgo, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 530, 219, -1));

        panelWork.add(panelApplications, "card6");

        panelJobApply.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitle5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle5.setText("Job Application");
        panelJobApply.add(lblTitle5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 1166, -1));

        tableJobApp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Applicant Id", "Name", "Subject", "Email-Id", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableJobApp);

        panelJobApply.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 78, 1134, 111));

        lblUsername.setText("Username:");
        panelJobApply.add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 368, -1, -1));

        txtUsername.setEditable(false);
        panelJobApply.add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(193, 365, 206, -1));

        lblUsername1.setText("Application Id:");
        panelJobApply.add(lblUsername1, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 328, -1, -1));

        txtAppId.setEditable(false);
        panelJobApply.add(txtAppId, new org.netbeans.lib.awtextra.AbsoluteConstraints(193, 325, 206, -1));

        lblUsername2.setText("Name:");
        panelJobApply.add(lblUsername2, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 408, -1, -1));

        txtName.setEditable(false);
        panelJobApply.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(193, 405, 206, -1));

        txtQua.setEditable(false);
        panelJobApply.add(txtQua, new org.netbeans.lib.awtextra.AbsoluteConstraints(193, 445, 206, -1));

        lblQua.setText("Qualification:");
        panelJobApply.add(lblQua, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 448, -1, -1));

        lblAge.setText("Age:");
        panelJobApply.add(lblAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 488, -1, -1));

        txtAge.setEditable(false);
        panelJobApply.add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(193, 485, 206, -1));

        lblAge1.setText("Gender:");
        panelJobApply.add(lblAge1, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 538, -1, -1));

        txtGender.setEditable(false);
        panelJobApply.add(txtGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(193, 535, 206, -1));

        lblQua1.setText("Experience:");
        panelJobApply.add(lblQua1, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 580, -1, -1));

        txtEx.setEditable(false);
        panelJobApply.add(txtEx, new org.netbeans.lib.awtextra.AbsoluteConstraints(193, 577, 206, -1));

        lblQua2.setText("Comment:");
        panelJobApply.add(lblQua2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 480, -1, -1));

        txtComm.setEditable(false);
        txtComm.setColumns(20);
        txtComm.setRows(5);
        jScrollPane3.setViewportView(txtComm);

        panelJobApply.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 490, 206, -1));

        lblSub.setText("Subject:");
        panelJobApply.add(lblSub, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 368, -1, -1));

        txtSubject.setEditable(false);
        panelJobApply.add(txtSubject, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 370, 206, -1));

        lblSchool.setText("School:");
        panelJobApply.add(lblSchool, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 408, -1, -1));

        txtSchool.setEditable(false);
        txtSchool.setText("School");
        panelJobApply.add(txtSchool, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 410, 206, -1));

        lblStatus1.setText("Status:");
        panelJobApply.add(lblStatus1, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 448, -1, -1));

        txtStatus1.setEditable(false);
        txtStatus1.setText("Pending");
        panelJobApply.add(txtStatus1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 450, 206, -1));

        lblEmailid.setText("Email-Id:");
        panelJobApply.add(lblEmailid, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 328, -1, -1));

        txtEmailId.setEditable(false);
        panelJobApply.add(txtEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 330, 206, -1));

        btnClear1.setText("Clear");
        btnClear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClear1ActionPerformed(evt);
            }
        });
        panelJobApply.add(btnClear1, new org.netbeans.lib.awtextra.AbsoluteConstraints(666, 646, -1, -1));

        btnAccept1.setText("Accept");
        btnAccept1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAccept1ActionPerformed(evt);
            }
        });
        panelJobApply.add(btnAccept1, new org.netbeans.lib.awtextra.AbsoluteConstraints(794, 646, -1, -1));

        btnReject1.setText("Reject");
        btnReject1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReject1ActionPerformed(evt);
            }
        });
        panelJobApply.add(btnReject1, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 646, -1, -1));

        btnView1.setText("View");
        btnView1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnView1ActionPerformed(evt);
            }
        });
        panelJobApply.add(btnView1, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 207, -1, -1));

        panelWork.add(panelJobApply, "card3");

        SplitPaneSchoolAdmin.setRightComponent(panelWork);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SplitPaneSchoolAdmin)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SplitPaneSchoolAdmin)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTeacherCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTeacherCreateActionPerformed
        // TODO add your handling code here:

        String id = txtTeacherId.getText();
        if(id.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Id");
            return;
        }
        else if(system.getTeacherList().uiqueTeacherId(id)== false){
            JOptionPane.showMessageDialog(this, "Id already exist");
            return;
        }
        
        
        
        String name = txtTeacherName.getText();
        if(name.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the name");
            return;
        }
        
        
        String username = txtTeacherUsername.getText();
        if(username.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the username");
            return;
        }
        else if(system.getTeacherList().uniqueTeacherUsername(username)==false){
            JOptionPane.showMessageDialog(this, "Username already exist");
            return;
        }
        
        
        if(data.numcheck(txtTeacherAge.getText())==false){
            JOptionPane.showMessageDialog(this, "Enter valid age");
            return;
        }
        Integer age = Integer.valueOf(txtTeacherAge.getText());
        
        
        
        String dob = txtTeacherDOB.getText();
        if(!data.dateCheck(dob)){
            JOptionPane.showMessageDialog(this, "Please enter correct date in format mm/dd/yyyy");
            return;
        }
        
        
        String gender = String.valueOf(cmbTeacherGender.getSelectedItem());
        
        
        
        String role = txtTeacherRole.getText();
        
        
        
        String emailid= txtTeacherEmailId.getText();
        if(!data.emailCheck(emailid)){
            JOptionPane.showMessageDialog(this, "Enter valid email id");
            return;
        }
        
        
        if(!data.phnocheck(txtTeacherPhno.getText())){
            JOptionPane.showMessageDialog(this, "Enter valid phone no");
            return;
        }
        Long phno = Long.valueOf(txtTeacherPhno.getText());
        
        
        if(data.numcheck(txtTeacherEx.getText())==false){
            JOptionPane.showMessageDialog(this, "Enter valid Experience");
            return;
        }
        Integer experience = Integer.valueOf(txtTeacherEx.getText());
        
        
        
        String pass = txtTeacherPassword.getText();
        if(pass.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter valid password");
            return;
        }
        
        

        Teacher newTeacher = system.getTeacherList().addTeacher();

        newTeacher.setTeacherId(id);
        newTeacher.setName(name);
        newTeacher.setUsername(username);
        newTeacher.setAge(age);
        newTeacher.setDob(dob);
        newTeacher.setGender(gender);
        newTeacher.setRole(role);
        newTeacher.setEmailId(emailid);
        newTeacher.setPhno(phno);
        newTeacher.setExperience(experience);
        newTeacher.setPassword(pass);

        JOptionPane.showMessageDialog(this, "Teacher created successfully");

        txtTeacherId.setText("");
        txtTeacherName.setText("");
        txtTeacherUsername.setText("");
        txtTeacherAge.setText("");
        txtTeacherDOB.setText("");
        txtTeacherEmailId.setText("");
        txtTeacherPhno.setText("");
        txtTeacherEx.setText("");
        txtTeacherPassword.setText("");

        //        dB4OUtil.storeSystem(system);
        populateTeacherTable();
        populateCombo();

    }//GEN-LAST:event_btnTeacherCreateActionPerformed

    private void btnTeacherViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTeacherViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableTeacher.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableTeacher.getModel();
            Teacher selMan = (Teacher) model.getValueAt(selectedRowIndex,0);

            txtTeacherId.setText(selMan.getTeacherId());
            txtTeacherName.setText(selMan.getName());
            txtTeacherUsername.setText(selMan.getUsername());
            txtTeacherAge.setText(String.valueOf(selMan.getAge()));
            txtTeacherDOB.setText(selMan.getDob());
            cmbTeacherGender.setSelectedItem(selMan.getGender());
            txtTeacherRole.setText(selMan.getRole());
            txtTeacherEmailId.setText(selMan.getEmailId());
            txtTeacherPhno.setText(String.valueOf(selMan.getPhno()));
            txtTeacherEx.setText(String.valueOf(selMan.getExperience()));
            txtTeacherPassword.setText(selMan.getPassword());

        }
    }//GEN-LAST:event_btnTeacherViewActionPerformed

    private void btnTeacherDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTeacherDeleteActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableTeacher.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableTeacher.getModel();
            Teacher selectedMan = (Teacher) model.getValueAt(selectedRowIndex,0);

            system.getTeacherList().deleteTeacher(selectedMan);

            JOptionPane.showMessageDialog(this, "Teacher deleted successfully.");

            //            dB4OUtil.storeSystem(system);
            populateTeacherTable();
        }
    }//GEN-LAST:event_btnTeacherDeleteActionPerformed

    private void btnTeacherUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTeacherUpdateActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableTeacher.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableTeacher.getModel();
            Teacher selMan = (Teacher) model.getValueAt(selectedRowIndex,0);

//            selMan.setTeacherId(txtTeacherId.getText());
            
            
            
            selMan.setName(txtTeacherName.getText());
            if(txtTeacherName.getText().isEmpty()){
		JOptionPane.showMessageDialog(this, "Enter valid name");
                return;
            }
            
            
//            selMan.setUsername(txtTeacherUsername.getText());
            
            
            if(!data.numcheck(txtTeacherAge.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid age");
                return;
            }
            selMan.setAge(Integer.valueOf(txtTeacherAge.getText()));
            
            
            
            selMan.setDob(txtTeacherDOB.getText());
            if(!data.dateCheck(txtTeacherDOB.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid date");
                return;
            }
            
            
            selMan.setGender(String.valueOf(cmbTeacherGender.getSelectedItem()));
            
            
            
            selMan.setRole(txtTeacherRole.getText());
            
            
            
            selMan.setEmailId(txtTeacherEmailId.getText());
            if(!data.emailCheck(txtTeacherEmailId.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid emailid");
                return;
            }
            
            if(!data.phnocheck(txtTeacherPhno.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid phone no");
                return;
            }
            selMan.setPhno(Long.valueOf(txtTeacherPhno.getText()));
            
            
            if(!data.numcheck(txtTeacherEx.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid Experience");
                return;
            }
            selMan.setExperience(Integer.valueOf(txtTeacherEx.getText()));
            
            
            
            selMan.setPassword(txtTeacherPassword.getText());
            if(txtTeacherPassword.getText().isEmpty()){
		JOptionPane.showMessageDialog(this, "Enter valid password");
                return;
            }
            
            

            JOptionPane.showMessageDialog(this, "Teacher updated successfully");

            //            dB4OUtil.storeSystem(system);
            populateTeacherTable();

        }

    }//GEN-LAST:event_btnTeacherUpdateActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        dB4OUtil.storeSystem(system);
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        cardPanel.remove(this);
        cardLayout.previous(cardPanel);

    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTeacherActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelTeacher);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnTeacherActionPerformed

    private void btnStudentCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudentCreateActionPerformed
        // TODO add your handling code here:
        String id = txtStudentId.getText();
        if(id.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Id");
            return;
        }
        else if(system.getStudentList().uiqueStudentId(id)== false){
            JOptionPane.showMessageDialog(this, "Id already exist");
            return;
        }
        
        
        String name = txtStudentName.getText();
        if(name.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the name");
            return;
        }
        
        if(data.numcheck(txtStudentAge.getText())==false){
            JOptionPane.showMessageDialog(this, "Enter valid age");
            return;
        }
        Integer age = Integer.valueOf(txtStudentAge.getText());
        
        
        
        String dob = txtStudentDOB.getText();
        if(!data.dateCheck(dob)){
            JOptionPane.showMessageDialog(this, "Please enter correct date in format mm/dd/yyyy");
            return;
        }
        
        
        String gender = String.valueOf(cmbStudentGender.getSelectedItem());
        
        
        
        String role = txtStudentRole.getText();
        
        
        
        String cls = txtStudentClass.getText();
        if(cls.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Class");
            return;
        }
        
        
        String emailid= txtStudentEmailId.getText();
        if(!data.emailCheck(emailid)){
            JOptionPane.showMessageDialog(this, "Enter valid email id");
            return;
        }
        
        
        if(!data.phnocheck(txtStudentPhno.getText())){
            JOptionPane.showMessageDialog(this, "Enter valid phone no");
            return;
        }
        Long phno = Long.valueOf(txtStudentPhno.getText());
        
        
        
        String teacherid = String.valueOf(txtStudentTeacherId.getSelectedItem());
        

        Student newStudent = system.getStudentList().addStudent();

        newStudent.setStudentId(id);
        newStudent.setName(name);
        newStudent.setAge(age);
        newStudent.setDob(dob);
        newStudent.setGender(gender);
        newStudent.setRole(role);
        newStudent.setCls(cls);
        newStudent.setEmailId(emailid);
        newStudent.setPhno(phno);
        newStudent.setTeachId(teacherid);
        

        JOptionPane.showMessageDialog(this, "Student created successfully");

        txtStudentId.setText("");
        txtStudentName.setText("");
        
        txtStudentAge.setText("");
        txtStudentDOB.setText("");
        txtStudentClass.setText("");
        txtStudentEmailId.setText("");
        txtStudentPhno.setText("");
       

        //        dB4OUtil.storeSystem(system);
        populateStudentTable();
    }//GEN-LAST:event_btnStudentCreateActionPerformed

    private void btnStudentViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudentViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableStudent.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableStudent.getModel();
            Student selMan = (Student) model.getValueAt(selectedRowIndex,0);

            txtStudentId.setText(selMan.getStudentId());
            txtStudentName.setText(selMan.getName());
            
            txtStudentAge.setText(String.valueOf(selMan.getAge()));
            txtStudentDOB.setText(selMan.getDob());
            cmbStudentGender.setSelectedItem(selMan.getGender());
            txtStudentRole.setText(selMan.getRole());
            txtStudentClass.setText(selMan.getCls());
            txtStudentEmailId.setText(selMan.getEmailId());
            txtStudentPhno.setText(String.valueOf(selMan.getPhno()));
            txtStudentTeacherId.setSelectedItem(selMan.getTeachId());
           
        }
    }//GEN-LAST:event_btnStudentViewActionPerformed

    private void btnStudentDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudentDeleteActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableStudent.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableStudent.getModel();
            Student selectedMan = (Student) model.getValueAt(selectedRowIndex,0);

            system.getStudentList().deleteStudent(selectedMan);

            JOptionPane.showMessageDialog(this, "Student deleted successfully.");

            //            dB4OUtil.storeSystem(system);
            populateStudentTable();
        }
    }//GEN-LAST:event_btnStudentDeleteActionPerformed

    private void btnStudentUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudentUpdateActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableStudent.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableStudent.getModel();
            Student selMan = (Student) model.getValueAt(selectedRowIndex,0);

//            selMan.setStudentId(txtStudentId.getText());
            
            
            
            selMan.setName(txtStudentName.getText());
            if(txtStudentName.getText().isEmpty()){
		JOptionPane.showMessageDialog(this, "Enter valid name");
                return;
            }
            
            
            if(!data.numcheck(txtStudentAge.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid age");
                return;
            }
            selMan.setAge(Integer.valueOf(txtStudentAge.getText()));
            
            
            
            selMan.setDob(txtStudentDOB.getText());
            if(!data.dateCheck(txtStudentDOB.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid date");
                return;
            }
            
            
            
            selMan.setGender(String.valueOf(cmbStudentGender.getSelectedItem()));
            
            
            
            selMan.setRole(txtStudentRole.getText());
            
            
            
            selMan.setCls(txtStudentClass.getText());
            if(txtStudentClass.getText().isEmpty()){
		JOptionPane.showMessageDialog(this, "Enter valid Class");
                return;
            }
            
            
            selMan.setEmailId(txtStudentEmailId.getText());
            if(!data.emailCheck(txtStudentEmailId.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid emailid");
                return;
            }
            
            
            selMan.setPhno(Long.valueOf(txtStudentPhno.getText()));
            if(!data.phnocheck(txtStudentPhno.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid phone no");
                return;
            }
            
            
            selMan.setTeachId(String.valueOf(txtStudentTeacherId.getSelectedItem()));
            
            

            JOptionPane.showMessageDialog(this, "Student updated successfully");

            //            dB4OUtil.storeSystem(system);
            populateTeacherTable();
        }
    }//GEN-LAST:event_btnStudentUpdateActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelHome);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudentActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelStudent);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnStudentActionPerformed

    private void btnPrincipalCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrincipalCreateActionPerformed
        // TODO add your handling code here:
        String id = txtPrincipalId.getText();
        if(id.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Id");
            return;
        }
        else if(system.getPrincipalList().uiquePrincipalId(id)== false){
            JOptionPane.showMessageDialog(this, "Id already exist");
            return;
        }
        
        
        String name = txtPrincipalName.getText();
        if(name.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the name");
            return;
        }
        
        
        String username = txtPrincipalUsername.getText();
        if(username.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the username");
            return;
        }
        else if(system.getPrincipalList().uniquePrincipalUsername(username)==false){
            JOptionPane.showMessageDialog(this, "Username already exist");
            return;
        }
        
        
        if(data.numcheck(txtPrincipalAge.getText())==false){
            JOptionPane.showMessageDialog(this, "Enter valid age");
            return;
        }
        Integer age = Integer.valueOf(txtPrincipalAge.getText());
        
        
        
        String dob = txtPrincipalDOB.getText();
        if(!data.dateCheck(dob)){
            JOptionPane.showMessageDialog(this, "Please enter correct date in format mm/dd/yyyy");
            return;
        }
        
        
        String gender = String.valueOf(cmbPrincipalGender.getSelectedItem());
        
        
        
        String role = txtPrincipalRole.getText();
        
        
        
        String emailid= txtPrincipalEmailId.getText();
        if(!data.emailCheck(emailid)){
            JOptionPane.showMessageDialog(this, "Enter valid email id");
            return;
        }
        
        
        if(!data.phnocheck(txtPrincipalPhno.getText())){
            JOptionPane.showMessageDialog(this, "Enter valid phone no");
            return;
        }
        Long phno = Long.valueOf(txtPrincipalPhno.getText());
        
        
        if(data.numcheck(txtPrincipalEx.getText())==false){
            JOptionPane.showMessageDialog(this, "Enter valid experience");
            return;
        }
        Integer experience = Integer.valueOf(txtPrincipalEx.getText());
        
        
        
        String pass = txtPrincipalPassword.getText();
        if(pass.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter valid password");
            return;
        }
        
        

        Principal newPrincipal = (Principal) system.getPrincipalList().addPrincipal();

        newPrincipal.setTeacherId(id);
        newPrincipal.setName(name);
        newPrincipal.setUsername(username);
        newPrincipal.setAge(age);
        newPrincipal.setDob(dob);
        newPrincipal.setGender(gender);
        newPrincipal.setRole(role);
        newPrincipal.setEmailId(emailid);
        newPrincipal.setPhno(phno);
        newPrincipal.setExperience(experience);
        newPrincipal.setPassword(pass);

        JOptionPane.showMessageDialog(this, "Principal created successfully");

        txtPrincipalId.setText("");
        txtPrincipalName.setText("");
        txtPrincipalUsername.setText("");
        txtPrincipalAge.setText("");
        txtPrincipalDOB.setText("");
        txtPrincipalEmailId.setText("");
        txtPrincipalPhno.setText("");
        txtPrincipalEx.setText("");
        txtPrincipalPassword.setText("");

        //        dB4OUtil.storeSystem(system);
        populatePrincipalTable();
    }//GEN-LAST:event_btnPrincipalCreateActionPerformed

    private void btnPrincipalViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrincipalViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tablePrincipal.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tablePrincipal.getModel();
            Principal selMan = (Principal) model.getValueAt(selectedRowIndex,0);

            txtPrincipalId.setText(selMan.getTeacherId());
            txtPrincipalName.setText(selMan.getName());
            txtPrincipalUsername.setText(selMan.getUsername());
            txtPrincipalAge.setText(String.valueOf(selMan.getAge()));
            txtPrincipalDOB.setText(selMan.getDob());
            cmbPrincipalGender.setSelectedItem(selMan.getGender());
            txtPrincipalRole.setText(selMan.getRole());
            txtPrincipalEmailId.setText(selMan.getEmailId());
            txtPrincipalPhno.setText(String.valueOf(selMan.getPhno()));
            txtPrincipalEx.setText(String.valueOf(selMan.getExperience()));
            txtPrincipalPassword.setText(selMan.getPassword());

        }
    }//GEN-LAST:event_btnPrincipalViewActionPerformed

    private void btnPrincipalDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrincipalDeleteActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tablePrincipal.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tablePrincipal.getModel();
            Principal selectedMan = (Principal) model.getValueAt(selectedRowIndex,0);

            system.getPrincipalList().deletePrincipal(selectedMan);

            JOptionPane.showMessageDialog(this, "Teacher deleted successfully.");

            //            dB4OUtil.storeSystem(system);
            populateTeacherTable();
        }
    }//GEN-LAST:event_btnPrincipalDeleteActionPerformed

    private void btnPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrincipalUpdateActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tablePrincipal.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tablePrincipal.getModel();
            Principal selMan = (Principal) model.getValueAt(selectedRowIndex,0);

//            selMan.setTeacherId(txtPrincipalId.getText());
            
            
            
            selMan.setName(txtPrincipalName.getText());
            if(txtPrincipalName.getText().isEmpty()){
		JOptionPane.showMessageDialog(this, "Enter valid name");
                return;
            }
            
            
//            selMan.setUsername(txtPrincipalUsername.getText());
            
            
            if(!data.numcheck(txtPrincipalAge.getText())){
                JOptionPane.showMessageDialog(this, "Enter valid age");
                return;
            }
            selMan.setAge(Integer.valueOf(txtPrincipalAge.getText()));
            
            
            
            selMan.setDob(txtPrincipalDOB.getText());
            if(!data.dateCheck(txtPrincipalDOB.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid date");
                return;
            }
            
            
            selMan.setGender(String.valueOf(cmbPrincipalGender.getSelectedItem()));
            
            
            
            selMan.setRole(txtPrincipalRole.getText());
            
            
            
            selMan.setEmailId(txtPrincipalEmailId.getText());
            if(!data.emailCheck(txtPrincipalEmailId.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid emailid");
                return;
            }
            
            
            if(!data.phnocheck(txtPrincipalPhno.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid phone no");
                return;
            }
            selMan.setPhno(Long.valueOf(txtPrincipalPhno.getText()));
            
            
            if(!data.numcheck(txtPrincipalEx.getText())){
		JOptionPane.showMessageDialog(this, "Enter valid Experience");
                return;
            }
            selMan.setExperience(Integer.valueOf(txtPrincipalEx.getText()));
            
            
            
            selMan.setPassword(txtPrincipalPassword.getText());
            if(txtPrincipalPassword.getText().isEmpty()){
		JOptionPane.showMessageDialog(this, "Enter valid password");
                return;
            }
            

            JOptionPane.showMessageDialog(this, "Principal updated successfully");

            //            dB4OUtil.storeSystem(system);
            populatePrincipalTable();

        }
    }//GEN-LAST:event_btnPrincipalUpdateActionPerformed

    private void btnPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrincipalActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelPrincipal);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnPrincipalActionPerformed

    private void btnApplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplicationActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelApplications);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnApplicationActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        String appNo = txtApplicationNo.getText();
        if(appNo.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Application Number");
            return;
        }
        else if(system.getApplicationList().uiqueApplicationId(appNo) == false){
            JOptionPane.showMessageDialog(this, "Application Number already exist");
            return;
        }

        
//        if(appNo.isEmpty()){
//            JOptionPane.showMessageDialog(this, "Enter the Application Number");
//            return;
//        }
//        else if(system.getCareTakerList().uiqueCaretakerId(appNo)== false){
//            JOptionPane.showMessageDialog(this, "Application Number already exist");
//            return;
//        }

        
        
        String name = txtChildName.getText();
        if(name.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the name");
            return;
        }
        
        
        if(data.numcheck(txtChildAge.getText())==false){
            JOptionPane.showMessageDialog(this, "Enter valid age");
            return;
        }
        Integer age = Integer.valueOf(txtChildAge.getText());
        
        
        
        String dob = txtChildDOB.getText();
        if(!data.dateCheck(dob)){
            JOptionPane.showMessageDialog(this, "Please enter correct date in format mm/dd/yyyy");
            return;
        }
        
        
        String gender = String.valueOf(cmbChildGender.getSelectedItem());
        
        
        
        String cls = txtChildClass.getText();
        if(cls.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Class");
            return;
        }
        
        
        String status = txtStatus.getText();
        
        
        
        String school = txtChildSchool.getText();
        
        
        
        String ngo = String.valueOf(txtNgo.getSelectedItem());
        
        
        
        String comm = txtChildComment.getText();
        if(comm.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Comments");
            return;
        }
        
        
        
        Application newApp = system.getApplicationList().addApplication();
        
        newApp.setAppNo(appNo);
        newApp.setName(name);
        newApp.setAge(age);
        newApp.setDob(dob);
        newApp.setGender(gender);
        newApp.setCls(cls);
        newApp.setStatus(status);
        newApp.setSchool(school);
        newApp.setNgo(ngo);
        newApp.setComment(comm);
        
        JOptionPane.showMessageDialog(this, "Application created successfully");
        
        txtApplicationNo.setText("");
        txtChildName.setText("");
        txtChildAge.setText("");
        txtChildDOB.setText("");
        txtChildClass.setText("");
        txtChildComment.setText("");
        
        populateApplicationTable();
        
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
       try{
        Integer selectedRowIndex = tableApplication.getSelectedRow();
        Integer ngofund = system.getBudgetList().getTotal();
//        Integer amt = ngofund.getTotal();
        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        else if(system.getApplicationList().getApplicationList().get(selectedRowIndex).getStatus().equals("Rejected")){
            JOptionPane.showMessageDialog(this, "The application is Rejected and cannot be Accepted");
            return;
        }
        else if(ngofund<20){
            JOptionPane.showMessageDialog(this, "Cannot accept as Ngo does not have sufficient funds");
            return;
        }
        else
        {
            
            
            DefaultTableModel model = (DefaultTableModel) tableApplication.getModel();
            Application selApp = (Application) model.getValueAt(selectedRowIndex,0);
            selApp.setStatus("Accepted");
            system.getBudgetList().getMoney().setTotal(ngofund - 20);
            
            
            Integer total = system.getBudgetList().getMoney().getTotal();
            Integer others = system.getBudgetList().getMoney().getOthers();
            Integer don = system.getBudgetList().getMoney().getDonation();
            
            if(others>=20){
                system.getBudgetList().getMoney().setOthers(others - 20);
            }
            else{
                system.getBudgetList().getMoney().setDonation(don-20);
            }
            
            populateApplicationTable();
        }
       }catch(NullPointerException ne){
           JOptionPane.showMessageDialog(this, "Cannot accept as Ngo does not have sufficient funds");
       }
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableApplication.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        
        Application a = system.getApplicationList().getApplicationList().get(selectedRowIndex);
        if(a.getStatus().equals("Rejected") || a.getStatus().equals("Accepted") ){
            JOptionPane.showMessageDialog(this, "Only Pending status applications can be viewed");
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableApplication.getModel();
            Application selApp = (Application) model.getValueAt(selectedRowIndex,0);
            
            txtApplicationNo.setText(selApp.getAppNo());
            txtChildName.setText(selApp.getName());
            txtChildAge.setText(String.valueOf(selApp.getAge()));
            txtChildDOB.setText(selApp.getDob());
            cmbChildGender.setSelectedItem(selApp.getGender());
            txtChildClass.setText(selApp.getCls());
            txtStatus.setText(selApp.getStatus());
            txtNgo.setSelectedItem(selApp.getNgo());
            txtChildComment.setText(selApp.getComment());
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableApplication.getSelectedRow();
        
        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        else if(system.getApplicationList().getApplicationList().get(selectedRowIndex).getStatus().equals("Accepted")){
            
            JOptionPane.showMessageDialog(this, "The application is Accepted and cannot be Rejected");
            return;
        }
        else{
//            System.out.println(a.getStatus());
            DefaultTableModel model = (DefaultTableModel) tableApplication.getModel();
            Application selApp = (Application) model.getValueAt(selectedRowIndex,0);
            
            selApp.setStatus("Rejected");
            
            populateApplicationTable();
        }
    }//GEN-LAST:event_btnRejectActionPerformed

    private void btnClear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClear1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClear1ActionPerformed

    private void btnAccept1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAccept1ActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableJobApp.getSelectedRow();
        
        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        else if(system.getApplist().getAppList().get(selectedRowIndex).getStatus().equals("Rejected")){
            JOptionPane.showMessageDialog(this, "The application is Rejected and cannot be Accepted");
            return;
        }
        else{
            DefaultTableModel model = (DefaultTableModel) tableJobApp.getModel();
            TeacherApply selApp = (TeacherApply) model.getValueAt(selectedRowIndex,0);
            selApp.setStatus("Accepted");
            
            
            
            populateAppTable();
        }
        
    }//GEN-LAST:event_btnAccept1ActionPerformed

    private void btnReject1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReject1ActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableJobApp.getSelectedRow();
        
        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        else if(system.getApplist().getAppList().get(selectedRowIndex).getStatus().equals("Accepted")){
            JOptionPane.showMessageDialog(this, "The application is Rejected and cannot be Accepted");
            return;
        }
        else{
            DefaultTableModel model = (DefaultTableModel) tableJobApp.getModel();
            TeacherApply selApp = (TeacherApply) model.getValueAt(selectedRowIndex,0);
            selApp.setStatus("Rejected");
            
            
            
            populateAppTable();
        }
    }//GEN-LAST:event_btnReject1ActionPerformed

    private void btnView1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnView1ActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableJobApp.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        
        TeacherApply a = system.getApplist().getAppList().get(selectedRowIndex);
        if(a.getStatus().equals("Rejected") || a.getStatus().equals("Accepted") ){
            JOptionPane.showMessageDialog(this, "Only Pending status applications can be viewed");
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableJobApp.getModel();
            TeacherApply selApp = (TeacherApply) model.getValueAt(selectedRowIndex,0);
            
            txtAppId.setText(selApp.getAppId());
            txtUsername.setText(selApp.getUsername());
            txtName.setText(selApp.getName());
            txtAge.setText(String.valueOf(selApp.getAge()));
            txtGender.setText(selApp.getGender());
            txtEx.setText(String.valueOf(selApp.getExperience()));
            txtQua.setText(selApp.getQualification());
            txtComm.setText(selApp.getComment());
            txtSubject.setText(selApp.getSubject());
            txtEmailId.setText(selApp.getEmailId());
        }
        
    }//GEN-LAST:event_btnView1ActionPerformed

    private void btnJobAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJobAppActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelJobApply);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnJobAppActionPerformed

    private void txtStudentSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStudentSearchKeyReleased
        // TODO add your handling code here:
        String searchQuery = txtStudentSearch.getText();
        SearchStudent(searchQuery);
        
        
    }//GEN-LAST:event_txtStudentSearchKeyReleased

    private void txtTeacherNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTeacherNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTeacherNameActionPerformed

    private void populateTeacherTable(){
        DefaultTableModel model = (DefaultTableModel) tableTeacher.getModel();
        model.setRowCount(0);
        
//        
            for(Teacher man: system.getTeacherList().getTeacherList()){

                Object[] row = new Object[5];
                row[0] = man; 
                row[1] = man.getName();
                row[2] = man.getUsername();
                row[3] = man.getAge();
                row[4] = man.getEmailId();
                model.addRow(row);
            }
    }
    
    private void populateStudentTable(){
        DefaultTableModel model = (DefaultTableModel) tableStudent.getModel();
        model.setRowCount(0);
        
//        
            for(Student man: system.getStudentList().getStudentList()){

                Object[] row = new Object[5];
                row[0] = man; 
                row[1] = man.getName();
                row[2] = man.getCls();
                row[3] = man.getAge();
                row[4] = man.getEmailId();
                model.addRow(row);
            }
    }
    
    private void populatePrincipalTable(){
        DefaultTableModel model = (DefaultTableModel) tablePrincipal.getModel();
        model.setRowCount(0);
        
//        
            for(Principal man: system.getPrincipalList().getPrincipalList()){

                Object[] row = new Object[5];
                row[0] = man; 
                row[1] = man.getName();
                row[2] = man.getUsername();
                row[3] = man.getAge();
                row[4] = man.getEmailId();
                model.addRow(row);
            }
    }
    
    public void populateApplicationTable(){
        DefaultTableModel model = (DefaultTableModel) tableApplication.getModel();
        model.setRowCount(0);
        
//        
            for(Application man: system.getApplicationList().getApplicationList()){

                Object[] row = new Object[6];
                row[0] = man; 
                row[1] = man.getName();
                row[2] = man.getAge();
                row[3] = man.getGender();
                row[4] = man.getNgo();
                row[5] = man.getStatus();
                model.addRow(row);
            }
    }

     private void populateAppTable(){
        DefaultTableModel model = (DefaultTableModel) tableJobApp.getModel();
        model.setRowCount(0);
        
//        
            for(TeacherApply man: system.getApplist().getAppList()){

                Object[] row = new Object[5];
                row[0] = man; 
                row[1] = man.getName();
                row[2] = man.getSubject();
                row[3] = man.getEmailId();
                row[4] = man.getStatus();
                model.addRow(row);
            }
    }
     
    public void populateCombo(){
         
        String[] docArr1 = system.getTeacherList().teaUsernameArray();
        DefaultComboBoxModel dn1 = new DefaultComboBoxModel(docArr1);
        txtStudentTeacherId.setModel(dn1);
     }
    
    public void SearchStudent(String query){
        DefaultTableModel model = (DefaultTableModel) tableStudent.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        
        tableStudent.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane6;
    private javax.swing.JScrollPane ScrollPaneNgoManager;
    private javax.swing.JScrollPane ScrollPaneNgoManager1;
    private javax.swing.JScrollPane ScrollPaneNgoManager2;
    private javax.swing.JSplitPane SplitPaneSchoolAdmin;
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnAccept1;
    private javax.swing.JButton btnApplication;
    private javax.swing.JButton btnClear1;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnJobApp;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnPrincipal;
    private javax.swing.JButton btnPrincipalCreate;
    private javax.swing.JButton btnPrincipalDelete;
    private javax.swing.JButton btnPrincipalUpdate;
    private javax.swing.JButton btnPrincipalView;
    private javax.swing.JButton btnReject;
    private javax.swing.JButton btnReject1;
    private javax.swing.JButton btnStudent;
    private javax.swing.JButton btnStudentCreate;
    private javax.swing.JButton btnStudentDelete;
    private javax.swing.JButton btnStudentUpdate;
    private javax.swing.JButton btnStudentView;
    private javax.swing.JButton btnTeacher;
    private javax.swing.JButton btnTeacherCreate;
    private javax.swing.JButton btnTeacherDelete;
    private javax.swing.JButton btnTeacherUpdate;
    private javax.swing.JButton btnTeacherView;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnView1;
    private javax.swing.JComboBox<String> cmbChildGender;
    private javax.swing.JComboBox<String> cmbPrincipalGender;
    private javax.swing.JComboBox<String> cmbStudentGender;
    private javax.swing.JComboBox<String> cmbTeacherGender;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAge1;
    private javax.swing.JLabel lblApplicationNo;
    private javax.swing.JLabel lblChildAge;
    private javax.swing.JLabel lblChildName;
    private javax.swing.JLabel lblChildName2;
    private javax.swing.JLabel lblChildName3;
    private javax.swing.JLabel lblChildName4;
    private javax.swing.JLabel lblChildName5;
    private javax.swing.JLabel lblChildName6;
    private javax.swing.JLabel lblChildName7;
    private javax.swing.JLabel lblEmailid;
    private javax.swing.JLabel lblNgoManagerId;
    private javax.swing.JLabel lblPrincipalAge;
    private javax.swing.JLabel lblPrincipalDOB;
    private javax.swing.JLabel lblPrincipalEmailId;
    private javax.swing.JLabel lblPrincipalGender;
    private javax.swing.JLabel lblPrincipalId;
    private javax.swing.JLabel lblPrincipalName;
    private javax.swing.JLabel lblPrincipalRole;
    private javax.swing.JLabel lblPrincipalUsername;
    private javax.swing.JLabel lblQua;
    private javax.swing.JLabel lblQua1;
    private javax.swing.JLabel lblQua2;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblSchool;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblStatus1;
    private javax.swing.JLabel lblStudentClass;
    private javax.swing.JLabel lblStudentEmailId;
    private javax.swing.JLabel lblStudentGender;
    private javax.swing.JLabel lblStudentId;
    private javax.swing.JLabel lblStudentName;
    private javax.swing.JLabel lblStudentPhno;
    private javax.swing.JLabel lblStudentPhno1;
    private javax.swing.JLabel lblStudentRole;
    private javax.swing.JLabel lblStudentSearch;
    private javax.swing.JLabel lblSub;
    private javax.swing.JLabel lblTeacherAge;
    private javax.swing.JLabel lblTeacherAge1;
    private javax.swing.JLabel lblTeacherDOB;
    private javax.swing.JLabel lblTeacherDOB1;
    private javax.swing.JLabel lblTeacherEmailId;
    private javax.swing.JLabel lblTeacherEx;
    private javax.swing.JLabel lblTeacherEx1;
    private javax.swing.JLabel lblTeacherGender;
    private javax.swing.JLabel lblTeacherName;
    private javax.swing.JLabel lblTeacherPassword;
    private javax.swing.JLabel lblTeacherPassword1;
    private javax.swing.JLabel lblTeacherPhno;
    private javax.swing.JLabel lblTeacherPhno1;
    private javax.swing.JLabel lblTeacherRole;
    private javax.swing.JLabel lblTeacherSearch;
    private javax.swing.JLabel lblTeacherUsername;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblTitle2;
    private javax.swing.JLabel lblTitle3;
    private javax.swing.JLabel lblTitle4;
    private javax.swing.JLabel lblTitle5;
    private javax.swing.JLabel lblTitle7;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblUsername1;
    private javax.swing.JLabel lblUsername2;
    private javax.swing.JPanel panelApplications;
    private javax.swing.JPanel panelControl;
    private javax.swing.JPanel panelHome;
    private javax.swing.JPanel panelJobApply;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel panelStudent;
    private javax.swing.JPanel panelTeacher;
    private javax.swing.JPanel panelWork;
    private javax.swing.JTable tableApplication;
    private javax.swing.JTable tableJobApp;
    private javax.swing.JTable tablePrincipal;
    private javax.swing.JTable tableStudent;
    private javax.swing.JTable tableTeacher;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtAppId;
    private javax.swing.JTextField txtApplicationNo;
    private javax.swing.JTextField txtChildAge;
    private javax.swing.JTextField txtChildClass;
    private javax.swing.JTextArea txtChildComment;
    private javax.swing.JTextField txtChildDOB;
    private javax.swing.JTextField txtChildName;
    private javax.swing.JTextField txtChildSchool;
    private javax.swing.JTextArea txtComm;
    private javax.swing.JTextField txtEmailId;
    private javax.swing.JTextField txtEx;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtName;
    private javax.swing.JComboBox<String> txtNgo;
    private javax.swing.JTextField txtPrincipalAge;
    private javax.swing.JTextField txtPrincipalDOB;
    private javax.swing.JTextField txtPrincipalEmailId;
    private javax.swing.JTextField txtPrincipalEx;
    private javax.swing.JTextField txtPrincipalId;
    private javax.swing.JTextField txtPrincipalName;
    private javax.swing.JPasswordField txtPrincipalPassword;
    private javax.swing.JTextField txtPrincipalPhno;
    private javax.swing.JTextField txtPrincipalRole;
    private javax.swing.JTextField txtPrincipalUsername;
    private javax.swing.JTextField txtQua;
    private javax.swing.JTextField txtSchool;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtStatus1;
    private javax.swing.JTextField txtStudentAge;
    private javax.swing.JTextField txtStudentClass;
    private javax.swing.JTextField txtStudentDOB;
    private javax.swing.JTextField txtStudentEmailId;
    private javax.swing.JTextField txtStudentId;
    private javax.swing.JTextField txtStudentName;
    private javax.swing.JTextField txtStudentPhno;
    private javax.swing.JTextField txtStudentRole;
    private javax.swing.JTextField txtStudentSearch;
    private javax.swing.JComboBox<String> txtStudentTeacherId;
    private javax.swing.JTextField txtSubject;
    private javax.swing.JTextField txtTeacherAge;
    private javax.swing.JTextField txtTeacherDOB;
    private javax.swing.JTextField txtTeacherEmailId;
    private javax.swing.JTextField txtTeacherEx;
    private javax.swing.JTextField txtTeacherId;
    private javax.swing.JTextField txtTeacherName;
    private javax.swing.JPasswordField txtTeacherPassword;
    private javax.swing.JTextField txtTeacherPhno;
    private javax.swing.JTextField txtTeacherRole;
    private javax.swing.JTextField txtTeacherSearch;
    private javax.swing.JTextField txtTeacherUsername;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
