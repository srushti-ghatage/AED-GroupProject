/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Ui.MedStore;

import Hospital.Encounter.Encounter;
import Ngo.Order.NgoOrder;
import Pharmacy.Medicine.Medicine;
import Pharmacy.Order.Order;
import Pharmacy.Pharmacist.Pharmacist;
import System.Directories.DB4OUtil;
import System.Directories.DataValidation;
import System.Directories.MainSystem;
import java.awt.CardLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SrushtiGhatage
 */
public class PharmacistWorkspace extends javax.swing.JPanel {

    /**
     * Creates new form PharmacistWorkspace
     */
    private JPanel cardPanel;
    private MainSystem system;
    private DB4OUtil dB4OUtil;
    private Pharmacist pharm;
    private DataValidation data;
    
    public PharmacistWorkspace(Pharmacist pharm,JPanel cardPanel, MainSystem system, DB4OUtil dB4OUtil) {
        initComponents();
        this.cardPanel = cardPanel;
        this.system = system;
        this.dB4OUtil = dB4OUtil;
        this.pharm = pharm;
        this.data = new DataValidation();
        
        
        populateHospitalEncounterOrderTable();
        populateNgoOrderTable();
        populateItemTable();
        populateCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        panelControl = new javax.swing.JPanel();
        btnHome = new javax.swing.JButton();
        btnBilling = new javax.swing.JButton();
        btnNgoOrders = new javax.swing.JButton();
        panelWork = new javax.swing.JPanel();
        panelHome = new javax.swing.JPanel();
        lblTitle2 = new javax.swing.JLabel();
        lblRole = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JButton();
        panelBilling = new javax.swing.JPanel();
        lblTitle4 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableEncounter = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tableItem = new javax.swing.JTable();
        lblPatientUsername1 = new javax.swing.JLabel();
        txtItemName1 = new javax.swing.JTextField();
        lblPatientName2 = new javax.swing.JLabel();
        txtItemCost1 = new javax.swing.JTextField();
        lblPatientAge1 = new javax.swing.JLabel();
        txtItemExDate1 = new javax.swing.JTextField();
        lblPatientEmail2 = new javax.swing.JLabel();
        txtItemQuantity1 = new javax.swing.JTextField();
        btnSelectItem = new javax.swing.JButton();
        lblOrderId = new javax.swing.JLabel();
        txtItemOrderId = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtReceipt = new javax.swing.JTextArea();
        btnPrintBill = new javax.swing.JButton();
        btnBillOrder = new javax.swing.JButton();
        panelNgoOrders = new javax.swing.JPanel();
        lblTitle6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableNgoOrder = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtOrderId = new javax.swing.JTextField();
        txtStatus = new javax.swing.JTextField();
        btnOutForDelivery = new javax.swing.JButton();
        btnViewOrder = new javax.swing.JButton();
        btnUpdateOrder = new javax.swing.JButton();
        btnCancelOrder = new javax.swing.JButton();
        btnDelivered = new javax.swing.JButton();
        txtItem = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        txtShopkeerId = new javax.swing.JComboBox<>();
        txtDeliveryManId = new javax.swing.JComboBox<>();

        panelControl.setBackground(new java.awt.Color(51, 51, 51));

        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnBilling.setText("Billing");
        btnBilling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBillingActionPerformed(evt);
            }
        });

        btnNgoOrders.setText("NGO Orders");
        btnNgoOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNgoOrdersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelControlLayout = new javax.swing.GroupLayout(panelControl);
        panelControl.setLayout(panelControlLayout);
        panelControlLayout.setHorizontalGroup(
            panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelControlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBilling, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNgoOrders, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelControlLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        panelControlLayout.setVerticalGroup(
            panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelControlLayout.createSequentialGroup()
                .addContainerGap(390, Short.MAX_VALUE)
                .addComponent(btnNgoOrders)
                .addGap(18, 18, 18)
                .addComponent(btnBilling)
                .addGap(296, 296, 296))
            .addGroup(panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelControlLayout.createSequentialGroup()
                    .addGap(187, 187, 187)
                    .addComponent(btnHome)
                    .addContainerGap(540, Short.MAX_VALUE)))
        );

        jSplitPane1.setLeftComponent(panelControl);

        panelWork.setLayout(new java.awt.CardLayout());

        lblTitle2.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitle2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle2.setText("Medical Store");

        lblRole.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        lblRole.setText("Role: Pharmacist");

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelHomeLayout = new javax.swing.GroupLayout(panelHome);
        panelHome.setLayout(panelHomeLayout);
        panelHomeLayout.setHorizontalGroup(
            panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHomeLayout.createSequentialGroup()
                .addContainerGap(893, Short.MAX_VALUE)
                .addGroup(panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHomeLayout.createSequentialGroup()
                        .addComponent(lblRole)
                        .addGap(186, 186, 186))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHomeLayout.createSequentialGroup()
                        .addComponent(btnLogOut)
                        .addGap(205, 205, 205))))
        );
        panelHomeLayout.setVerticalGroup(
            panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle2)
                .addGap(51, 51, 51)
                .addComponent(lblRole)
                .addGap(12, 12, 12)
                .addComponent(btnLogOut)
                .addContainerGap(599, Short.MAX_VALUE))
        );

        panelWork.add(panelHome, "card2");

        panelBilling.setBackground(new java.awt.Color(204, 255, 255));

        lblTitle4.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitle4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle4.setText("Medical Billing");

        tableEncounter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Encounter No", "Medicine", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tableEncounter);

        tableItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Item Id", "Name", "Cost", "Expiry Date", "Quantity", "Availability"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tableItem);

        lblPatientUsername1.setText("Item Name:");

        txtItemName1.setEditable(false);

        lblPatientName2.setText("Cost:");

        txtItemCost1.setEditable(false);

        lblPatientAge1.setText("Expiry Date:");

        txtItemExDate1.setEditable(false);

        lblPatientEmail2.setText("Quantity:");

        txtItemQuantity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemQuantity1ActionPerformed(evt);
            }
        });

        btnSelectItem.setText("Select");
        btnSelectItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectItemActionPerformed(evt);
            }
        });

        lblOrderId.setText("Order Id:");

        txtItemOrderId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemOrderIdActionPerformed(evt);
            }
        });

        txtReceipt.setColumns(20);
        txtReceipt.setRows(5);
        jScrollPane7.setViewportView(txtReceipt);

        btnPrintBill.setText("Print");
        btnPrintBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintBillActionPerformed(evt);
            }
        });

        btnBillOrder.setText("Order");
        btnBillOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBillOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBillingLayout = new javax.swing.GroupLayout(panelBilling);
        panelBilling.setLayout(panelBillingLayout);
        panelBillingLayout.setHorizontalGroup(
            panelBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelBillingLayout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addComponent(btnBillOrder)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBillingLayout.createSequentialGroup()
                .addContainerGap(1092, Short.MAX_VALUE)
                .addComponent(btnPrintBill)
                .addGap(136, 136, 136))
            .addGroup(panelBillingLayout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addGroup(panelBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBillingLayout.createSequentialGroup()
                        .addGroup(panelBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSelectItem)
                            .addGroup(panelBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane6)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelBillingLayout.createSequentialGroup()
                        .addGroup(panelBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPatientUsername1)
                            .addComponent(lblPatientName2)
                            .addComponent(lblPatientAge1)
                            .addComponent(lblPatientEmail2)
                            .addComponent(lblOrderId))
                        .addGap(47, 47, 47)
                        .addGroup(panelBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtItemOrderId, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
                            .addComponent(txtItemName1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtItemCost1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtItemExDate1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtItemQuantity1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(85, 85, 85)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65))))
        );
        panelBillingLayout.setVerticalGroup(
            panelBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBillingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle4)
                .addGroup(panelBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBillingLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSelectItem)
                        .addGap(38, 38, 38)
                        .addGroup(panelBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtItemOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblOrderId))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelBillingLayout.createSequentialGroup()
                                .addGroup(panelBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtItemName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPatientUsername1))
                                .addGap(28, 28, 28)
                                .addGroup(panelBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtItemCost1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPatientName2))
                                .addGap(40, 40, 40)
                                .addGroup(panelBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtItemExDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPatientAge1))
                                .addGap(52, 52, 52))
                            .addGroup(panelBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtItemQuantity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblPatientEmail2))))
                    .addGroup(panelBillingLayout.createSequentialGroup()
                        .addGap(351, 351, 351)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(btnBillOrder)
                .addGap(21, 21, 21)
                .addComponent(btnPrintBill)
                .addGap(34, 34, 34))
        );

        panelWork.add(panelBilling, "card7");

        lblTitle6.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitle6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle6.setText("NGO Orders");

        tableNgoOrder.setAutoCreateRowSorter(true);
        tableNgoOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Order Id", "Shopkeeper Id", "Delivery Man Id", "Item", "Quantity", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tableNgoOrder);

        jLabel1.setText("Shopkeeper Id:");

        jLabel2.setText("DeliveryMan Id:");

        jLabel3.setText("Order Id:");

        jLabel4.setText("Item:");

        jLabel5.setText("Status:");

        txtOrderId.setEditable(false);
        txtOrderId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrderIdActionPerformed(evt);
            }
        });

        txtStatus.setEditable(false);

        btnOutForDelivery.setText("Out For Delivery");
        btnOutForDelivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutForDeliveryActionPerformed(evt);
            }
        });

        btnViewOrder.setText("View");
        btnViewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewOrderActionPerformed(evt);
            }
        });

        btnUpdateOrder.setText("Update");
        btnUpdateOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateOrderActionPerformed(evt);
            }
        });

        btnCancelOrder.setText("Cancel Order");
        btnCancelOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelOrderActionPerformed(evt);
            }
        });

        btnDelivered.setText("Delivered");
        btnDelivered.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeliveredActionPerformed(evt);
            }
        });

        txtItem.setEditable(false);

        jLabel7.setText("Quantity:");

        txtQty.setEditable(false);

        javax.swing.GroupLayout panelNgoOrdersLayout = new javax.swing.GroupLayout(panelNgoOrders);
        panelNgoOrders.setLayout(panelNgoOrdersLayout);
        panelNgoOrdersLayout.setHorizontalGroup(
            panelNgoOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNgoOrdersLayout.createSequentialGroup()
                .addGap(0, 565, Short.MAX_VALUE)
                .addComponent(btnViewOrder)
                .addGap(663, 663, 663))
            .addGroup(panelNgoOrdersLayout.createSequentialGroup()
                .addGroup(panelNgoOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelNgoOrdersLayout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(btnUpdateOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(btnCancelOrder)
                        .addGap(33, 33, 33)
                        .addComponent(btnOutForDelivery)
                        .addGap(27, 27, 27)
                        .addComponent(btnDelivered))
                    .addGroup(panelNgoOrdersLayout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addGroup(panelNgoOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(38, 38, 38)
                        .addGroup(panelNgoOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelNgoOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                .addComponent(txtOrderId, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                .addComponent(txtItem)
                                .addComponent(txtQty)
                                .addComponent(txtShopkeerId, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtDeliveryManId, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(panelNgoOrdersLayout.createSequentialGroup()
                        .addGap(306, 306, 306)
                        .addComponent(lblTitle6, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelNgoOrdersLayout.setVerticalGroup(
            panelNgoOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNgoOrdersLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(lblTitle6)
                .addGap(76, 76, 76)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnViewOrder)
                .addGap(41, 41, 41)
                .addGroup(panelNgoOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtShopkeerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelNgoOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDeliveryManId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelNgoOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelNgoOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelNgoOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelNgoOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addGroup(panelNgoOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOutForDelivery)
                    .addComponent(btnUpdateOrder)
                    .addComponent(btnCancelOrder)
                    .addComponent(btnDelivered))
                .addGap(24, 24, 24))
        );

        panelWork.add(panelNgoOrders, "card9");

        jSplitPane1.setRightComponent(panelWork);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelHome);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnBillingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBillingActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelBilling);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnBillingActionPerformed

    private void btnNgoOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNgoOrdersActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelNgoOrders);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnNgoOrdersActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        dB4OUtil.storeSystem(system);
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        cardPanel.remove(this);
        cardLayout.previous(cardPanel);
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void txtItemQuantity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemQuantity1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemQuantity1ActionPerformed

    private void btnSelectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectItemActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableItem.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        else{
            DefaultTableModel model = (DefaultTableModel) tableItem.getModel();
            Medicine pat = (Medicine) model.getValueAt(selectedRowIndex,0);

            if(pat.getQty()!=0){
                txtItemName1.setText(pat.getName());
                txtItemCost1.setText(String.valueOf(pat.getCost()));

                txtItemExDate1.setText(pat.getDate());

                txtItemQuantity1.setText(String.valueOf(pat.getQty()));
            }
            else{
                JOptionPane.showMessageDialog(this, "The Item is not available");
                return;
            }
        }
    }//GEN-LAST:event_btnSelectItemActionPerformed

    private void txtItemOrderIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemOrderIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemOrderIdActionPerformed

    private void btnPrintBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintBillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrintBillActionPerformed

    private void txtOrderIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrderIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrderIdActionPerformed

    private void btnOutForDeliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutForDeliveryActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableNgoOrder.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{

            DefaultTableModel model = (DefaultTableModel) tableNgoOrder.getModel();
            NgoOrder selMan = (NgoOrder) model.getValueAt(selectedRowIndex,0);

            Integer qty = selMan.getQty();
            String name = selMan.getItems();
            if(selMan.getStatus().equals("Pending")){
                selMan.setStatus("Out for Delivery");

                Medicine m = system.getMedicineList().findMedicine(name);
                Integer currQty = m.getQty();
                m.setQty(currQty - qty);
                populateItemTable();
                populateNgoOrderTable();
            }
            else{
                JOptionPane.showMessageDialog(this, "Cannot accept this process");
                return;
            }
        }
    }//GEN-LAST:event_btnOutForDeliveryActionPerformed

    private void btnViewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewOrderActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableNgoOrder.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{

            DefaultTableModel model = (DefaultTableModel) tableNgoOrder.getModel();
            NgoOrder selMan = (NgoOrder) model.getValueAt(selectedRowIndex,0);

            if(selMan.getStatus().equals("Cancelled") || selMan.getStatus().equals("Delivered")){

                JOptionPane.showMessageDialog(this, "Cannot be Viewed");
                return;
            }
            else{
                txtOrderId.setText(selMan.getOrderid());
                txtItem.setText(selMan.getItems());
                txtQty.setText(String.valueOf(selMan.getQty()));
                txtStatus.setText(selMan.getStatus());
            }
        }

    }//GEN-LAST:event_btnViewOrderActionPerformed

    private void btnUpdateOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateOrderActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableNgoOrder.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{

            DefaultTableModel model = (DefaultTableModel) tableNgoOrder.getModel();
            NgoOrder selMan = (NgoOrder) model.getValueAt(selectedRowIndex,0);

            if(selMan.getStatus().equals("Cancelled") || selMan.getStatus().equals("Delivered")){
                JOptionPane.showMessageDialog(this, "Cannot be updated");
            }
            else{
                selMan.setShopkeeperId(String.valueOf(txtShopkeerId.getSelectedItem()));
                selMan.setDeliveryManId(String.valueOf(txtDeliveryManId.getSelectedItem()));

                populateNgoOrderTable();
            }

            txtOrderId.setText("");
            txtItem.setText("");
            txtQty.setText("");
            txtStatus.setText("");
        }

    }//GEN-LAST:event_btnUpdateOrderActionPerformed

    private void btnCancelOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelOrderActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableNgoOrder.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else {
            DefaultTableModel model = (DefaultTableModel) tableNgoOrder.getModel();
            NgoOrder selMan = (NgoOrder) model.getValueAt(selectedRowIndex,0);

            if(selMan.getStatus()!="Delivered"){
                selMan.setStatus("Cancelled");

                populateNgoOrderTable();
            }
        }
    }//GEN-LAST:event_btnCancelOrderActionPerformed

    private void btnDeliveredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeliveredActionPerformed
        // TODO add your handling code here:

        Integer selectedRowIndex = tableNgoOrder.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{

            DefaultTableModel model = (DefaultTableModel) tableNgoOrder.getModel();
            NgoOrder selMan = (NgoOrder) model.getValueAt(selectedRowIndex,0);

            if(selMan.getStatus().equals("Out for Delivery")){
                selMan.setStatus("Delivered");

                populateNgoOrderTable();
            }
            else{
                JOptionPane.showMessageDialog(this, "Cannot accept this process");
                return;
            }
        }
    }//GEN-LAST:event_btnDeliveredActionPerformed

    private void btnBillOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBillOrderActionPerformed
        // TODO add your handling code here:
        String orderId = txtItemOrderId.getText();
        if(orderId.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the Order Id");
            return;
        }
        else if(system.getOrderList().uiqueNgoOrderId(orderId)== false){
            JOptionPane.showMessageDialog(this, "Order Id already exist");
            return;
        }

        String name = txtItemName1.getText();
        Integer cost = Integer.valueOf(txtItemCost1.getText());
        String date = txtItemExDate1.getText();

        if(data.numcheck(txtItemQuantity1.getText())==false){
            JOptionPane.showMessageDialog(this, "Enter valid Quantity");
            return;
        }
        Integer qty = Integer.valueOf(txtItemQuantity1.getText());

        Order o = system.getOrderList().addOrder();

        o.setOrderid(orderId);
        o.setItem(name);
        o.setCost(cost);
        o.setDate(date);
        o.setQty(qty);

        Medicine m = system.getMedicineList().findMedicine(name);
        Integer currQty = m.getQty();
        m.setQty(currQty - qty);
        populateItemTable();
        JOptionPane.showMessageDialog(this, "Order generated successfully");

        txtReceipt.append("\t\t Receipt \n\n"+
            "Order Id: \t\t\t" + txtOrderId.getText()+ "\n\n"+

            "\n==============================================================\n"+
            "Item: \t\t\t"+ txtItemName1.getText()+ "\n\n"+
            "Quantity: \t\t\t"+ txtItemQuantity1.getText()+ "\n\n"+
            "Cost: \t\t\t"+ txtItemCost1.getText()+ "\n\n"

        );

        txtItemOrderId.setText("");
        txtItemName1.setText("");
        txtItemCost1.setText("");
        txtItemExDate1.setText("");
        txtItemQuantity1.setText("");

//        populateMedOrders();

    }//GEN-LAST:event_btnBillOrderActionPerformed


    
    private void populateHospitalEncounterOrderTable(){
        DefaultTableModel model = (DefaultTableModel) tableEncounter.getModel();
        model.setRowCount(0);
        
            for(Encounter e: system.getEncounterlist().getHospitalEncounterList()){
                  
                Object[] row = new Object[3];
                row[0] = e;
                row[1] = e.getMedicine();
                row[2] = e.getMedicineQuantity();

                model.addRow(row);
            }
    }   
    
    private void populateNgoOrderTable(){
        
        DefaultTableModel model = (DefaultTableModel) tableNgoOrder.getModel();
        model.setRowCount(0);
        
            for(NgoOrder e: system.getNgoOrderList().getNgoOrderList()){
                  
                Object[] row = new Object[6];
                row[0] = e;
                row[1] = e.getShopkeeperId();
                row[2] = e.getDeliveryManId();
                row[3] = e.getItems();
                row[4] = e.getQty();
                row[5] = e.getStatus();

                model.addRow(row);
            }
    }
    
     private void populateItemTable(){
        DefaultTableModel model = (DefaultTableModel) tableItem.getModel();
        model.setRowCount(0);
        
            for(Medicine e: system.getMedicineList().getMedList()){
                  
                Object[] row = new Object[6];
                row[0] = e;
                row[1] = e.getName();
                row[2] = e.getCost(); 
                row[3] = e.getDate();
                row[4] = e.getQty();
                row[5] = e.getAv();

                model.addRow(row);
            }
    }   
    public void populateCombo(){
        String[] docArr1 = system.getPharmlist().pharUsernameArray();
        DefaultComboBoxModel dn1 = new DefaultComboBoxModel(docArr1);
        txtShopkeerId.setModel(dn1);
        
        String[] docArr = system.getDeliveryManlist().delUsernameArray();
        DefaultComboBoxModel dn = new DefaultComboBoxModel(docArr);
        txtDeliveryManId.setModel(dn);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBillOrder;
    private javax.swing.JButton btnBilling;
    private javax.swing.JButton btnCancelOrder;
    private javax.swing.JButton btnDelivered;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnNgoOrders;
    private javax.swing.JButton btnOutForDelivery;
    private javax.swing.JButton btnPrintBill;
    private javax.swing.JButton btnSelectItem;
    private javax.swing.JButton btnUpdateOrder;
    private javax.swing.JButton btnViewOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel lblOrderId;
    private javax.swing.JLabel lblPatientAge1;
    private javax.swing.JLabel lblPatientEmail2;
    private javax.swing.JLabel lblPatientName2;
    private javax.swing.JLabel lblPatientUsername1;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblTitle2;
    private javax.swing.JLabel lblTitle4;
    private javax.swing.JLabel lblTitle6;
    private javax.swing.JPanel panelBilling;
    private javax.swing.JPanel panelControl;
    private javax.swing.JPanel panelHome;
    private javax.swing.JPanel panelNgoOrders;
    private javax.swing.JPanel panelWork;
    private javax.swing.JTable tableEncounter;
    private javax.swing.JTable tableItem;
    private javax.swing.JTable tableNgoOrder;
    private javax.swing.JComboBox<String> txtDeliveryManId;
    private javax.swing.JTextField txtItem;
    private javax.swing.JTextField txtItemCost1;
    private javax.swing.JTextField txtItemExDate1;
    private javax.swing.JTextField txtItemName1;
    private javax.swing.JTextField txtItemOrderId;
    private javax.swing.JTextField txtItemQuantity1;
    private javax.swing.JTextField txtOrderId;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextArea txtReceipt;
    private javax.swing.JComboBox<String> txtShopkeerId;
    private javax.swing.JTextField txtStatus;
    // End of variables declaration//GEN-END:variables
}
